// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResCollection : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResCollection GetRootAsRogueResCollection(ByteBuffer _bb) { return GetRootAsRogueResCollection(_bb, new RogueResCollection()); }
  public static RogueResCollection GetRootAsRogueResCollection(ByteBuffer _bb, RogueResCollection obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResCollection __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int IdKey { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Index { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SortId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(14); }
  public int RuleId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Cond { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Award { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RogueResCollection> CreateRogueResCollection(FlatBufferBuilder builder,
      int id_key = 0,
      int id = 0,
      int index = 0,
      int type = 0,
      int sort_id = 0,
      StringOffset descOffset = default(StringOffset),
      int rule_id = 0,
      int cond = 0,
      int award = 0) {
    builder.StartTable(9);
    RogueResCollection.AddAward(builder, award);
    RogueResCollection.AddCond(builder, cond);
    RogueResCollection.AddRuleId(builder, rule_id);
    RogueResCollection.AddDesc(builder, descOffset);
    RogueResCollection.AddSortId(builder, sort_id);
    RogueResCollection.AddType(builder, type);
    RogueResCollection.AddIndex(builder, index);
    RogueResCollection.AddId(builder, id);
    RogueResCollection.AddIdKey(builder, id_key);
    return RogueResCollection.EndRogueResCollection(builder);
  }

  public static void StartRogueResCollection(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddIdKey(FlatBufferBuilder builder, int idKey) { builder.AddInt(0, idKey, 0); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(1, id, 0); }
  public static void AddIndex(FlatBufferBuilder builder, int index) { builder.AddInt(2, index, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(3, type, 0); }
  public static void AddSortId(FlatBufferBuilder builder, int sortId) { builder.AddInt(4, sortId, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(5, descOffset.Value, 0); }
  public static void AddRuleId(FlatBufferBuilder builder, int ruleId) { builder.AddInt(6, ruleId, 0); }
  public static void AddCond(FlatBufferBuilder builder, int cond) { builder.AddInt(7, cond, 0); }
  public static void AddAward(FlatBufferBuilder builder, int award) { builder.AddInt(8, award, 0); }
  public static Offset<WWParser.Defs.RogueResCollection> EndRogueResCollection(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResCollection>(o);
  }
  public RogueResCollectionT UnPack() {
    var _o = new RogueResCollectionT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResCollectionT _o) {
    _o.IdKey = this.IdKey;
    _o.Id = this.Id;
    _o.Index = this.Index;
    _o.Type = this.Type;
    _o.SortId = this.SortId;
    _o.Desc = this.Desc;
    _o.RuleId = this.RuleId;
    _o.Cond = this.Cond;
    _o.Award = this.Award;
  }
  public static Offset<WWParser.Defs.RogueResCollection> Pack(FlatBufferBuilder builder, RogueResCollectionT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResCollection>);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    return CreateRogueResCollection(
      builder,
      _o.IdKey,
      _o.Id,
      _o.Index,
      _o.Type,
      _o.SortId,
      _desc,
      _o.RuleId,
      _o.Cond,
      _o.Award);
  }
}

public class RogueResCollectionT
{
  [Newtonsoft.Json.JsonProperty("id_key")]
  public int IdKey { get; set; }
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("index")]
  public int Index { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_id")]
  public int SortId { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("rule_id")]
  public int RuleId { get; set; }
  [Newtonsoft.Json.JsonProperty("cond")]
  public int Cond { get; set; }
  [Newtonsoft.Json.JsonProperty("award")]
  public int Award { get; set; }

  public RogueResCollectionT() {
    this.IdKey = 0;
    this.Id = 0;
    this.Index = 0;
    this.Type = 0;
    this.SortId = 0;
    this.Desc = null;
    this.RuleId = 0;
    this.Cond = 0;
    this.Award = 0;
  }
}


static public class RogueResCollectionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*IdKey*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Index*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SortId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 16 /*RuleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*Cond*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*Award*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
