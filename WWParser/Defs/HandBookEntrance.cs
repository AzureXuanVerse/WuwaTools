// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct HandBookEntrance : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static HandBookEntrance GetRootAsHandBookEntrance(ByteBuffer _bb) { return GetRootAsHandBookEntrance(_bb, new HandBookEntrance()); }
  public static HandBookEntrance GetRootAsHandBookEntrance(ByteBuffer _bb, HandBookEntrance obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public HandBookEntrance __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string TitleIcon { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleIconBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTitleIconBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTitleIconArray() { return __p.__vector_as_array<byte>(8); }
  public string Texture { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextureBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTextureBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTextureArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.HandBookEntrance> CreateHandBookEntrance(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset title_iconOffset = default(StringOffset),
      StringOffset textureOffset = default(StringOffset)) {
    builder.StartTable(4);
    HandBookEntrance.AddTexture(builder, textureOffset);
    HandBookEntrance.AddTitleIcon(builder, title_iconOffset);
    HandBookEntrance.AddName(builder, nameOffset);
    HandBookEntrance.AddId(builder, id);
    return HandBookEntrance.EndHandBookEntrance(builder);
  }

  public static void StartHandBookEntrance(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddTitleIcon(FlatBufferBuilder builder, StringOffset titleIconOffset) { builder.AddOffset(2, titleIconOffset.Value, 0); }
  public static void AddTexture(FlatBufferBuilder builder, StringOffset textureOffset) { builder.AddOffset(3, textureOffset.Value, 0); }
  public static Offset<WWParser.Defs.HandBookEntrance> EndHandBookEntrance(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.HandBookEntrance>(o);
  }
  public HandBookEntranceT UnPack() {
    var _o = new HandBookEntranceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HandBookEntranceT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.TitleIcon = this.TitleIcon;
    _o.Texture = this.Texture;
  }
  public static Offset<WWParser.Defs.HandBookEntrance> Pack(FlatBufferBuilder builder, HandBookEntranceT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.HandBookEntrance>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _title_icon = _o.TitleIcon == null ? default(StringOffset) : builder.CreateString(_o.TitleIcon);
    var _texture = _o.Texture == null ? default(StringOffset) : builder.CreateString(_o.Texture);
    return CreateHandBookEntrance(
      builder,
      _o.Id,
      _name,
      _title_icon,
      _texture);
  }
}

public class HandBookEntranceT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("title_icon")]
  public string TitleIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("texture")]
  public string Texture { get; set; }

  public HandBookEntranceT() {
    this.Id = 0;
    this.Name = null;
    this.TitleIcon = null;
    this.Texture = null;
  }
}


static public class HandBookEntranceVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyString(tablePos, 8 /*TitleIcon*/, false)
      && verifier.VerifyString(tablePos, 10 /*Texture*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
