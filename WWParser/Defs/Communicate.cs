// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Communicate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Communicate GetRootAsCommunicate(ByteBuffer _bb) { return GetRootAsCommunicate(_bb, new Communicate()); }
  public static Communicate GetRootAsCommunicate(ByteBuffer _bb, Communicate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Communicate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string DescText { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescTextBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDescTextBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDescTextArray() { return __p.__vector_as_array<byte>(6); }
  public int Talker { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.Communicate> CreateCommunicate(FlatBufferBuilder builder,
      int id = 0,
      StringOffset desc_textOffset = default(StringOffset),
      int talker = 0) {
    builder.StartTable(3);
    Communicate.AddTalker(builder, talker);
    Communicate.AddDescText(builder, desc_textOffset);
    Communicate.AddId(builder, id);
    return Communicate.EndCommunicate(builder);
  }

  public static void StartCommunicate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddDescText(FlatBufferBuilder builder, StringOffset descTextOffset) { builder.AddOffset(1, descTextOffset.Value, 0); }
  public static void AddTalker(FlatBufferBuilder builder, int talker) { builder.AddInt(2, talker, 0); }
  public static Offset<WWParser.Defs.Communicate> EndCommunicate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Communicate>(o);
  }
  public CommunicateT UnPack() {
    var _o = new CommunicateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CommunicateT _o) {
    _o.Id = this.Id;
    _o.DescText = this.DescText;
    _o.Talker = this.Talker;
  }
  public static Offset<WWParser.Defs.Communicate> Pack(FlatBufferBuilder builder, CommunicateT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Communicate>);
    var _desc_text = _o.DescText == null ? default(StringOffset) : builder.CreateString(_o.DescText);
    return CreateCommunicate(
      builder,
      _o.Id,
      _desc_text,
      _o.Talker);
  }
}

public class CommunicateT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("desc_text")]
  public string DescText { get; set; }
  [Newtonsoft.Json.JsonProperty("talker")]
  public int Talker { get; set; }

  public CommunicateT() {
    this.Id = 0;
    this.DescText = null;
    this.Talker = 0;
  }
}


static public class CommunicateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*DescText*/, false)
      && verifier.VerifyField(tablePos, 8 /*Talker*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
