// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PlayerStateRestriction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PlayerStateRestriction GetRootAsPlayerStateRestriction(ByteBuffer _bb) { return GetRootAsPlayerStateRestriction(_bb, new PlayerStateRestriction()); }
  public static PlayerStateRestriction GetRootAsPlayerStateRestriction(ByteBuffer _bb, PlayerStateRestriction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerStateRestriction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Type { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(6); }
  public string IncludedTags(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int IncludedTagsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string ExcludedTags(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ExcludedTagsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int CreatorId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Remark { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRemarkBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetRemarkBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetRemarkArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.PlayerStateRestriction> CreatePlayerStateRestriction(FlatBufferBuilder builder,
      int id = 0,
      StringOffset typeOffset = default(StringOffset),
      VectorOffset included_tagsOffset = default(VectorOffset),
      VectorOffset excluded_tagsOffset = default(VectorOffset),
      int creator_id = 0,
      StringOffset remarkOffset = default(StringOffset)) {
    builder.StartTable(6);
    PlayerStateRestriction.AddRemark(builder, remarkOffset);
    PlayerStateRestriction.AddCreatorId(builder, creator_id);
    PlayerStateRestriction.AddExcludedTags(builder, excluded_tagsOffset);
    PlayerStateRestriction.AddIncludedTags(builder, included_tagsOffset);
    PlayerStateRestriction.AddType(builder, typeOffset);
    PlayerStateRestriction.AddId(builder, id);
    return PlayerStateRestriction.EndPlayerStateRestriction(builder);
  }

  public static void StartPlayerStateRestriction(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(1, typeOffset.Value, 0); }
  public static void AddIncludedTags(FlatBufferBuilder builder, VectorOffset includedTagsOffset) { builder.AddOffset(2, includedTagsOffset.Value, 0); }
  public static VectorOffset CreateIncludedTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateIncludedTagsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIncludedTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIncludedTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIncludedTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExcludedTags(FlatBufferBuilder builder, VectorOffset excludedTagsOffset) { builder.AddOffset(3, excludedTagsOffset.Value, 0); }
  public static VectorOffset CreateExcludedTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateExcludedTagsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExcludedTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExcludedTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartExcludedTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCreatorId(FlatBufferBuilder builder, int creatorId) { builder.AddInt(4, creatorId, 0); }
  public static void AddRemark(FlatBufferBuilder builder, StringOffset remarkOffset) { builder.AddOffset(5, remarkOffset.Value, 0); }
  public static Offset<WWParser.Defs.PlayerStateRestriction> EndPlayerStateRestriction(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PlayerStateRestriction>(o);
  }
  public PlayerStateRestrictionT UnPack() {
    var _o = new PlayerStateRestrictionT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PlayerStateRestrictionT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.IncludedTags = new List<string>();
    for (var _j = 0; _j < this.IncludedTagsLength; ++_j) {_o.IncludedTags.Add(this.IncludedTags(_j));}
    _o.ExcludedTags = new List<string>();
    for (var _j = 0; _j < this.ExcludedTagsLength; ++_j) {_o.ExcludedTags.Add(this.ExcludedTags(_j));}
    _o.CreatorId = this.CreatorId;
    _o.Remark = this.Remark;
  }
  public static Offset<WWParser.Defs.PlayerStateRestriction> Pack(FlatBufferBuilder builder, PlayerStateRestrictionT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PlayerStateRestriction>);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _included_tags = default(VectorOffset);
    if (_o.IncludedTags != null) {
      var __included_tags = new StringOffset[_o.IncludedTags.Count];
      for (var _j = 0; _j < __included_tags.Length; ++_j) { __included_tags[_j] = builder.CreateString(_o.IncludedTags[_j]); }
      _included_tags = CreateIncludedTagsVector(builder, __included_tags);
    }
    var _excluded_tags = default(VectorOffset);
    if (_o.ExcludedTags != null) {
      var __excluded_tags = new StringOffset[_o.ExcludedTags.Count];
      for (var _j = 0; _j < __excluded_tags.Length; ++_j) { __excluded_tags[_j] = builder.CreateString(_o.ExcludedTags[_j]); }
      _excluded_tags = CreateExcludedTagsVector(builder, __excluded_tags);
    }
    var _remark = _o.Remark == null ? default(StringOffset) : builder.CreateString(_o.Remark);
    return CreatePlayerStateRestriction(
      builder,
      _o.Id,
      _type,
      _included_tags,
      _excluded_tags,
      _o.CreatorId,
      _remark);
  }
}

public class PlayerStateRestrictionT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public string Type { get; set; }
  [Newtonsoft.Json.JsonProperty("included_tags")]
  public List<string> IncludedTags { get; set; }
  [Newtonsoft.Json.JsonProperty("excluded_tags")]
  public List<string> ExcludedTags { get; set; }
  [Newtonsoft.Json.JsonProperty("creator_id")]
  public int CreatorId { get; set; }
  [Newtonsoft.Json.JsonProperty("remark")]
  public string Remark { get; set; }

  public PlayerStateRestrictionT() {
    this.Id = 0;
    this.Type = null;
    this.IncludedTags = null;
    this.ExcludedTags = null;
    this.CreatorId = 0;
    this.Remark = null;
  }
}


static public class PlayerStateRestrictionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Type*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*IncludedTags*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 10 /*ExcludedTags*/, false)
      && verifier.VerifyField(tablePos, 12 /*CreatorId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*Remark*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
