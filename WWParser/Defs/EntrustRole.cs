// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EntrustRole : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EntrustRole GetRootAsEntrustRole(ByteBuffer _bb) { return GetRootAsEntrustRole(_bb, new EntrustRole()); }
  public static EntrustRole GetRootAsEntrustRole(ByteBuffer _bb, EntrustRole obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntrustRole __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(6); }
  public string HeadIcon { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHeadIconBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetHeadIconBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetHeadIconArray() { return __p.__vector_as_array<byte>(8); }
  public string SmallHeadIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSmallHeadIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSmallHeadIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSmallHeadIconArray() { return __p.__vector_as_array<byte>(10); }
  public string Name { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(12); }
  public int UnLockCondition { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int JumpType { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int JumpParam { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExPropertyCurve { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MapSortId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string FailDialog { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFailDialogBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetFailDialogBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetFailDialogArray() { return __p.__vector_as_array<byte>(26); }
  public string SuccessDialog { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSuccessDialogBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetSuccessDialogBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetSuccessDialogArray() { return __p.__vector_as_array<byte>(28); }
  public string InvestDialog { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInvestDialogBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetInvestDialogBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetInvestDialogArray() { return __p.__vector_as_array<byte>(30); }
  public string InvestSuccessDialog { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInvestSuccessDialogBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetInvestSuccessDialogBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetInvestSuccessDialogArray() { return __p.__vector_as_array<byte>(32); }
  public string InvestFailDialog { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInvestFailDialogBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetInvestFailDialogBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetInvestFailDialogArray() { return __p.__vector_as_array<byte>(34); }
  public string JoinDialog { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinDialogBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetJoinDialogBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetJoinDialogArray() { return __p.__vector_as_array<byte>(36); }
  public string BuildSuccessDialog { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuildSuccessDialogBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetBuildSuccessDialogBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetBuildSuccessDialogArray() { return __p.__vector_as_array<byte>(38); }
  public string SpineAtlas { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpineAtlasBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetSpineAtlasBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetSpineAtlasArray() { return __p.__vector_as_array<byte>(40); }
  public string SpineSkeletonData { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpineSkeletonDataBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetSpineSkeletonDataBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetSpineSkeletonDataArray() { return __p.__vector_as_array<byte>(42); }
  public string SmallSpineAtlas { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSmallSpineAtlasBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetSmallSpineAtlasBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetSmallSpineAtlasArray() { return __p.__vector_as_array<byte>(44); }
  public string SmallSpineSkeletonData { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSmallSpineSkeletonDataBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetSmallSpineSkeletonDataBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetSmallSpineSkeletonDataArray() { return __p.__vector_as_array<byte>(46); }
  public string Portrait { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortraitBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetPortraitBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetPortraitArray() { return __p.__vector_as_array<byte>(48); }

  public static Offset<WWParser.Defs.EntrustRole> CreateEntrustRole(FlatBufferBuilder builder,
      int id = 0,
      StringOffset iconOffset = default(StringOffset),
      StringOffset head_iconOffset = default(StringOffset),
      StringOffset small_head_iconOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      int un_lock_condition = 0,
      int jump_type = 0,
      int jump_param = 0,
      int ex_property_curve = 0,
      int type = 0,
      int map_sort_id = 0,
      StringOffset fail_dialogOffset = default(StringOffset),
      StringOffset success_dialogOffset = default(StringOffset),
      StringOffset invest_dialogOffset = default(StringOffset),
      StringOffset invest_success_dialogOffset = default(StringOffset),
      StringOffset invest_fail_dialogOffset = default(StringOffset),
      StringOffset join_dialogOffset = default(StringOffset),
      StringOffset build_success_dialogOffset = default(StringOffset),
      StringOffset spine_atlasOffset = default(StringOffset),
      StringOffset spine_skeleton_dataOffset = default(StringOffset),
      StringOffset small_spine_atlasOffset = default(StringOffset),
      StringOffset small_spine_skeleton_dataOffset = default(StringOffset),
      StringOffset portraitOffset = default(StringOffset)) {
    builder.StartTable(23);
    EntrustRole.AddPortrait(builder, portraitOffset);
    EntrustRole.AddSmallSpineSkeletonData(builder, small_spine_skeleton_dataOffset);
    EntrustRole.AddSmallSpineAtlas(builder, small_spine_atlasOffset);
    EntrustRole.AddSpineSkeletonData(builder, spine_skeleton_dataOffset);
    EntrustRole.AddSpineAtlas(builder, spine_atlasOffset);
    EntrustRole.AddBuildSuccessDialog(builder, build_success_dialogOffset);
    EntrustRole.AddJoinDialog(builder, join_dialogOffset);
    EntrustRole.AddInvestFailDialog(builder, invest_fail_dialogOffset);
    EntrustRole.AddInvestSuccessDialog(builder, invest_success_dialogOffset);
    EntrustRole.AddInvestDialog(builder, invest_dialogOffset);
    EntrustRole.AddSuccessDialog(builder, success_dialogOffset);
    EntrustRole.AddFailDialog(builder, fail_dialogOffset);
    EntrustRole.AddMapSortId(builder, map_sort_id);
    EntrustRole.AddType(builder, type);
    EntrustRole.AddExPropertyCurve(builder, ex_property_curve);
    EntrustRole.AddJumpParam(builder, jump_param);
    EntrustRole.AddJumpType(builder, jump_type);
    EntrustRole.AddUnLockCondition(builder, un_lock_condition);
    EntrustRole.AddName(builder, nameOffset);
    EntrustRole.AddSmallHeadIcon(builder, small_head_iconOffset);
    EntrustRole.AddHeadIcon(builder, head_iconOffset);
    EntrustRole.AddIcon(builder, iconOffset);
    EntrustRole.AddId(builder, id);
    return EntrustRole.EndEntrustRole(builder);
  }

  public static void StartEntrustRole(FlatBufferBuilder builder) { builder.StartTable(23); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(1, iconOffset.Value, 0); }
  public static void AddHeadIcon(FlatBufferBuilder builder, StringOffset headIconOffset) { builder.AddOffset(2, headIconOffset.Value, 0); }
  public static void AddSmallHeadIcon(FlatBufferBuilder builder, StringOffset smallHeadIconOffset) { builder.AddOffset(3, smallHeadIconOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(4, nameOffset.Value, 0); }
  public static void AddUnLockCondition(FlatBufferBuilder builder, int unLockCondition) { builder.AddInt(5, unLockCondition, 0); }
  public static void AddJumpType(FlatBufferBuilder builder, int jumpType) { builder.AddInt(6, jumpType, 0); }
  public static void AddJumpParam(FlatBufferBuilder builder, int jumpParam) { builder.AddInt(7, jumpParam, 0); }
  public static void AddExPropertyCurve(FlatBufferBuilder builder, int exPropertyCurve) { builder.AddInt(8, exPropertyCurve, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(9, type, 0); }
  public static void AddMapSortId(FlatBufferBuilder builder, int mapSortId) { builder.AddInt(10, mapSortId, 0); }
  public static void AddFailDialog(FlatBufferBuilder builder, StringOffset failDialogOffset) { builder.AddOffset(11, failDialogOffset.Value, 0); }
  public static void AddSuccessDialog(FlatBufferBuilder builder, StringOffset successDialogOffset) { builder.AddOffset(12, successDialogOffset.Value, 0); }
  public static void AddInvestDialog(FlatBufferBuilder builder, StringOffset investDialogOffset) { builder.AddOffset(13, investDialogOffset.Value, 0); }
  public static void AddInvestSuccessDialog(FlatBufferBuilder builder, StringOffset investSuccessDialogOffset) { builder.AddOffset(14, investSuccessDialogOffset.Value, 0); }
  public static void AddInvestFailDialog(FlatBufferBuilder builder, StringOffset investFailDialogOffset) { builder.AddOffset(15, investFailDialogOffset.Value, 0); }
  public static void AddJoinDialog(FlatBufferBuilder builder, StringOffset joinDialogOffset) { builder.AddOffset(16, joinDialogOffset.Value, 0); }
  public static void AddBuildSuccessDialog(FlatBufferBuilder builder, StringOffset buildSuccessDialogOffset) { builder.AddOffset(17, buildSuccessDialogOffset.Value, 0); }
  public static void AddSpineAtlas(FlatBufferBuilder builder, StringOffset spineAtlasOffset) { builder.AddOffset(18, spineAtlasOffset.Value, 0); }
  public static void AddSpineSkeletonData(FlatBufferBuilder builder, StringOffset spineSkeletonDataOffset) { builder.AddOffset(19, spineSkeletonDataOffset.Value, 0); }
  public static void AddSmallSpineAtlas(FlatBufferBuilder builder, StringOffset smallSpineAtlasOffset) { builder.AddOffset(20, smallSpineAtlasOffset.Value, 0); }
  public static void AddSmallSpineSkeletonData(FlatBufferBuilder builder, StringOffset smallSpineSkeletonDataOffset) { builder.AddOffset(21, smallSpineSkeletonDataOffset.Value, 0); }
  public static void AddPortrait(FlatBufferBuilder builder, StringOffset portraitOffset) { builder.AddOffset(22, portraitOffset.Value, 0); }
  public static Offset<WWParser.Defs.EntrustRole> EndEntrustRole(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.EntrustRole>(o);
  }
  public EntrustRoleT UnPack() {
    var _o = new EntrustRoleT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EntrustRoleT _o) {
    _o.Id = this.Id;
    _o.Icon = this.Icon;
    _o.HeadIcon = this.HeadIcon;
    _o.SmallHeadIcon = this.SmallHeadIcon;
    _o.Name = this.Name;
    _o.UnLockCondition = this.UnLockCondition;
    _o.JumpType = this.JumpType;
    _o.JumpParam = this.JumpParam;
    _o.ExPropertyCurve = this.ExPropertyCurve;
    _o.Type = this.Type;
    _o.MapSortId = this.MapSortId;
    _o.FailDialog = this.FailDialog;
    _o.SuccessDialog = this.SuccessDialog;
    _o.InvestDialog = this.InvestDialog;
    _o.InvestSuccessDialog = this.InvestSuccessDialog;
    _o.InvestFailDialog = this.InvestFailDialog;
    _o.JoinDialog = this.JoinDialog;
    _o.BuildSuccessDialog = this.BuildSuccessDialog;
    _o.SpineAtlas = this.SpineAtlas;
    _o.SpineSkeletonData = this.SpineSkeletonData;
    _o.SmallSpineAtlas = this.SmallSpineAtlas;
    _o.SmallSpineSkeletonData = this.SmallSpineSkeletonData;
    _o.Portrait = this.Portrait;
  }
  public static Offset<WWParser.Defs.EntrustRole> Pack(FlatBufferBuilder builder, EntrustRoleT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.EntrustRole>);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _head_icon = _o.HeadIcon == null ? default(StringOffset) : builder.CreateString(_o.HeadIcon);
    var _small_head_icon = _o.SmallHeadIcon == null ? default(StringOffset) : builder.CreateString(_o.SmallHeadIcon);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _fail_dialog = _o.FailDialog == null ? default(StringOffset) : builder.CreateString(_o.FailDialog);
    var _success_dialog = _o.SuccessDialog == null ? default(StringOffset) : builder.CreateString(_o.SuccessDialog);
    var _invest_dialog = _o.InvestDialog == null ? default(StringOffset) : builder.CreateString(_o.InvestDialog);
    var _invest_success_dialog = _o.InvestSuccessDialog == null ? default(StringOffset) : builder.CreateString(_o.InvestSuccessDialog);
    var _invest_fail_dialog = _o.InvestFailDialog == null ? default(StringOffset) : builder.CreateString(_o.InvestFailDialog);
    var _join_dialog = _o.JoinDialog == null ? default(StringOffset) : builder.CreateString(_o.JoinDialog);
    var _build_success_dialog = _o.BuildSuccessDialog == null ? default(StringOffset) : builder.CreateString(_o.BuildSuccessDialog);
    var _spine_atlas = _o.SpineAtlas == null ? default(StringOffset) : builder.CreateString(_o.SpineAtlas);
    var _spine_skeleton_data = _o.SpineSkeletonData == null ? default(StringOffset) : builder.CreateString(_o.SpineSkeletonData);
    var _small_spine_atlas = _o.SmallSpineAtlas == null ? default(StringOffset) : builder.CreateString(_o.SmallSpineAtlas);
    var _small_spine_skeleton_data = _o.SmallSpineSkeletonData == null ? default(StringOffset) : builder.CreateString(_o.SmallSpineSkeletonData);
    var _portrait = _o.Portrait == null ? default(StringOffset) : builder.CreateString(_o.Portrait);
    return CreateEntrustRole(
      builder,
      _o.Id,
      _icon,
      _head_icon,
      _small_head_icon,
      _name,
      _o.UnLockCondition,
      _o.JumpType,
      _o.JumpParam,
      _o.ExPropertyCurve,
      _o.Type,
      _o.MapSortId,
      _fail_dialog,
      _success_dialog,
      _invest_dialog,
      _invest_success_dialog,
      _invest_fail_dialog,
      _join_dialog,
      _build_success_dialog,
      _spine_atlas,
      _spine_skeleton_data,
      _small_spine_atlas,
      _small_spine_skeleton_data,
      _portrait);
  }
}

public class EntrustRoleT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("head_icon")]
  public string HeadIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("small_head_icon")]
  public string SmallHeadIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("un_lock_condition")]
  public int UnLockCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_type")]
  public int JumpType { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_param")]
  public int JumpParam { get; set; }
  [Newtonsoft.Json.JsonProperty("ex_property_curve")]
  public int ExPropertyCurve { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("map_sort_id")]
  public int MapSortId { get; set; }
  [Newtonsoft.Json.JsonProperty("fail_dialog")]
  public string FailDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("success_dialog")]
  public string SuccessDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("invest_dialog")]
  public string InvestDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("invest_success_dialog")]
  public string InvestSuccessDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("invest_fail_dialog")]
  public string InvestFailDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("join_dialog")]
  public string JoinDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("build_success_dialog")]
  public string BuildSuccessDialog { get; set; }
  [Newtonsoft.Json.JsonProperty("spine_atlas")]
  public string SpineAtlas { get; set; }
  [Newtonsoft.Json.JsonProperty("spine_skeleton_data")]
  public string SpineSkeletonData { get; set; }
  [Newtonsoft.Json.JsonProperty("small_spine_atlas")]
  public string SmallSpineAtlas { get; set; }
  [Newtonsoft.Json.JsonProperty("small_spine_skeleton_data")]
  public string SmallSpineSkeletonData { get; set; }
  [Newtonsoft.Json.JsonProperty("portrait")]
  public string Portrait { get; set; }

  public EntrustRoleT() {
    this.Id = 0;
    this.Icon = null;
    this.HeadIcon = null;
    this.SmallHeadIcon = null;
    this.Name = null;
    this.UnLockCondition = 0;
    this.JumpType = 0;
    this.JumpParam = 0;
    this.ExPropertyCurve = 0;
    this.Type = 0;
    this.MapSortId = 0;
    this.FailDialog = null;
    this.SuccessDialog = null;
    this.InvestDialog = null;
    this.InvestSuccessDialog = null;
    this.InvestFailDialog = null;
    this.JoinDialog = null;
    this.BuildSuccessDialog = null;
    this.SpineAtlas = null;
    this.SpineSkeletonData = null;
    this.SmallSpineAtlas = null;
    this.SmallSpineSkeletonData = null;
    this.Portrait = null;
  }
}


static public class EntrustRoleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 8 /*HeadIcon*/, false)
      && verifier.VerifyString(tablePos, 10 /*SmallHeadIcon*/, false)
      && verifier.VerifyString(tablePos, 12 /*Name*/, false)
      && verifier.VerifyField(tablePos, 14 /*UnLockCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*JumpType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*JumpParam*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*ExPropertyCurve*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*MapSortId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*FailDialog*/, false)
      && verifier.VerifyString(tablePos, 28 /*SuccessDialog*/, false)
      && verifier.VerifyString(tablePos, 30 /*InvestDialog*/, false)
      && verifier.VerifyString(tablePos, 32 /*InvestSuccessDialog*/, false)
      && verifier.VerifyString(tablePos, 34 /*InvestFailDialog*/, false)
      && verifier.VerifyString(tablePos, 36 /*JoinDialog*/, false)
      && verifier.VerifyString(tablePos, 38 /*BuildSuccessDialog*/, false)
      && verifier.VerifyString(tablePos, 40 /*SpineAtlas*/, false)
      && verifier.VerifyString(tablePos, 42 /*SpineSkeletonData*/, false)
      && verifier.VerifyString(tablePos, 44 /*SmallSpineAtlas*/, false)
      && verifier.VerifyString(tablePos, 46 /*SmallSpineSkeletonData*/, false)
      && verifier.VerifyString(tablePos, 48 /*Portrait*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
