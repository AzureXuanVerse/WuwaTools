// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct WeaponHandBook : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static WeaponHandBook GetRootAsWeaponHandBook(ByteBuffer _bb) { return GetRootAsWeaponHandBook(_bb, new WeaponHandBook()); }
  public static WeaponHandBook GetRootAsWeaponHandBook(ByteBuffer _bb, WeaponHandBook obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public WeaponHandBook __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Breach { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Resonance { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.WeaponHandBook> CreateWeaponHandBook(FlatBufferBuilder builder,
      int id = 0,
      int level = 0,
      int breach = 0,
      int resonance = 0) {
    builder.StartTable(4);
    WeaponHandBook.AddResonance(builder, resonance);
    WeaponHandBook.AddBreach(builder, breach);
    WeaponHandBook.AddLevel(builder, level);
    WeaponHandBook.AddId(builder, id);
    return WeaponHandBook.EndWeaponHandBook(builder);
  }

  public static void StartWeaponHandBook(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(1, level, 0); }
  public static void AddBreach(FlatBufferBuilder builder, int breach) { builder.AddInt(2, breach, 0); }
  public static void AddResonance(FlatBufferBuilder builder, int resonance) { builder.AddInt(3, resonance, 0); }
  public static Offset<WWParser.Defs.WeaponHandBook> EndWeaponHandBook(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.WeaponHandBook>(o);
  }
  public WeaponHandBookT UnPack() {
    var _o = new WeaponHandBookT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(WeaponHandBookT _o) {
    _o.Id = this.Id;
    _o.Level = this.Level;
    _o.Breach = this.Breach;
    _o.Resonance = this.Resonance;
  }
  public static Offset<WWParser.Defs.WeaponHandBook> Pack(FlatBufferBuilder builder, WeaponHandBookT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.WeaponHandBook>);
    return CreateWeaponHandBook(
      builder,
      _o.Id,
      _o.Level,
      _o.Breach,
      _o.Resonance);
  }
}

public class WeaponHandBookT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("level")]
  public int Level { get; set; }
  [Newtonsoft.Json.JsonProperty("breach")]
  public int Breach { get; set; }
  [Newtonsoft.Json.JsonProperty("resonance")]
  public int Resonance { get; set; }

  public WeaponHandBookT() {
    this.Id = 0;
    this.Level = 0;
    this.Breach = 0;
    this.Resonance = 0;
  }
}


static public class WeaponHandBookVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Breach*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Resonance*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
