// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AbyssItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AbyssItem GetRootAsAbyssItem(ByteBuffer _bb) { return GetRootAsAbyssItem(_bb, new AbyssItem()); }
  public static AbyssItem GetRootAsAbyssItem(ByteBuffer _bb, AbyssItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AbyssItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SlotType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QualityId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BelongLittleRole { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string PassiveBuffShowName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPassiveBuffShowNameBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetPassiveBuffShowNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPassiveBuffShowNameArray() { return __p.__vector_as_array<byte>(14); }
  public string PassiveBuffShowDesc { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPassiveBuffShowDescBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetPassiveBuffShowDescBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetPassiveBuffShowDescArray() { return __p.__vector_as_array<byte>(16); }
  public WWParser.Defs.StringArray? LevelDescStrArray(int j) { int o = __p.__offset(18); return o != 0 ? (WWParser.Defs.StringArray?)(new WWParser.Defs.StringArray()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int LevelDescStrArrayLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public double AbyssBuff(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int AbyssBuffLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetAbyssBuffBytes() { return __p.__vector_as_span<double>(20, 8); }
#else
  public ArraySegment<byte>? GetAbyssBuffBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public double[] GetAbyssBuffArray() { return __p.__vector_as_array<double>(20); }
  public double AbyssPhantomBuff(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int AbyssPhantomBuffLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetAbyssPhantomBuffBytes() { return __p.__vector_as_span<double>(22, 8); }
#else
  public ArraySegment<byte>? GetAbyssPhantomBuffBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public double[] GetAbyssPhantomBuffArray() { return __p.__vector_as_array<double>(22); }
  public WWParser.Defs.ConfigPropValue? Prop(int j) { int o = __p.__offset(24); return o != 0 ? (WWParser.Defs.ConfigPropValue?)(new WWParser.Defs.ConfigPropValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PropLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string AttributesDescription { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttributesDescriptionBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetAttributesDescriptionBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetAttributesDescriptionArray() { return __p.__vector_as_array<byte>(26); }
  public WWParser.Defs.DicIntInt? AddTag(int j) { int o = __p.__offset(28); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AddTagLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntInt? CertainTag(int j) { int o = __p.__offset(30); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CertainTagLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.ConfigPropValue? AddProp(int j) { int o = __p.__offset(32); return o != 0 ? (WWParser.Defs.ConfigPropValue?)(new WWParser.Defs.ConfigPropValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AddPropLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Name { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(34); }
  public string TypeDescription { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeDescriptionBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetTypeDescriptionBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetTypeDescriptionArray() { return __p.__vector_as_array<byte>(36); }
  public string BgDescription { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgDescriptionBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetBgDescriptionBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetBgDescriptionArray() { return __p.__vector_as_array<byte>(38); }
  public string Icon { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(40); }
  public string IconMiddle { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconMiddleBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetIconMiddleBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetIconMiddleArray() { return __p.__vector_as_array<byte>(42); }
  public string IconSmall { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSmallBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetIconSmallBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetIconSmallArray() { return __p.__vector_as_array<byte>(44); }
  public string Mesh { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMeshBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetMeshBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetMeshArray() { return __p.__vector_as_array<byte>(46); }

  public static Offset<WWParser.Defs.AbyssItem> CreateAbyssItem(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int slot_type = 0,
      int quality_id = 0,
      int belong_little_role = 0,
      StringOffset passive_buff_show_nameOffset = default(StringOffset),
      StringOffset passive_buff_show_descOffset = default(StringOffset),
      VectorOffset level_desc_str_arrayOffset = default(VectorOffset),
      VectorOffset abyss_buffOffset = default(VectorOffset),
      VectorOffset abyss_phantom_buffOffset = default(VectorOffset),
      VectorOffset propOffset = default(VectorOffset),
      StringOffset attributes_descriptionOffset = default(StringOffset),
      VectorOffset add_tagOffset = default(VectorOffset),
      VectorOffset certain_tagOffset = default(VectorOffset),
      VectorOffset add_propOffset = default(VectorOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset type_descriptionOffset = default(StringOffset),
      StringOffset bg_descriptionOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      StringOffset icon_middleOffset = default(StringOffset),
      StringOffset icon_smallOffset = default(StringOffset),
      StringOffset meshOffset = default(StringOffset)) {
    builder.StartTable(22);
    AbyssItem.AddMesh(builder, meshOffset);
    AbyssItem.AddIconSmall(builder, icon_smallOffset);
    AbyssItem.AddIconMiddle(builder, icon_middleOffset);
    AbyssItem.AddIcon(builder, iconOffset);
    AbyssItem.AddBgDescription(builder, bg_descriptionOffset);
    AbyssItem.AddTypeDescription(builder, type_descriptionOffset);
    AbyssItem.AddName(builder, nameOffset);
    AbyssItem.AddAddProp(builder, add_propOffset);
    AbyssItem.AddCertainTag(builder, certain_tagOffset);
    AbyssItem.AddAddTag(builder, add_tagOffset);
    AbyssItem.AddAttributesDescription(builder, attributes_descriptionOffset);
    AbyssItem.AddProp(builder, propOffset);
    AbyssItem.AddAbyssPhantomBuff(builder, abyss_phantom_buffOffset);
    AbyssItem.AddAbyssBuff(builder, abyss_buffOffset);
    AbyssItem.AddLevelDescStrArray(builder, level_desc_str_arrayOffset);
    AbyssItem.AddPassiveBuffShowDesc(builder, passive_buff_show_descOffset);
    AbyssItem.AddPassiveBuffShowName(builder, passive_buff_show_nameOffset);
    AbyssItem.AddBelongLittleRole(builder, belong_little_role);
    AbyssItem.AddQualityId(builder, quality_id);
    AbyssItem.AddSlotType(builder, slot_type);
    AbyssItem.AddActivityId(builder, activity_id);
    AbyssItem.AddId(builder, id);
    return AbyssItem.EndAbyssItem(builder);
  }

  public static void StartAbyssItem(FlatBufferBuilder builder) { builder.StartTable(22); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddSlotType(FlatBufferBuilder builder, int slotType) { builder.AddInt(2, slotType, 0); }
  public static void AddQualityId(FlatBufferBuilder builder, int qualityId) { builder.AddInt(3, qualityId, 0); }
  public static void AddBelongLittleRole(FlatBufferBuilder builder, int belongLittleRole) { builder.AddInt(4, belongLittleRole, 0); }
  public static void AddPassiveBuffShowName(FlatBufferBuilder builder, StringOffset passiveBuffShowNameOffset) { builder.AddOffset(5, passiveBuffShowNameOffset.Value, 0); }
  public static void AddPassiveBuffShowDesc(FlatBufferBuilder builder, StringOffset passiveBuffShowDescOffset) { builder.AddOffset(6, passiveBuffShowDescOffset.Value, 0); }
  public static void AddLevelDescStrArray(FlatBufferBuilder builder, VectorOffset levelDescStrArrayOffset) { builder.AddOffset(7, levelDescStrArrayOffset.Value, 0); }
  public static VectorOffset CreateLevelDescStrArrayVector(FlatBufferBuilder builder, Offset<WWParser.Defs.StringArray>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLevelDescStrArrayVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.StringArray>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLevelDescStrArrayVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.StringArray>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLevelDescStrArrayVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.StringArray>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLevelDescStrArrayVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAbyssBuff(FlatBufferBuilder builder, VectorOffset abyssBuffOffset) { builder.AddOffset(8, abyssBuffOffset.Value, 0); }
  public static VectorOffset CreateAbyssBuffVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbyssBuffVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssBuffVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssBuffVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAbyssBuffVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddAbyssPhantomBuff(FlatBufferBuilder builder, VectorOffset abyssPhantomBuffOffset) { builder.AddOffset(9, abyssPhantomBuffOffset.Value, 0); }
  public static VectorOffset CreateAbyssPhantomBuffVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbyssPhantomBuffVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssPhantomBuffVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssPhantomBuffVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAbyssPhantomBuffVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddProp(FlatBufferBuilder builder, VectorOffset propOffset) { builder.AddOffset(10, propOffset.Value, 0); }
  public static VectorOffset CreatePropVector(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePropVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePropVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.ConfigPropValue>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePropVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.ConfigPropValue>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPropVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttributesDescription(FlatBufferBuilder builder, StringOffset attributesDescriptionOffset) { builder.AddOffset(11, attributesDescriptionOffset.Value, 0); }
  public static void AddAddTag(FlatBufferBuilder builder, VectorOffset addTagOffset) { builder.AddOffset(12, addTagOffset.Value, 0); }
  public static VectorOffset CreateAddTagVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAddTagVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddTagVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddTagVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAddTagVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCertainTag(FlatBufferBuilder builder, VectorOffset certainTagOffset) { builder.AddOffset(13, certainTagOffset.Value, 0); }
  public static VectorOffset CreateCertainTagVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCertainTagVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCertainTagVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCertainTagVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCertainTagVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAddProp(FlatBufferBuilder builder, VectorOffset addPropOffset) { builder.AddOffset(14, addPropOffset.Value, 0); }
  public static VectorOffset CreateAddPropVector(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAddPropVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddPropVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.ConfigPropValue>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddPropVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.ConfigPropValue>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAddPropVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(15, nameOffset.Value, 0); }
  public static void AddTypeDescription(FlatBufferBuilder builder, StringOffset typeDescriptionOffset) { builder.AddOffset(16, typeDescriptionOffset.Value, 0); }
  public static void AddBgDescription(FlatBufferBuilder builder, StringOffset bgDescriptionOffset) { builder.AddOffset(17, bgDescriptionOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(18, iconOffset.Value, 0); }
  public static void AddIconMiddle(FlatBufferBuilder builder, StringOffset iconMiddleOffset) { builder.AddOffset(19, iconMiddleOffset.Value, 0); }
  public static void AddIconSmall(FlatBufferBuilder builder, StringOffset iconSmallOffset) { builder.AddOffset(20, iconSmallOffset.Value, 0); }
  public static void AddMesh(FlatBufferBuilder builder, StringOffset meshOffset) { builder.AddOffset(21, meshOffset.Value, 0); }
  public static Offset<WWParser.Defs.AbyssItem> EndAbyssItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AbyssItem>(o);
  }
  public AbyssItemT UnPack() {
    var _o = new AbyssItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AbyssItemT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.SlotType = this.SlotType;
    _o.QualityId = this.QualityId;
    _o.BelongLittleRole = this.BelongLittleRole;
    _o.PassiveBuffShowName = this.PassiveBuffShowName;
    _o.PassiveBuffShowDesc = this.PassiveBuffShowDesc;
    _o.LevelDescStrArray = new List<WWParser.Defs.StringArrayT>();
    for (var _j = 0; _j < this.LevelDescStrArrayLength; ++_j) {_o.LevelDescStrArray.Add(this.LevelDescStrArray(_j).HasValue ? this.LevelDescStrArray(_j).Value.UnPack() : null);}
    _o.AbyssBuff = new List<double>();
    for (var _j = 0; _j < this.AbyssBuffLength; ++_j) {_o.AbyssBuff.Add(this.AbyssBuff(_j));}
    _o.AbyssPhantomBuff = new List<double>();
    for (var _j = 0; _j < this.AbyssPhantomBuffLength; ++_j) {_o.AbyssPhantomBuff.Add(this.AbyssPhantomBuff(_j));}
    _o.Prop = new List<WWParser.Defs.ConfigPropValueT>();
    for (var _j = 0; _j < this.PropLength; ++_j) {_o.Prop.Add(this.Prop(_j).HasValue ? this.Prop(_j).Value.UnPack() : null);}
    _o.AttributesDescription = this.AttributesDescription;
    _o.AddTag = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.AddTagLength; ++_j) {_o.AddTag.Add(this.AddTag(_j).HasValue ? this.AddTag(_j).Value.UnPack() : null);}
    _o.CertainTag = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.CertainTagLength; ++_j) {_o.CertainTag.Add(this.CertainTag(_j).HasValue ? this.CertainTag(_j).Value.UnPack() : null);}
    _o.AddProp = new List<WWParser.Defs.ConfigPropValueT>();
    for (var _j = 0; _j < this.AddPropLength; ++_j) {_o.AddProp.Add(this.AddProp(_j).HasValue ? this.AddProp(_j).Value.UnPack() : null);}
    _o.Name = this.Name;
    _o.TypeDescription = this.TypeDescription;
    _o.BgDescription = this.BgDescription;
    _o.Icon = this.Icon;
    _o.IconMiddle = this.IconMiddle;
    _o.IconSmall = this.IconSmall;
    _o.Mesh = this.Mesh;
  }
  public static Offset<WWParser.Defs.AbyssItem> Pack(FlatBufferBuilder builder, AbyssItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AbyssItem>);
    var _passive_buff_show_name = _o.PassiveBuffShowName == null ? default(StringOffset) : builder.CreateString(_o.PassiveBuffShowName);
    var _passive_buff_show_desc = _o.PassiveBuffShowDesc == null ? default(StringOffset) : builder.CreateString(_o.PassiveBuffShowDesc);
    var _level_desc_str_array = default(VectorOffset);
    if (_o.LevelDescStrArray != null) {
      var __level_desc_str_array = new Offset<WWParser.Defs.StringArray>[_o.LevelDescStrArray.Count];
      for (var _j = 0; _j < __level_desc_str_array.Length; ++_j) { __level_desc_str_array[_j] = WWParser.Defs.StringArray.Pack(builder, _o.LevelDescStrArray[_j]); }
      _level_desc_str_array = CreateLevelDescStrArrayVector(builder, __level_desc_str_array);
    }
    var _abyss_buff = default(VectorOffset);
    if (_o.AbyssBuff != null) {
      var __abyss_buff = _o.AbyssBuff.ToArray();
      _abyss_buff = CreateAbyssBuffVector(builder, __abyss_buff);
    }
    var _abyss_phantom_buff = default(VectorOffset);
    if (_o.AbyssPhantomBuff != null) {
      var __abyss_phantom_buff = _o.AbyssPhantomBuff.ToArray();
      _abyss_phantom_buff = CreateAbyssPhantomBuffVector(builder, __abyss_phantom_buff);
    }
    var _prop = default(VectorOffset);
    if (_o.Prop != null) {
      var __prop = new Offset<WWParser.Defs.ConfigPropValue>[_o.Prop.Count];
      for (var _j = 0; _j < __prop.Length; ++_j) { __prop[_j] = WWParser.Defs.ConfigPropValue.Pack(builder, _o.Prop[_j]); }
      _prop = CreatePropVector(builder, __prop);
    }
    var _attributes_description = _o.AttributesDescription == null ? default(StringOffset) : builder.CreateString(_o.AttributesDescription);
    var _add_tag = default(VectorOffset);
    if (_o.AddTag != null) {
      var __add_tag = new Offset<WWParser.Defs.DicIntInt>[_o.AddTag.Count];
      for (var _j = 0; _j < __add_tag.Length; ++_j) { __add_tag[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.AddTag[_j]); }
      _add_tag = CreateAddTagVector(builder, __add_tag);
    }
    var _certain_tag = default(VectorOffset);
    if (_o.CertainTag != null) {
      var __certain_tag = new Offset<WWParser.Defs.DicIntInt>[_o.CertainTag.Count];
      for (var _j = 0; _j < __certain_tag.Length; ++_j) { __certain_tag[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.CertainTag[_j]); }
      _certain_tag = CreateCertainTagVector(builder, __certain_tag);
    }
    var _add_prop = default(VectorOffset);
    if (_o.AddProp != null) {
      var __add_prop = new Offset<WWParser.Defs.ConfigPropValue>[_o.AddProp.Count];
      for (var _j = 0; _j < __add_prop.Length; ++_j) { __add_prop[_j] = WWParser.Defs.ConfigPropValue.Pack(builder, _o.AddProp[_j]); }
      _add_prop = CreateAddPropVector(builder, __add_prop);
    }
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _type_description = _o.TypeDescription == null ? default(StringOffset) : builder.CreateString(_o.TypeDescription);
    var _bg_description = _o.BgDescription == null ? default(StringOffset) : builder.CreateString(_o.BgDescription);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _icon_middle = _o.IconMiddle == null ? default(StringOffset) : builder.CreateString(_o.IconMiddle);
    var _icon_small = _o.IconSmall == null ? default(StringOffset) : builder.CreateString(_o.IconSmall);
    var _mesh = _o.Mesh == null ? default(StringOffset) : builder.CreateString(_o.Mesh);
    return CreateAbyssItem(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.SlotType,
      _o.QualityId,
      _o.BelongLittleRole,
      _passive_buff_show_name,
      _passive_buff_show_desc,
      _level_desc_str_array,
      _abyss_buff,
      _abyss_phantom_buff,
      _prop,
      _attributes_description,
      _add_tag,
      _certain_tag,
      _add_prop,
      _name,
      _type_description,
      _bg_description,
      _icon,
      _icon_middle,
      _icon_small,
      _mesh);
  }
}

public class AbyssItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("slot_type")]
  public int SlotType { get; set; }
  [Newtonsoft.Json.JsonProperty("quality_id")]
  public int QualityId { get; set; }
  [Newtonsoft.Json.JsonProperty("belong_little_role")]
  public int BelongLittleRole { get; set; }
  [Newtonsoft.Json.JsonProperty("passive_buff_show_name")]
  public string PassiveBuffShowName { get; set; }
  [Newtonsoft.Json.JsonProperty("passive_buff_show_desc")]
  public string PassiveBuffShowDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("level_desc_str_array")]
  public List<WWParser.Defs.StringArrayT> LevelDescStrArray { get; set; }
  [Newtonsoft.Json.JsonProperty("abyss_buff")]
  public List<double> AbyssBuff { get; set; }
  [Newtonsoft.Json.JsonProperty("abyss_phantom_buff")]
  public List<double> AbyssPhantomBuff { get; set; }
  [Newtonsoft.Json.JsonProperty("prop")]
  public List<WWParser.Defs.ConfigPropValueT> Prop { get; set; }
  [Newtonsoft.Json.JsonProperty("attributes_description")]
  public string AttributesDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("add_tag")]
  public List<WWParser.Defs.DicIntIntT> AddTag { get; set; }
  [Newtonsoft.Json.JsonProperty("certain_tag")]
  public List<WWParser.Defs.DicIntIntT> CertainTag { get; set; }
  [Newtonsoft.Json.JsonProperty("add_prop")]
  public List<WWParser.Defs.ConfigPropValueT> AddProp { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("type_description")]
  public string TypeDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_description")]
  public string BgDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_middle")]
  public string IconMiddle { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_small")]
  public string IconSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("mesh")]
  public string Mesh { get; set; }

  public AbyssItemT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.SlotType = 0;
    this.QualityId = 0;
    this.BelongLittleRole = 0;
    this.PassiveBuffShowName = null;
    this.PassiveBuffShowDesc = null;
    this.LevelDescStrArray = null;
    this.AbyssBuff = null;
    this.AbyssPhantomBuff = null;
    this.Prop = null;
    this.AttributesDescription = null;
    this.AddTag = null;
    this.CertainTag = null;
    this.AddProp = null;
    this.Name = null;
    this.TypeDescription = null;
    this.BgDescription = null;
    this.Icon = null;
    this.IconMiddle = null;
    this.IconSmall = null;
    this.Mesh = null;
  }
}


static public class AbyssItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*SlotType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*QualityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*BelongLittleRole*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*PassiveBuffShowName*/, false)
      && verifier.VerifyString(tablePos, 16 /*PassiveBuffShowDesc*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 18 /*LevelDescStrArray*/, WWParser.Defs.StringArrayVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 20 /*AbyssBuff*/, 8 /*double*/, false)
      && verifier.VerifyVectorOfData(tablePos, 22 /*AbyssPhantomBuff*/, 8 /*double*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 24 /*Prop*/, WWParser.Defs.ConfigPropValueVerify.Verify, false)
      && verifier.VerifyString(tablePos, 26 /*AttributesDescription*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 28 /*AddTag*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 30 /*CertainTag*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 32 /*AddProp*/, WWParser.Defs.ConfigPropValueVerify.Verify, false)
      && verifier.VerifyString(tablePos, 34 /*Name*/, false)
      && verifier.VerifyString(tablePos, 36 /*TypeDescription*/, false)
      && verifier.VerifyString(tablePos, 38 /*BgDescription*/, false)
      && verifier.VerifyString(tablePos, 40 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 42 /*IconMiddle*/, false)
      && verifier.VerifyString(tablePos, 44 /*IconSmall*/, false)
      && verifier.VerifyString(tablePos, 46 /*Mesh*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
