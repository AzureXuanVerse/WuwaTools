// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResBondRole : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResBondRole GetRootAsRogueResBondRole(ByteBuffer _bb) { return GetRootAsRogueResBondRole(_bb, new RogueResBondRole()); }
  public static RogueResBondRole GetRootAsRogueResBondRole(ByteBuffer _bb, RogueResBondRole obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResBondRole __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RoleId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BondIds(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BondIdsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBondIdsBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetBondIdsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetBondIdsArray() { return __p.__vector_as_array<int>(6); }
  public int TrialRoleId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RogueResBondRole> CreateRogueResBondRole(FlatBufferBuilder builder,
      int role_id = 0,
      VectorOffset bond_idsOffset = default(VectorOffset),
      int trial_role_id = 0) {
    builder.StartTable(3);
    RogueResBondRole.AddTrialRoleId(builder, trial_role_id);
    RogueResBondRole.AddBondIds(builder, bond_idsOffset);
    RogueResBondRole.AddRoleId(builder, role_id);
    return RogueResBondRole.EndRogueResBondRole(builder);
  }

  public static void StartRogueResBondRole(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(0, roleId, 0); }
  public static void AddBondIds(FlatBufferBuilder builder, VectorOffset bondIdsOffset) { builder.AddOffset(1, bondIdsOffset.Value, 0); }
  public static VectorOffset CreateBondIdsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBondIdsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBondIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBondIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBondIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTrialRoleId(FlatBufferBuilder builder, int trialRoleId) { builder.AddInt(2, trialRoleId, 0); }
  public static Offset<WWParser.Defs.RogueResBondRole> EndRogueResBondRole(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResBondRole>(o);
  }
  public RogueResBondRoleT UnPack() {
    var _o = new RogueResBondRoleT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResBondRoleT _o) {
    _o.RoleId = this.RoleId;
    _o.BondIds = new List<int>();
    for (var _j = 0; _j < this.BondIdsLength; ++_j) {_o.BondIds.Add(this.BondIds(_j));}
    _o.TrialRoleId = this.TrialRoleId;
  }
  public static Offset<WWParser.Defs.RogueResBondRole> Pack(FlatBufferBuilder builder, RogueResBondRoleT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResBondRole>);
    var _bond_ids = default(VectorOffset);
    if (_o.BondIds != null) {
      var __bond_ids = _o.BondIds.ToArray();
      _bond_ids = CreateBondIdsVector(builder, __bond_ids);
    }
    return CreateRogueResBondRole(
      builder,
      _o.RoleId,
      _bond_ids,
      _o.TrialRoleId);
  }
}

public class RogueResBondRoleT
{
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("bond_ids")]
  public List<int> BondIds { get; set; }
  [Newtonsoft.Json.JsonProperty("trial_role_id")]
  public int TrialRoleId { get; set; }

  public RogueResBondRoleT() {
    this.RoleId = 0;
    this.BondIds = null;
    this.TrialRoleId = 0;
  }
}


static public class RogueResBondRoleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*BondIds*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 8 /*TrialRoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
