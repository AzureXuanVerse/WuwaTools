// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ActivityLinkageInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ActivityLinkageInfo GetRootAsActivityLinkageInfo(ByteBuffer _bb) { return GetRootAsActivityLinkageInfo(_bb, new ActivityLinkageInfo()); }
  public static ActivityLinkageInfo GetRootAsActivityLinkageInfo(ByteBuffer _bb, ActivityLinkageInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ActivityLinkageInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityLinkageId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Language { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BigImage { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBigImageBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetBigImageBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBigImageArray() { return __p.__vector_as_array<byte>(10); }
  public string LinkUrl { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkUrlBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLinkUrlBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLinkUrlArray() { return __p.__vector_as_array<byte>(12); }
  public string QrCode { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetQrCodeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetQrCodeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetQrCodeArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.ActivityLinkageInfo> CreateActivityLinkageInfo(FlatBufferBuilder builder,
      int id = 0,
      int activity_linkage_id = 0,
      int language = 0,
      StringOffset big_imageOffset = default(StringOffset),
      StringOffset link_urlOffset = default(StringOffset),
      StringOffset qr_codeOffset = default(StringOffset)) {
    builder.StartTable(6);
    ActivityLinkageInfo.AddQrCode(builder, qr_codeOffset);
    ActivityLinkageInfo.AddLinkUrl(builder, link_urlOffset);
    ActivityLinkageInfo.AddBigImage(builder, big_imageOffset);
    ActivityLinkageInfo.AddLanguage(builder, language);
    ActivityLinkageInfo.AddActivityLinkageId(builder, activity_linkage_id);
    ActivityLinkageInfo.AddId(builder, id);
    return ActivityLinkageInfo.EndActivityLinkageInfo(builder);
  }

  public static void StartActivityLinkageInfo(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityLinkageId(FlatBufferBuilder builder, int activityLinkageId) { builder.AddInt(1, activityLinkageId, 0); }
  public static void AddLanguage(FlatBufferBuilder builder, int language) { builder.AddInt(2, language, 0); }
  public static void AddBigImage(FlatBufferBuilder builder, StringOffset bigImageOffset) { builder.AddOffset(3, bigImageOffset.Value, 0); }
  public static void AddLinkUrl(FlatBufferBuilder builder, StringOffset linkUrlOffset) { builder.AddOffset(4, linkUrlOffset.Value, 0); }
  public static void AddQrCode(FlatBufferBuilder builder, StringOffset qrCodeOffset) { builder.AddOffset(5, qrCodeOffset.Value, 0); }
  public static Offset<WWParser.Defs.ActivityLinkageInfo> EndActivityLinkageInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ActivityLinkageInfo>(o);
  }
  public ActivityLinkageInfoT UnPack() {
    var _o = new ActivityLinkageInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ActivityLinkageInfoT _o) {
    _o.Id = this.Id;
    _o.ActivityLinkageId = this.ActivityLinkageId;
    _o.Language = this.Language;
    _o.BigImage = this.BigImage;
    _o.LinkUrl = this.LinkUrl;
    _o.QrCode = this.QrCode;
  }
  public static Offset<WWParser.Defs.ActivityLinkageInfo> Pack(FlatBufferBuilder builder, ActivityLinkageInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ActivityLinkageInfo>);
    var _big_image = _o.BigImage == null ? default(StringOffset) : builder.CreateString(_o.BigImage);
    var _link_url = _o.LinkUrl == null ? default(StringOffset) : builder.CreateString(_o.LinkUrl);
    var _qr_code = _o.QrCode == null ? default(StringOffset) : builder.CreateString(_o.QrCode);
    return CreateActivityLinkageInfo(
      builder,
      _o.Id,
      _o.ActivityLinkageId,
      _o.Language,
      _big_image,
      _link_url,
      _qr_code);
  }
}

public class ActivityLinkageInfoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_linkage_id")]
  public int ActivityLinkageId { get; set; }
  [Newtonsoft.Json.JsonProperty("language")]
  public int Language { get; set; }
  [Newtonsoft.Json.JsonProperty("big_image")]
  public string BigImage { get; set; }
  [Newtonsoft.Json.JsonProperty("link_url")]
  public string LinkUrl { get; set; }
  [Newtonsoft.Json.JsonProperty("qr_code")]
  public string QrCode { get; set; }

  public ActivityLinkageInfoT() {
    this.Id = 0;
    this.ActivityLinkageId = 0;
    this.Language = 0;
    this.BigImage = null;
    this.LinkUrl = null;
    this.QrCode = null;
  }
}


static public class ActivityLinkageInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityLinkageId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Language*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*BigImage*/, false)
      && verifier.VerifyString(tablePos, 12 /*LinkUrl*/, false)
      && verifier.VerifyString(tablePos, 14 /*QrCode*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
