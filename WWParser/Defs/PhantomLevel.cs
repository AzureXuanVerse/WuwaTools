// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhantomLevel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhantomLevel GetRootAsPhantomLevel(ByteBuffer _bb) { return GetRootAsPhantomLevel(_bb, new PhantomLevel()); }
  public static PhantomLevel GetRootAsPhantomLevel(ByteBuffer _bb, PhantomLevel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhantomLevel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int GroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Level { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Exp { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.PhantomLevel> CreatePhantomLevel(FlatBufferBuilder builder,
      int id = 0,
      int group_id = 0,
      int level = 0,
      int exp = 0) {
    builder.StartTable(4);
    PhantomLevel.AddExp(builder, exp);
    PhantomLevel.AddLevel(builder, level);
    PhantomLevel.AddGroupId(builder, group_id);
    PhantomLevel.AddId(builder, id);
    return PhantomLevel.EndPhantomLevel(builder);
  }

  public static void StartPhantomLevel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, int groupId) { builder.AddInt(1, groupId, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(2, level, 0); }
  public static void AddExp(FlatBufferBuilder builder, int exp) { builder.AddInt(3, exp, 0); }
  public static Offset<WWParser.Defs.PhantomLevel> EndPhantomLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhantomLevel>(o);
  }
  public PhantomLevelT UnPack() {
    var _o = new PhantomLevelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhantomLevelT _o) {
    _o.Id = this.Id;
    _o.GroupId = this.GroupId;
    _o.Level = this.Level;
    _o.Exp = this.Exp;
  }
  public static Offset<WWParser.Defs.PhantomLevel> Pack(FlatBufferBuilder builder, PhantomLevelT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhantomLevel>);
    return CreatePhantomLevel(
      builder,
      _o.Id,
      _o.GroupId,
      _o.Level,
      _o.Exp);
  }
}

public class PhantomLevelT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("group_id")]
  public int GroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("level")]
  public int Level { get; set; }
  [Newtonsoft.Json.JsonProperty("exp")]
  public int Exp { get; set; }

  public PhantomLevelT() {
    this.Id = 0;
    this.GroupId = 0;
    this.Level = 0;
    this.Exp = 0;
  }
}


static public class PhantomLevelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*GroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Exp*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
