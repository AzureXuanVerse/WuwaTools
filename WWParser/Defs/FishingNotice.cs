// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FishingNotice : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FishingNotice GetRootAsFishingNotice(ByteBuffer _bb) { return GetRootAsFishingNotice(_bb, new FishingNotice()); }
  public static FishingNotice GetRootAsFishingNotice(ByteBuffer _bb, FishingNotice obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FishingNotice __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AlertCondition { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FinishCondition { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string AlertTip { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAlertTipBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAlertTipBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAlertTipArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.FishingNotice> CreateFishingNotice(FlatBufferBuilder builder,
      int id = 0,
      int alert_condition = 0,
      int finish_condition = 0,
      StringOffset alert_tipOffset = default(StringOffset)) {
    builder.StartTable(4);
    FishingNotice.AddAlertTip(builder, alert_tipOffset);
    FishingNotice.AddFinishCondition(builder, finish_condition);
    FishingNotice.AddAlertCondition(builder, alert_condition);
    FishingNotice.AddId(builder, id);
    return FishingNotice.EndFishingNotice(builder);
  }

  public static void StartFishingNotice(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddAlertCondition(FlatBufferBuilder builder, int alertCondition) { builder.AddInt(1, alertCondition, 0); }
  public static void AddFinishCondition(FlatBufferBuilder builder, int finishCondition) { builder.AddInt(2, finishCondition, 0); }
  public static void AddAlertTip(FlatBufferBuilder builder, StringOffset alertTipOffset) { builder.AddOffset(3, alertTipOffset.Value, 0); }
  public static Offset<WWParser.Defs.FishingNotice> EndFishingNotice(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FishingNotice>(o);
  }
  public FishingNoticeT UnPack() {
    var _o = new FishingNoticeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FishingNoticeT _o) {
    _o.Id = this.Id;
    _o.AlertCondition = this.AlertCondition;
    _o.FinishCondition = this.FinishCondition;
    _o.AlertTip = this.AlertTip;
  }
  public static Offset<WWParser.Defs.FishingNotice> Pack(FlatBufferBuilder builder, FishingNoticeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FishingNotice>);
    var _alert_tip = _o.AlertTip == null ? default(StringOffset) : builder.CreateString(_o.AlertTip);
    return CreateFishingNotice(
      builder,
      _o.Id,
      _o.AlertCondition,
      _o.FinishCondition,
      _alert_tip);
  }
}

public class FishingNoticeT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("alert_condition")]
  public int AlertCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("finish_condition")]
  public int FinishCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("alert_tip")]
  public string AlertTip { get; set; }

  public FishingNoticeT() {
    this.Id = 0;
    this.AlertCondition = 0;
    this.FinishCondition = 0;
    this.AlertTip = null;
  }
}


static public class FishingNoticeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*AlertCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*FinishCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*AlertTip*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
