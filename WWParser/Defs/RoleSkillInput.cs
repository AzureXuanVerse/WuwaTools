// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleSkillInput : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleSkillInput GetRootAsRoleSkillInput(ByteBuffer _bb) { return GetRootAsRoleSkillInput(_bb, new RoleSkillInput()); }
  public static RoleSkillInput GetRootAsRoleSkillInput(ByteBuffer _bb, RoleSkillInput obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleSkillInput __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RoleId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillInputIdList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SkillInputIdListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSkillInputIdListBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetSkillInputIdListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetSkillInputIdListArray() { return __p.__vector_as_array<int>(6); }
  public string Icon { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(8); }
  public string DescList(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DescListLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.RoleSkillInput> CreateRoleSkillInput(FlatBufferBuilder builder,
      int role_id = 0,
      VectorOffset skill_input_id_listOffset = default(VectorOffset),
      StringOffset iconOffset = default(StringOffset),
      VectorOffset desc_listOffset = default(VectorOffset)) {
    builder.StartTable(4);
    RoleSkillInput.AddDescList(builder, desc_listOffset);
    RoleSkillInput.AddIcon(builder, iconOffset);
    RoleSkillInput.AddSkillInputIdList(builder, skill_input_id_listOffset);
    RoleSkillInput.AddRoleId(builder, role_id);
    return RoleSkillInput.EndRoleSkillInput(builder);
  }

  public static void StartRoleSkillInput(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(0, roleId, 0); }
  public static void AddSkillInputIdList(FlatBufferBuilder builder, VectorOffset skillInputIdListOffset) { builder.AddOffset(1, skillInputIdListOffset.Value, 0); }
  public static VectorOffset CreateSkillInputIdListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSkillInputIdListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillInputIdListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillInputIdListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSkillInputIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(2, iconOffset.Value, 0); }
  public static void AddDescList(FlatBufferBuilder builder, VectorOffset descListOffset) { builder.AddOffset(3, descListOffset.Value, 0); }
  public static VectorOffset CreateDescListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDescListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDescListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDescListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDescListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.RoleSkillInput> EndRoleSkillInput(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleSkillInput>(o);
  }
  public RoleSkillInputT UnPack() {
    var _o = new RoleSkillInputT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleSkillInputT _o) {
    _o.RoleId = this.RoleId;
    _o.SkillInputIdList = new List<int>();
    for (var _j = 0; _j < this.SkillInputIdListLength; ++_j) {_o.SkillInputIdList.Add(this.SkillInputIdList(_j));}
    _o.Icon = this.Icon;
    _o.DescList = new List<string>();
    for (var _j = 0; _j < this.DescListLength; ++_j) {_o.DescList.Add(this.DescList(_j));}
  }
  public static Offset<WWParser.Defs.RoleSkillInput> Pack(FlatBufferBuilder builder, RoleSkillInputT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleSkillInput>);
    var _skill_input_id_list = default(VectorOffset);
    if (_o.SkillInputIdList != null) {
      var __skill_input_id_list = _o.SkillInputIdList.ToArray();
      _skill_input_id_list = CreateSkillInputIdListVector(builder, __skill_input_id_list);
    }
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _desc_list = default(VectorOffset);
    if (_o.DescList != null) {
      var __desc_list = new StringOffset[_o.DescList.Count];
      for (var _j = 0; _j < __desc_list.Length; ++_j) { __desc_list[_j] = builder.CreateString(_o.DescList[_j]); }
      _desc_list = CreateDescListVector(builder, __desc_list);
    }
    return CreateRoleSkillInput(
      builder,
      _o.RoleId,
      _skill_input_id_list,
      _icon,
      _desc_list);
  }
}

public class RoleSkillInputT
{
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_input_id_list")]
  public List<int> SkillInputIdList { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("desc_list")]
  public List<string> DescList { get; set; }

  public RoleSkillInputT() {
    this.RoleId = 0;
    this.SkillInputIdList = null;
    this.Icon = null;
    this.DescList = null;
  }
}


static public class RoleSkillInputVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*SkillInputIdList*/, 4 /*int*/, false)
      && verifier.VerifyString(tablePos, 8 /*Icon*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 10 /*DescList*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
