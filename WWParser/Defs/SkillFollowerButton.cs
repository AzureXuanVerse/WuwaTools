// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillFollowerButton : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillFollowerButton GetRootAsSkillFollowerButton(ByteBuffer _bb) { return GetRootAsSkillFollowerButton(_bb, new SkillFollowerButton()); }
  public static SkillFollowerButton GetRootAsSkillFollowerButton(ByteBuffer _bb, SkillFollowerButton obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillFollowerButton __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PbDataId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public int ButtonType { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActionType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? SkillIdTagMap(int j) { int o = __p.__offset(16); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillIdTagMapLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string SkillIcon { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSkillIconBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetSkillIconBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetSkillIconArray() { return __p.__vector_as_array<byte>(18); }
  public int SkillIconTags(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SkillIconTagsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSkillIconTagsBytes() { return __p.__vector_as_span<int>(20, 4); }
#else
  public ArraySegment<byte>? GetSkillIconTagsBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public int[] GetSkillIconTagsArray() { return __p.__vector_as_array<int>(20); }
  public int DisableTags(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int DisableTagsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetDisableTagsBytes() { return __p.__vector_as_span<int>(22, 4); }
#else
  public ArraySegment<byte>? GetDisableTagsBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public int[] GetDisableTagsArray() { return __p.__vector_as_array<int>(22); }
  public WWParser.Defs.DicIntIntArray? DisableSkillIdTags(int j) { int o = __p.__offset(24); return o != 0 ? (WWParser.Defs.DicIntIntArray?)(new WWParser.Defs.DicIntIntArray()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DisableSkillIdTagsLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool IsVisible { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int NotOccupyTags(int j) { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int NotOccupyTagsLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetNotOccupyTagsBytes() { return __p.__vector_as_span<int>(28, 4); }
#else
  public ArraySegment<byte>? GetNotOccupyTagsBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public int[] GetNotOccupyTagsArray() { return __p.__vector_as_array<int>(28); }
  public int ElementId { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int AttributeId { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxAttributeId { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntIntArray? AttributeIdTagMap(int j) { int o = __p.__offset(36); return o != 0 ? (WWParser.Defs.DicIntIntArray?)(new WWParser.Defs.DicIntIntArray()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AttributeIdTagMapLength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int AttributeEnableTags(int j) { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AttributeEnableTagsLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetAttributeEnableTagsBytes() { return __p.__vector_as_span<int>(38, 4); }
#else
  public ArraySegment<byte>? GetAttributeEnableTagsBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public int[] GetAttributeEnableTagsArray() { return __p.__vector_as_array<int>(38); }
  public bool IsLongPressControlCamera { get { int o = __p.__offset(40); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int LongPressTime { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? DynamicEffectTagMap(int j) { int o = __p.__offset(44); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DynamicEffectTagMapLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int CustomHandleId { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.SkillFollowerButton> CreateSkillFollowerButton(FlatBufferBuilder builder,
      int id = 0,
      int pb_data_id = 0,
      StringOffset nameOffset = default(StringOffset),
      int button_type = 0,
      int action_type = 0,
      int skill_id = 0,
      VectorOffset skill_id_tag_mapOffset = default(VectorOffset),
      StringOffset skill_iconOffset = default(StringOffset),
      VectorOffset skill_icon_tagsOffset = default(VectorOffset),
      VectorOffset disable_tagsOffset = default(VectorOffset),
      VectorOffset disable_skill_id_tagsOffset = default(VectorOffset),
      bool is_visible = false,
      VectorOffset not_occupy_tagsOffset = default(VectorOffset),
      int element_id = 1,
      int attribute_id = 0,
      int max_attribute_id = 0,
      VectorOffset attribute_id_tag_mapOffset = default(VectorOffset),
      VectorOffset attribute_enable_tagsOffset = default(VectorOffset),
      bool is_long_press_control_camera = false,
      int long_press_time = 0,
      VectorOffset dynamic_effect_tag_mapOffset = default(VectorOffset),
      int custom_handle_id = 0) {
    builder.StartTable(22);
    SkillFollowerButton.AddCustomHandleId(builder, custom_handle_id);
    SkillFollowerButton.AddDynamicEffectTagMap(builder, dynamic_effect_tag_mapOffset);
    SkillFollowerButton.AddLongPressTime(builder, long_press_time);
    SkillFollowerButton.AddAttributeEnableTags(builder, attribute_enable_tagsOffset);
    SkillFollowerButton.AddAttributeIdTagMap(builder, attribute_id_tag_mapOffset);
    SkillFollowerButton.AddMaxAttributeId(builder, max_attribute_id);
    SkillFollowerButton.AddAttributeId(builder, attribute_id);
    SkillFollowerButton.AddElementId(builder, element_id);
    SkillFollowerButton.AddNotOccupyTags(builder, not_occupy_tagsOffset);
    SkillFollowerButton.AddDisableSkillIdTags(builder, disable_skill_id_tagsOffset);
    SkillFollowerButton.AddDisableTags(builder, disable_tagsOffset);
    SkillFollowerButton.AddSkillIconTags(builder, skill_icon_tagsOffset);
    SkillFollowerButton.AddSkillIcon(builder, skill_iconOffset);
    SkillFollowerButton.AddSkillIdTagMap(builder, skill_id_tag_mapOffset);
    SkillFollowerButton.AddSkillId(builder, skill_id);
    SkillFollowerButton.AddActionType(builder, action_type);
    SkillFollowerButton.AddButtonType(builder, button_type);
    SkillFollowerButton.AddName(builder, nameOffset);
    SkillFollowerButton.AddPbDataId(builder, pb_data_id);
    SkillFollowerButton.AddId(builder, id);
    SkillFollowerButton.AddIsLongPressControlCamera(builder, is_long_press_control_camera);
    SkillFollowerButton.AddIsVisible(builder, is_visible);
    return SkillFollowerButton.EndSkillFollowerButton(builder);
  }

  public static void StartSkillFollowerButton(FlatBufferBuilder builder) { builder.StartTable(22); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddPbDataId(FlatBufferBuilder builder, int pbDataId) { builder.AddInt(1, pbDataId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddButtonType(FlatBufferBuilder builder, int buttonType) { builder.AddInt(3, buttonType, 0); }
  public static void AddActionType(FlatBufferBuilder builder, int actionType) { builder.AddInt(4, actionType, 0); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(5, skillId, 0); }
  public static void AddSkillIdTagMap(FlatBufferBuilder builder, VectorOffset skillIdTagMapOffset) { builder.AddOffset(6, skillIdTagMapOffset.Value, 0); }
  public static VectorOffset CreateSkillIdTagMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSkillIdTagMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSkillIcon(FlatBufferBuilder builder, StringOffset skillIconOffset) { builder.AddOffset(7, skillIconOffset.Value, 0); }
  public static void AddSkillIconTags(FlatBufferBuilder builder, VectorOffset skillIconTagsOffset) { builder.AddOffset(8, skillIconTagsOffset.Value, 0); }
  public static VectorOffset CreateSkillIconTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSkillIconTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIconTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIconTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSkillIconTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDisableTags(FlatBufferBuilder builder, VectorOffset disableTagsOffset) { builder.AddOffset(9, disableTagsOffset.Value, 0); }
  public static VectorOffset CreateDisableTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDisableTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDisableSkillIdTags(FlatBufferBuilder builder, VectorOffset disableSkillIdTagsOffset) { builder.AddOffset(10, disableSkillIdTagsOffset.Value, 0); }
  public static VectorOffset CreateDisableSkillIdTagsVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntIntArray>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntIntArray>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDisableSkillIdTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIsVisible(FlatBufferBuilder builder, bool isVisible) { builder.AddBool(11, isVisible, false); }
  public static void AddNotOccupyTags(FlatBufferBuilder builder, VectorOffset notOccupyTagsOffset) { builder.AddOffset(12, notOccupyTagsOffset.Value, 0); }
  public static VectorOffset CreateNotOccupyTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateNotOccupyTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateNotOccupyTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateNotOccupyTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartNotOccupyTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddElementId(FlatBufferBuilder builder, int elementId) { builder.AddInt(13, elementId, 1); }
  public static void AddAttributeId(FlatBufferBuilder builder, int attributeId) { builder.AddInt(14, attributeId, 0); }
  public static void AddMaxAttributeId(FlatBufferBuilder builder, int maxAttributeId) { builder.AddInt(15, maxAttributeId, 0); }
  public static void AddAttributeIdTagMap(FlatBufferBuilder builder, VectorOffset attributeIdTagMapOffset) { builder.AddOffset(16, attributeIdTagMapOffset.Value, 0); }
  public static VectorOffset CreateAttributeIdTagMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAttributeIdTagMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributeIdTagMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntIntArray>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributeIdTagMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntIntArray>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAttributeIdTagMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttributeEnableTags(FlatBufferBuilder builder, VectorOffset attributeEnableTagsOffset) { builder.AddOffset(17, attributeEnableTagsOffset.Value, 0); }
  public static VectorOffset CreateAttributeEnableTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAttributeEnableTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributeEnableTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributeEnableTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAttributeEnableTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIsLongPressControlCamera(FlatBufferBuilder builder, bool isLongPressControlCamera) { builder.AddBool(18, isLongPressControlCamera, false); }
  public static void AddLongPressTime(FlatBufferBuilder builder, int longPressTime) { builder.AddInt(19, longPressTime, 0); }
  public static void AddDynamicEffectTagMap(FlatBufferBuilder builder, VectorOffset dynamicEffectTagMapOffset) { builder.AddOffset(20, dynamicEffectTagMapOffset.Value, 0); }
  public static VectorOffset CreateDynamicEffectTagMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDynamicEffectTagMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCustomHandleId(FlatBufferBuilder builder, int customHandleId) { builder.AddInt(21, customHandleId, 0); }
  public static Offset<WWParser.Defs.SkillFollowerButton> EndSkillFollowerButton(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillFollowerButton>(o);
  }
  public SkillFollowerButtonT UnPack() {
    var _o = new SkillFollowerButtonT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillFollowerButtonT _o) {
    _o.Id = this.Id;
    _o.PbDataId = this.PbDataId;
    _o.Name = this.Name;
    _o.ButtonType = this.ButtonType;
    _o.ActionType = this.ActionType;
    _o.SkillId = this.SkillId;
    _o.SkillIdTagMap = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.SkillIdTagMapLength; ++_j) {_o.SkillIdTagMap.Add(this.SkillIdTagMap(_j).HasValue ? this.SkillIdTagMap(_j).Value.UnPack() : null);}
    _o.SkillIcon = this.SkillIcon;
    _o.SkillIconTags = new List<int>();
    for (var _j = 0; _j < this.SkillIconTagsLength; ++_j) {_o.SkillIconTags.Add(this.SkillIconTags(_j));}
    _o.DisableTags = new List<int>();
    for (var _j = 0; _j < this.DisableTagsLength; ++_j) {_o.DisableTags.Add(this.DisableTags(_j));}
    _o.DisableSkillIdTags = new List<WWParser.Defs.DicIntIntArrayT>();
    for (var _j = 0; _j < this.DisableSkillIdTagsLength; ++_j) {_o.DisableSkillIdTags.Add(this.DisableSkillIdTags(_j).HasValue ? this.DisableSkillIdTags(_j).Value.UnPack() : null);}
    _o.IsVisible = this.IsVisible;
    _o.NotOccupyTags = new List<int>();
    for (var _j = 0; _j < this.NotOccupyTagsLength; ++_j) {_o.NotOccupyTags.Add(this.NotOccupyTags(_j));}
    _o.ElementId = this.ElementId;
    _o.AttributeId = this.AttributeId;
    _o.MaxAttributeId = this.MaxAttributeId;
    _o.AttributeIdTagMap = new List<WWParser.Defs.DicIntIntArrayT>();
    for (var _j = 0; _j < this.AttributeIdTagMapLength; ++_j) {_o.AttributeIdTagMap.Add(this.AttributeIdTagMap(_j).HasValue ? this.AttributeIdTagMap(_j).Value.UnPack() : null);}
    _o.AttributeEnableTags = new List<int>();
    for (var _j = 0; _j < this.AttributeEnableTagsLength; ++_j) {_o.AttributeEnableTags.Add(this.AttributeEnableTags(_j));}
    _o.IsLongPressControlCamera = this.IsLongPressControlCamera;
    _o.LongPressTime = this.LongPressTime;
    _o.DynamicEffectTagMap = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.DynamicEffectTagMapLength; ++_j) {_o.DynamicEffectTagMap.Add(this.DynamicEffectTagMap(_j).HasValue ? this.DynamicEffectTagMap(_j).Value.UnPack() : null);}
    _o.CustomHandleId = this.CustomHandleId;
  }
  public static Offset<WWParser.Defs.SkillFollowerButton> Pack(FlatBufferBuilder builder, SkillFollowerButtonT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillFollowerButton>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _skill_id_tag_map = default(VectorOffset);
    if (_o.SkillIdTagMap != null) {
      var __skill_id_tag_map = new Offset<WWParser.Defs.DicIntInt>[_o.SkillIdTagMap.Count];
      for (var _j = 0; _j < __skill_id_tag_map.Length; ++_j) { __skill_id_tag_map[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.SkillIdTagMap[_j]); }
      _skill_id_tag_map = CreateSkillIdTagMapVector(builder, __skill_id_tag_map);
    }
    var _skill_icon = _o.SkillIcon == null ? default(StringOffset) : builder.CreateString(_o.SkillIcon);
    var _skill_icon_tags = default(VectorOffset);
    if (_o.SkillIconTags != null) {
      var __skill_icon_tags = _o.SkillIconTags.ToArray();
      _skill_icon_tags = CreateSkillIconTagsVector(builder, __skill_icon_tags);
    }
    var _disable_tags = default(VectorOffset);
    if (_o.DisableTags != null) {
      var __disable_tags = _o.DisableTags.ToArray();
      _disable_tags = CreateDisableTagsVector(builder, __disable_tags);
    }
    var _disable_skill_id_tags = default(VectorOffset);
    if (_o.DisableSkillIdTags != null) {
      var __disable_skill_id_tags = new Offset<WWParser.Defs.DicIntIntArray>[_o.DisableSkillIdTags.Count];
      for (var _j = 0; _j < __disable_skill_id_tags.Length; ++_j) { __disable_skill_id_tags[_j] = WWParser.Defs.DicIntIntArray.Pack(builder, _o.DisableSkillIdTags[_j]); }
      _disable_skill_id_tags = CreateDisableSkillIdTagsVector(builder, __disable_skill_id_tags);
    }
    var _not_occupy_tags = default(VectorOffset);
    if (_o.NotOccupyTags != null) {
      var __not_occupy_tags = _o.NotOccupyTags.ToArray();
      _not_occupy_tags = CreateNotOccupyTagsVector(builder, __not_occupy_tags);
    }
    var _attribute_id_tag_map = default(VectorOffset);
    if (_o.AttributeIdTagMap != null) {
      var __attribute_id_tag_map = new Offset<WWParser.Defs.DicIntIntArray>[_o.AttributeIdTagMap.Count];
      for (var _j = 0; _j < __attribute_id_tag_map.Length; ++_j) { __attribute_id_tag_map[_j] = WWParser.Defs.DicIntIntArray.Pack(builder, _o.AttributeIdTagMap[_j]); }
      _attribute_id_tag_map = CreateAttributeIdTagMapVector(builder, __attribute_id_tag_map);
    }
    var _attribute_enable_tags = default(VectorOffset);
    if (_o.AttributeEnableTags != null) {
      var __attribute_enable_tags = _o.AttributeEnableTags.ToArray();
      _attribute_enable_tags = CreateAttributeEnableTagsVector(builder, __attribute_enable_tags);
    }
    var _dynamic_effect_tag_map = default(VectorOffset);
    if (_o.DynamicEffectTagMap != null) {
      var __dynamic_effect_tag_map = new Offset<WWParser.Defs.DicIntInt>[_o.DynamicEffectTagMap.Count];
      for (var _j = 0; _j < __dynamic_effect_tag_map.Length; ++_j) { __dynamic_effect_tag_map[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.DynamicEffectTagMap[_j]); }
      _dynamic_effect_tag_map = CreateDynamicEffectTagMapVector(builder, __dynamic_effect_tag_map);
    }
    return CreateSkillFollowerButton(
      builder,
      _o.Id,
      _o.PbDataId,
      _name,
      _o.ButtonType,
      _o.ActionType,
      _o.SkillId,
      _skill_id_tag_map,
      _skill_icon,
      _skill_icon_tags,
      _disable_tags,
      _disable_skill_id_tags,
      _o.IsVisible,
      _not_occupy_tags,
      _o.ElementId,
      _o.AttributeId,
      _o.MaxAttributeId,
      _attribute_id_tag_map,
      _attribute_enable_tags,
      _o.IsLongPressControlCamera,
      _o.LongPressTime,
      _dynamic_effect_tag_map,
      _o.CustomHandleId);
  }
}

public class SkillFollowerButtonT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("pb_data_id")]
  public int PbDataId { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("button_type")]
  public int ButtonType { get; set; }
  [Newtonsoft.Json.JsonProperty("action_type")]
  public int ActionType { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id")]
  public int SkillId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id_tag_map")]
  public List<WWParser.Defs.DicIntIntT> SkillIdTagMap { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_icon")]
  public string SkillIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_icon_tags")]
  public List<int> SkillIconTags { get; set; }
  [Newtonsoft.Json.JsonProperty("disable_tags")]
  public List<int> DisableTags { get; set; }
  [Newtonsoft.Json.JsonProperty("disable_skill_id_tags")]
  public List<WWParser.Defs.DicIntIntArrayT> DisableSkillIdTags { get; set; }
  [Newtonsoft.Json.JsonProperty("is_visible")]
  public bool IsVisible { get; set; }
  [Newtonsoft.Json.JsonProperty("not_occupy_tags")]
  public List<int> NotOccupyTags { get; set; }
  [Newtonsoft.Json.JsonProperty("element_id")]
  public int ElementId { get; set; }
  [Newtonsoft.Json.JsonProperty("attribute_id")]
  public int AttributeId { get; set; }
  [Newtonsoft.Json.JsonProperty("max_attribute_id")]
  public int MaxAttributeId { get; set; }
  [Newtonsoft.Json.JsonProperty("attribute_id_tag_map")]
  public List<WWParser.Defs.DicIntIntArrayT> AttributeIdTagMap { get; set; }
  [Newtonsoft.Json.JsonProperty("attribute_enable_tags")]
  public List<int> AttributeEnableTags { get; set; }
  [Newtonsoft.Json.JsonProperty("is_long_press_control_camera")]
  public bool IsLongPressControlCamera { get; set; }
  [Newtonsoft.Json.JsonProperty("long_press_time")]
  public int LongPressTime { get; set; }
  [Newtonsoft.Json.JsonProperty("dynamic_effect_tag_map")]
  public List<WWParser.Defs.DicIntIntT> DynamicEffectTagMap { get; set; }
  [Newtonsoft.Json.JsonProperty("custom_handle_id")]
  public int CustomHandleId { get; set; }

  public SkillFollowerButtonT() {
    this.Id = 0;
    this.PbDataId = 0;
    this.Name = null;
    this.ButtonType = 0;
    this.ActionType = 0;
    this.SkillId = 0;
    this.SkillIdTagMap = null;
    this.SkillIcon = null;
    this.SkillIconTags = null;
    this.DisableTags = null;
    this.DisableSkillIdTags = null;
    this.IsVisible = false;
    this.NotOccupyTags = null;
    this.ElementId = 1;
    this.AttributeId = 0;
    this.MaxAttributeId = 0;
    this.AttributeIdTagMap = null;
    this.AttributeEnableTags = null;
    this.IsLongPressControlCamera = false;
    this.LongPressTime = 0;
    this.DynamicEffectTagMap = null;
    this.CustomHandleId = 0;
  }
}


static public class SkillFollowerButtonVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*PbDataId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyField(tablePos, 10 /*ButtonType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ActionType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*SkillId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 16 /*SkillIdTagMap*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyString(tablePos, 18 /*SkillIcon*/, false)
      && verifier.VerifyVectorOfData(tablePos, 20 /*SkillIconTags*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 22 /*DisableTags*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 24 /*DisableSkillIdTags*/, WWParser.Defs.DicIntIntArrayVerify.Verify, false)
      && verifier.VerifyField(tablePos, 26 /*IsVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyVectorOfData(tablePos, 28 /*NotOccupyTags*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 30 /*ElementId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*AttributeId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*MaxAttributeId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 36 /*AttributeIdTagMap*/, WWParser.Defs.DicIntIntArrayVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 38 /*AttributeEnableTags*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 40 /*IsLongPressControlCamera*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 42 /*LongPressTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 44 /*DynamicEffectTagMap*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 46 /*CustomHandleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
