// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleTrialActivity : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleTrialActivity GetRootAsRoleTrialActivity(ByteBuffer _bb) { return GetRootAsRoleTrialActivity(_bb, new RoleTrialActivity()); }
  public static RoleTrialActivity GetRootAsRoleTrialActivity(ByteBuffer _bb, RoleTrialActivity obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleTrialActivity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleIdList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RoleIdListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRoleIdListBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetRoleIdListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetRoleIdListArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<WWParser.Defs.RoleTrialActivity> CreateRoleTrialActivity(FlatBufferBuilder builder,
      int id = 0,
      VectorOffset role_id_listOffset = default(VectorOffset)) {
    builder.StartTable(2);
    RoleTrialActivity.AddRoleIdList(builder, role_id_listOffset);
    RoleTrialActivity.AddId(builder, id);
    return RoleTrialActivity.EndRoleTrialActivity(builder);
  }

  public static void StartRoleTrialActivity(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleIdList(FlatBufferBuilder builder, VectorOffset roleIdListOffset) { builder.AddOffset(1, roleIdListOffset.Value, 0); }
  public static VectorOffset CreateRoleIdListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRoleIdListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRoleIdListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRoleIdListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRoleIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.RoleTrialActivity> EndRoleTrialActivity(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleTrialActivity>(o);
  }
  public RoleTrialActivityT UnPack() {
    var _o = new RoleTrialActivityT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleTrialActivityT _o) {
    _o.Id = this.Id;
    _o.RoleIdList = new List<int>();
    for (var _j = 0; _j < this.RoleIdListLength; ++_j) {_o.RoleIdList.Add(this.RoleIdList(_j));}
  }
  public static Offset<WWParser.Defs.RoleTrialActivity> Pack(FlatBufferBuilder builder, RoleTrialActivityT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleTrialActivity>);
    var _role_id_list = default(VectorOffset);
    if (_o.RoleIdList != null) {
      var __role_id_list = _o.RoleIdList.ToArray();
      _role_id_list = CreateRoleIdListVector(builder, __role_id_list);
    }
    return CreateRoleTrialActivity(
      builder,
      _o.Id,
      _role_id_list);
  }
}

public class RoleTrialActivityT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_id_list")]
  public List<int> RoleIdList { get; set; }

  public RoleTrialActivityT() {
    this.Id = 0;
    this.RoleIdList = null;
  }
}


static public class RoleTrialActivityVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*RoleIdList*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
