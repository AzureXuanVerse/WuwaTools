// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UiNormalConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static UiNormalConfig GetRootAsUiNormalConfig(ByteBuffer _bb) { return GetRootAsUiNormalConfig(_bb, new UiNormalConfig()); }
  public static UiNormalConfig GetRootAsUiNormalConfig(ByteBuffer _bb, UiNormalConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UiNormalConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ViewName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetViewNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetViewNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetViewNameArray() { return __p.__vector_as_array<byte>(4); }
  public int SortIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }

  public static Offset<WWParser.Defs.UiNormalConfig> CreateUiNormalConfig(FlatBufferBuilder builder,
      StringOffset view_nameOffset = default(StringOffset),
      int sort_index = -1) {
    builder.StartTable(2);
    UiNormalConfig.AddSortIndex(builder, sort_index);
    UiNormalConfig.AddViewName(builder, view_nameOffset);
    return UiNormalConfig.EndUiNormalConfig(builder);
  }

  public static void StartUiNormalConfig(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddViewName(FlatBufferBuilder builder, StringOffset viewNameOffset) { builder.AddOffset(0, viewNameOffset.Value, 0); }
  public static void AddSortIndex(FlatBufferBuilder builder, int sortIndex) { builder.AddInt(1, sortIndex, -1); }
  public static Offset<WWParser.Defs.UiNormalConfig> EndUiNormalConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.UiNormalConfig>(o);
  }
  public UiNormalConfigT UnPack() {
    var _o = new UiNormalConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(UiNormalConfigT _o) {
    _o.ViewName = this.ViewName;
    _o.SortIndex = this.SortIndex;
  }
  public static Offset<WWParser.Defs.UiNormalConfig> Pack(FlatBufferBuilder builder, UiNormalConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.UiNormalConfig>);
    var _view_name = _o.ViewName == null ? default(StringOffset) : builder.CreateString(_o.ViewName);
    return CreateUiNormalConfig(
      builder,
      _view_name,
      _o.SortIndex);
  }
}

public class UiNormalConfigT
{
  [Newtonsoft.Json.JsonProperty("view_name")]
  public string ViewName { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_index")]
  public int SortIndex { get; set; }

  public UiNormalConfigT() {
    this.ViewName = null;
    this.SortIndex = -1;
  }
}


static public class UiNormalConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ViewName*/, false)
      && verifier.VerifyField(tablePos, 6 /*SortIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
