// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BackgroundCard : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BackgroundCard GetRootAsBackgroundCard(ByteBuffer _bb) { return GetRootAsBackgroundCard(_bb, new BackgroundCard()); }
  public static BackgroundCard GetRootAsBackgroundCard(ByteBuffer _bb, BackgroundCard obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BackgroundCard __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QualityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int ItemAccess(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ItemAccessLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetItemAccessBytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetItemAccessBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetItemAccessArray() { return __p.__vector_as_array<int>(8); }
  public int SortIndex { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string LongCardPath { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLongCardPathBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLongCardPathBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLongCardPathArray() { return __p.__vector_as_array<byte>(12); }
  public string CardPath { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCardPathBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetCardPathBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetCardPathArray() { return __p.__vector_as_array<byte>(14); }
  public string FunctionViewCardPath { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFunctionViewCardPathBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetFunctionViewCardPathBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetFunctionViewCardPathArray() { return __p.__vector_as_array<byte>(16); }
  public string Icon { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(18); }
  public string IconMiddle { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconMiddleBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetIconMiddleBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetIconMiddleArray() { return __p.__vector_as_array<byte>(20); }
  public string IconSmall { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSmallBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetIconSmallBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetIconSmallArray() { return __p.__vector_as_array<byte>(22); }
  public string Title { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(24); }
  public string AttributesDescription { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttributesDescriptionBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetAttributesDescriptionBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetAttributesDescriptionArray() { return __p.__vector_as_array<byte>(26); }
  public string ObtainedShowDescription { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetObtainedShowDescriptionBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetObtainedShowDescriptionBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetObtainedShowDescriptionArray() { return __p.__vector_as_array<byte>(28); }
  public string TypeDescription { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeDescriptionBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetTypeDescriptionBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetTypeDescriptionArray() { return __p.__vector_as_array<byte>(30); }
  public string BgDescription { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgDescriptionBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetBgDescriptionBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetBgDescriptionArray() { return __p.__vector_as_array<byte>(32); }
  public string Tips { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTipsBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetTipsBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetTipsArray() { return __p.__vector_as_array<byte>(34); }
  public bool ShowInBag { get { int o = __p.__offset(36); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int RedDotDisableRule { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.BackgroundCard> CreateBackgroundCard(FlatBufferBuilder builder,
      int id = 0,
      int quality_id = 1,
      VectorOffset item_accessOffset = default(VectorOffset),
      int sort_index = 0,
      StringOffset long_card_pathOffset = default(StringOffset),
      StringOffset card_pathOffset = default(StringOffset),
      StringOffset function_view_card_pathOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      StringOffset icon_middleOffset = default(StringOffset),
      StringOffset icon_smallOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset attributes_descriptionOffset = default(StringOffset),
      StringOffset obtained_show_descriptionOffset = default(StringOffset),
      StringOffset type_descriptionOffset = default(StringOffset),
      StringOffset bg_descriptionOffset = default(StringOffset),
      StringOffset tipsOffset = default(StringOffset),
      bool show_in_bag = false,
      int red_dot_disable_rule = 0) {
    builder.StartTable(18);
    BackgroundCard.AddRedDotDisableRule(builder, red_dot_disable_rule);
    BackgroundCard.AddTips(builder, tipsOffset);
    BackgroundCard.AddBgDescription(builder, bg_descriptionOffset);
    BackgroundCard.AddTypeDescription(builder, type_descriptionOffset);
    BackgroundCard.AddObtainedShowDescription(builder, obtained_show_descriptionOffset);
    BackgroundCard.AddAttributesDescription(builder, attributes_descriptionOffset);
    BackgroundCard.AddTitle(builder, titleOffset);
    BackgroundCard.AddIconSmall(builder, icon_smallOffset);
    BackgroundCard.AddIconMiddle(builder, icon_middleOffset);
    BackgroundCard.AddIcon(builder, iconOffset);
    BackgroundCard.AddFunctionViewCardPath(builder, function_view_card_pathOffset);
    BackgroundCard.AddCardPath(builder, card_pathOffset);
    BackgroundCard.AddLongCardPath(builder, long_card_pathOffset);
    BackgroundCard.AddSortIndex(builder, sort_index);
    BackgroundCard.AddItemAccess(builder, item_accessOffset);
    BackgroundCard.AddQualityId(builder, quality_id);
    BackgroundCard.AddId(builder, id);
    BackgroundCard.AddShowInBag(builder, show_in_bag);
    return BackgroundCard.EndBackgroundCard(builder);
  }

  public static void StartBackgroundCard(FlatBufferBuilder builder) { builder.StartTable(18); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddQualityId(FlatBufferBuilder builder, int qualityId) { builder.AddInt(1, qualityId, 1); }
  public static void AddItemAccess(FlatBufferBuilder builder, VectorOffset itemAccessOffset) { builder.AddOffset(2, itemAccessOffset.Value, 0); }
  public static VectorOffset CreateItemAccessVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemAccessVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateItemAccessVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateItemAccessVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartItemAccessVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSortIndex(FlatBufferBuilder builder, int sortIndex) { builder.AddInt(3, sortIndex, 0); }
  public static void AddLongCardPath(FlatBufferBuilder builder, StringOffset longCardPathOffset) { builder.AddOffset(4, longCardPathOffset.Value, 0); }
  public static void AddCardPath(FlatBufferBuilder builder, StringOffset cardPathOffset) { builder.AddOffset(5, cardPathOffset.Value, 0); }
  public static void AddFunctionViewCardPath(FlatBufferBuilder builder, StringOffset functionViewCardPathOffset) { builder.AddOffset(6, functionViewCardPathOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(7, iconOffset.Value, 0); }
  public static void AddIconMiddle(FlatBufferBuilder builder, StringOffset iconMiddleOffset) { builder.AddOffset(8, iconMiddleOffset.Value, 0); }
  public static void AddIconSmall(FlatBufferBuilder builder, StringOffset iconSmallOffset) { builder.AddOffset(9, iconSmallOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(10, titleOffset.Value, 0); }
  public static void AddAttributesDescription(FlatBufferBuilder builder, StringOffset attributesDescriptionOffset) { builder.AddOffset(11, attributesDescriptionOffset.Value, 0); }
  public static void AddObtainedShowDescription(FlatBufferBuilder builder, StringOffset obtainedShowDescriptionOffset) { builder.AddOffset(12, obtainedShowDescriptionOffset.Value, 0); }
  public static void AddTypeDescription(FlatBufferBuilder builder, StringOffset typeDescriptionOffset) { builder.AddOffset(13, typeDescriptionOffset.Value, 0); }
  public static void AddBgDescription(FlatBufferBuilder builder, StringOffset bgDescriptionOffset) { builder.AddOffset(14, bgDescriptionOffset.Value, 0); }
  public static void AddTips(FlatBufferBuilder builder, StringOffset tipsOffset) { builder.AddOffset(15, tipsOffset.Value, 0); }
  public static void AddShowInBag(FlatBufferBuilder builder, bool showInBag) { builder.AddBool(16, showInBag, false); }
  public static void AddRedDotDisableRule(FlatBufferBuilder builder, int redDotDisableRule) { builder.AddInt(17, redDotDisableRule, 0); }
  public static Offset<WWParser.Defs.BackgroundCard> EndBackgroundCard(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BackgroundCard>(o);
  }
  public BackgroundCardT UnPack() {
    var _o = new BackgroundCardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BackgroundCardT _o) {
    _o.Id = this.Id;
    _o.QualityId = this.QualityId;
    _o.ItemAccess = new List<int>();
    for (var _j = 0; _j < this.ItemAccessLength; ++_j) {_o.ItemAccess.Add(this.ItemAccess(_j));}
    _o.SortIndex = this.SortIndex;
    _o.LongCardPath = this.LongCardPath;
    _o.CardPath = this.CardPath;
    _o.FunctionViewCardPath = this.FunctionViewCardPath;
    _o.Icon = this.Icon;
    _o.IconMiddle = this.IconMiddle;
    _o.IconSmall = this.IconSmall;
    _o.Title = this.Title;
    _o.AttributesDescription = this.AttributesDescription;
    _o.ObtainedShowDescription = this.ObtainedShowDescription;
    _o.TypeDescription = this.TypeDescription;
    _o.BgDescription = this.BgDescription;
    _o.Tips = this.Tips;
    _o.ShowInBag = this.ShowInBag;
    _o.RedDotDisableRule = this.RedDotDisableRule;
  }
  public static Offset<WWParser.Defs.BackgroundCard> Pack(FlatBufferBuilder builder, BackgroundCardT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BackgroundCard>);
    var _item_access = default(VectorOffset);
    if (_o.ItemAccess != null) {
      var __item_access = _o.ItemAccess.ToArray();
      _item_access = CreateItemAccessVector(builder, __item_access);
    }
    var _long_card_path = _o.LongCardPath == null ? default(StringOffset) : builder.CreateString(_o.LongCardPath);
    var _card_path = _o.CardPath == null ? default(StringOffset) : builder.CreateString(_o.CardPath);
    var _function_view_card_path = _o.FunctionViewCardPath == null ? default(StringOffset) : builder.CreateString(_o.FunctionViewCardPath);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _icon_middle = _o.IconMiddle == null ? default(StringOffset) : builder.CreateString(_o.IconMiddle);
    var _icon_small = _o.IconSmall == null ? default(StringOffset) : builder.CreateString(_o.IconSmall);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _attributes_description = _o.AttributesDescription == null ? default(StringOffset) : builder.CreateString(_o.AttributesDescription);
    var _obtained_show_description = _o.ObtainedShowDescription == null ? default(StringOffset) : builder.CreateString(_o.ObtainedShowDescription);
    var _type_description = _o.TypeDescription == null ? default(StringOffset) : builder.CreateString(_o.TypeDescription);
    var _bg_description = _o.BgDescription == null ? default(StringOffset) : builder.CreateString(_o.BgDescription);
    var _tips = _o.Tips == null ? default(StringOffset) : builder.CreateString(_o.Tips);
    return CreateBackgroundCard(
      builder,
      _o.Id,
      _o.QualityId,
      _item_access,
      _o.SortIndex,
      _long_card_path,
      _card_path,
      _function_view_card_path,
      _icon,
      _icon_middle,
      _icon_small,
      _title,
      _attributes_description,
      _obtained_show_description,
      _type_description,
      _bg_description,
      _tips,
      _o.ShowInBag,
      _o.RedDotDisableRule);
  }
}

public class BackgroundCardT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("quality_id")]
  public int QualityId { get; set; }
  [Newtonsoft.Json.JsonProperty("item_access")]
  public List<int> ItemAccess { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_index")]
  public int SortIndex { get; set; }
  [Newtonsoft.Json.JsonProperty("long_card_path")]
  public string LongCardPath { get; set; }
  [Newtonsoft.Json.JsonProperty("card_path")]
  public string CardPath { get; set; }
  [Newtonsoft.Json.JsonProperty("function_view_card_path")]
  public string FunctionViewCardPath { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_middle")]
  public string IconMiddle { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_small")]
  public string IconSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("attributes_description")]
  public string AttributesDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("obtained_show_description")]
  public string ObtainedShowDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("type_description")]
  public string TypeDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_description")]
  public string BgDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("tips")]
  public string Tips { get; set; }
  [Newtonsoft.Json.JsonProperty("show_in_bag")]
  public bool ShowInBag { get; set; }
  [Newtonsoft.Json.JsonProperty("red_dot_disable_rule")]
  public int RedDotDisableRule { get; set; }

  public BackgroundCardT() {
    this.Id = 0;
    this.QualityId = 1;
    this.ItemAccess = null;
    this.SortIndex = 0;
    this.LongCardPath = null;
    this.CardPath = null;
    this.FunctionViewCardPath = null;
    this.Icon = null;
    this.IconMiddle = null;
    this.IconSmall = null;
    this.Title = null;
    this.AttributesDescription = null;
    this.ObtainedShowDescription = null;
    this.TypeDescription = null;
    this.BgDescription = null;
    this.Tips = null;
    this.ShowInBag = false;
    this.RedDotDisableRule = 0;
  }
}


static public class BackgroundCardVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*QualityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*ItemAccess*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 10 /*SortIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*LongCardPath*/, false)
      && verifier.VerifyString(tablePos, 14 /*CardPath*/, false)
      && verifier.VerifyString(tablePos, 16 /*FunctionViewCardPath*/, false)
      && verifier.VerifyString(tablePos, 18 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 20 /*IconMiddle*/, false)
      && verifier.VerifyString(tablePos, 22 /*IconSmall*/, false)
      && verifier.VerifyString(tablePos, 24 /*Title*/, false)
      && verifier.VerifyString(tablePos, 26 /*AttributesDescription*/, false)
      && verifier.VerifyString(tablePos, 28 /*ObtainedShowDescription*/, false)
      && verifier.VerifyString(tablePos, 30 /*TypeDescription*/, false)
      && verifier.VerifyString(tablePos, 32 /*BgDescription*/, false)
      && verifier.VerifyString(tablePos, 34 /*Tips*/, false)
      && verifier.VerifyField(tablePos, 36 /*ShowInBag*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 38 /*RedDotDisableRule*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
