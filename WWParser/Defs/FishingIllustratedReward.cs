// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FishingIllustratedReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FishingIllustratedReward GetRootAsFishingIllustratedReward(ByteBuffer _bb) { return GetRootAsFishingIllustratedReward(_bb, new FishingIllustratedReward()); }
  public static FishingIllustratedReward GetRootAsFishingIllustratedReward(ByteBuffer _bb, FishingIllustratedReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FishingIllustratedReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(6); }
  public int Type { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ConditionGroup { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AccessPath { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.FishingIllustratedReward> CreateFishingIllustratedReward(FlatBufferBuilder builder,
      int id = 0,
      StringOffset descOffset = default(StringOffset),
      int type = 0,
      int condition_group = 0,
      int drop_id = 0,
      int access_path = 0) {
    builder.StartTable(6);
    FishingIllustratedReward.AddAccessPath(builder, access_path);
    FishingIllustratedReward.AddDropId(builder, drop_id);
    FishingIllustratedReward.AddConditionGroup(builder, condition_group);
    FishingIllustratedReward.AddType(builder, type);
    FishingIllustratedReward.AddDesc(builder, descOffset);
    FishingIllustratedReward.AddId(builder, id);
    return FishingIllustratedReward.EndFishingIllustratedReward(builder);
  }

  public static void StartFishingIllustratedReward(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(1, descOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(2, type, 0); }
  public static void AddConditionGroup(FlatBufferBuilder builder, int conditionGroup) { builder.AddInt(3, conditionGroup, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(4, dropId, 0); }
  public static void AddAccessPath(FlatBufferBuilder builder, int accessPath) { builder.AddInt(5, accessPath, 0); }
  public static Offset<WWParser.Defs.FishingIllustratedReward> EndFishingIllustratedReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FishingIllustratedReward>(o);
  }
  public FishingIllustratedRewardT UnPack() {
    var _o = new FishingIllustratedRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FishingIllustratedRewardT _o) {
    _o.Id = this.Id;
    _o.Desc = this.Desc;
    _o.Type = this.Type;
    _o.ConditionGroup = this.ConditionGroup;
    _o.DropId = this.DropId;
    _o.AccessPath = this.AccessPath;
  }
  public static Offset<WWParser.Defs.FishingIllustratedReward> Pack(FlatBufferBuilder builder, FishingIllustratedRewardT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FishingIllustratedReward>);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    return CreateFishingIllustratedReward(
      builder,
      _o.Id,
      _desc,
      _o.Type,
      _o.ConditionGroup,
      _o.DropId,
      _o.AccessPath);
  }
}

public class FishingIllustratedRewardT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("condition_group")]
  public int ConditionGroup { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }
  [Newtonsoft.Json.JsonProperty("access_path")]
  public int AccessPath { get; set; }

  public FishingIllustratedRewardT() {
    this.Id = 0;
    this.Desc = null;
    this.Type = 0;
    this.ConditionGroup = 0;
    this.DropId = 0;
    this.AccessPath = 0;
  }
}


static public class FishingIllustratedRewardVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 8 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*ConditionGroup*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*AccessPath*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
