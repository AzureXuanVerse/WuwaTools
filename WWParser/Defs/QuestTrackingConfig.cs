// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct QuestTrackingConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static QuestTrackingConfig GetRootAsQuestTrackingConfig(ByteBuffer _bb) { return GetRootAsQuestTrackingConfig(_bb, new QuestTrackingConfig()); }
  public static QuestTrackingConfig GetRootAsQuestTrackingConfig(ByteBuffer _bb, QuestTrackingConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public QuestTrackingConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PreQuestIds(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PreQuestIdsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetPreQuestIdsBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetPreQuestIdsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetPreQuestIdsArray() { return __p.__vector_as_array<int>(6); }
  public int TrackQuestId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(10); }
  public int Priority { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.QuestTrackingConfig> CreateQuestTrackingConfig(FlatBufferBuilder builder,
      int id = 0,
      VectorOffset pre_quest_idsOffset = default(VectorOffset),
      int track_quest_id = 0,
      StringOffset descOffset = default(StringOffset),
      int priority = 0) {
    builder.StartTable(5);
    QuestTrackingConfig.AddPriority(builder, priority);
    QuestTrackingConfig.AddDesc(builder, descOffset);
    QuestTrackingConfig.AddTrackQuestId(builder, track_quest_id);
    QuestTrackingConfig.AddPreQuestIds(builder, pre_quest_idsOffset);
    QuestTrackingConfig.AddId(builder, id);
    return QuestTrackingConfig.EndQuestTrackingConfig(builder);
  }

  public static void StartQuestTrackingConfig(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddPreQuestIds(FlatBufferBuilder builder, VectorOffset preQuestIdsOffset) { builder.AddOffset(1, preQuestIdsOffset.Value, 0); }
  public static VectorOffset CreatePreQuestIdsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePreQuestIdsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreQuestIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreQuestIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPreQuestIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTrackQuestId(FlatBufferBuilder builder, int trackQuestId) { builder.AddInt(2, trackQuestId, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(3, descOffset.Value, 0); }
  public static void AddPriority(FlatBufferBuilder builder, int priority) { builder.AddInt(4, priority, 0); }
  public static Offset<WWParser.Defs.QuestTrackingConfig> EndQuestTrackingConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.QuestTrackingConfig>(o);
  }
  public QuestTrackingConfigT UnPack() {
    var _o = new QuestTrackingConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(QuestTrackingConfigT _o) {
    _o.Id = this.Id;
    _o.PreQuestIds = new List<int>();
    for (var _j = 0; _j < this.PreQuestIdsLength; ++_j) {_o.PreQuestIds.Add(this.PreQuestIds(_j));}
    _o.TrackQuestId = this.TrackQuestId;
    _o.Desc = this.Desc;
    _o.Priority = this.Priority;
  }
  public static Offset<WWParser.Defs.QuestTrackingConfig> Pack(FlatBufferBuilder builder, QuestTrackingConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.QuestTrackingConfig>);
    var _pre_quest_ids = default(VectorOffset);
    if (_o.PreQuestIds != null) {
      var __pre_quest_ids = _o.PreQuestIds.ToArray();
      _pre_quest_ids = CreatePreQuestIdsVector(builder, __pre_quest_ids);
    }
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    return CreateQuestTrackingConfig(
      builder,
      _o.Id,
      _pre_quest_ids,
      _o.TrackQuestId,
      _desc,
      _o.Priority);
  }
}

public class QuestTrackingConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_quest_ids")]
  public List<int> PreQuestIds { get; set; }
  [Newtonsoft.Json.JsonProperty("track_quest_id")]
  public int TrackQuestId { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("priority")]
  public int Priority { get; set; }

  public QuestTrackingConfigT() {
    this.Id = 0;
    this.PreQuestIds = null;
    this.TrackQuestId = 0;
    this.Desc = null;
    this.Priority = 0;
  }
}


static public class QuestTrackingConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*PreQuestIds*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 8 /*TrackQuestId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 12 /*Priority*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
