// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GaChaShare : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GaChaShare GetRootAsGaChaShare(ByteBuffer _bb) { return GetRootAsGaChaShare(_bb, new GaChaShare()); }
  public static GaChaShare GetRootAsGaChaShare(ByteBuffer _bb, GaChaShare obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GaChaShare __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(8); }
  public string SharePic { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSharePicBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSharePicBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSharePicArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.GaChaShare> CreateGaChaShare(FlatBufferBuilder builder,
      int id = 0,
      int type = 0,
      StringOffset descOffset = default(StringOffset),
      StringOffset share_picOffset = default(StringOffset)) {
    builder.StartTable(4);
    GaChaShare.AddSharePic(builder, share_picOffset);
    GaChaShare.AddDesc(builder, descOffset);
    GaChaShare.AddType(builder, type);
    GaChaShare.AddId(builder, id);
    return GaChaShare.EndGaChaShare(builder);
  }

  public static void StartGaChaShare(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(1, type, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(2, descOffset.Value, 0); }
  public static void AddSharePic(FlatBufferBuilder builder, StringOffset sharePicOffset) { builder.AddOffset(3, sharePicOffset.Value, 0); }
  public static Offset<WWParser.Defs.GaChaShare> EndGaChaShare(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GaChaShare>(o);
  }
  public GaChaShareT UnPack() {
    var _o = new GaChaShareT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GaChaShareT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.Desc = this.Desc;
    _o.SharePic = this.SharePic;
  }
  public static Offset<WWParser.Defs.GaChaShare> Pack(FlatBufferBuilder builder, GaChaShareT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GaChaShare>);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _share_pic = _o.SharePic == null ? default(StringOffset) : builder.CreateString(_o.SharePic);
    return CreateGaChaShare(
      builder,
      _o.Id,
      _o.Type,
      _desc,
      _share_pic);
  }
}

public class GaChaShareT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("share_pic")]
  public string SharePic { get; set; }

  public GaChaShareT() {
    this.Id = 0;
    this.Type = 0;
    this.Desc = null;
    this.SharePic = null;
  }
}


static public class GaChaShareVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Desc*/, false)
      && verifier.VerifyString(tablePos, 10 /*SharePic*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
