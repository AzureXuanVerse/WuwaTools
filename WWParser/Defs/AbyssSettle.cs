// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AbyssSettle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AbyssSettle GetRootAsAbyssSettle(ByteBuffer _bb) { return GetRootAsAbyssSettle(_bb, new AbyssSettle()); }
  public static AbyssSettle GetRootAsAbyssSettle(ByteBuffer _bb, AbyssSettle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AbyssSettle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BattleScoreName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBattleScoreNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBattleScoreNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBattleScoreNameArray() { return __p.__vector_as_array<byte>(6); }
  public bool IsTotalRatio { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string BaseTitle { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBaseTitleBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetBaseTitleBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBaseTitleArray() { return __p.__vector_as_array<byte>(10); }
  public WWParser.Defs.DicIntString? Title(int j) { int o = __p.__offset(12); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TitleLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.AbyssSettle> CreateAbyssSettle(FlatBufferBuilder builder,
      int id = 0,
      StringOffset battle_score_nameOffset = default(StringOffset),
      bool is_total_ratio = false,
      StringOffset base_titleOffset = default(StringOffset),
      VectorOffset titleOffset = default(VectorOffset)) {
    builder.StartTable(5);
    AbyssSettle.AddTitle(builder, titleOffset);
    AbyssSettle.AddBaseTitle(builder, base_titleOffset);
    AbyssSettle.AddBattleScoreName(builder, battle_score_nameOffset);
    AbyssSettle.AddId(builder, id);
    AbyssSettle.AddIsTotalRatio(builder, is_total_ratio);
    return AbyssSettle.EndAbyssSettle(builder);
  }

  public static void StartAbyssSettle(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBattleScoreName(FlatBufferBuilder builder, StringOffset battleScoreNameOffset) { builder.AddOffset(1, battleScoreNameOffset.Value, 0); }
  public static void AddIsTotalRatio(FlatBufferBuilder builder, bool isTotalRatio) { builder.AddBool(2, isTotalRatio, false); }
  public static void AddBaseTitle(FlatBufferBuilder builder, StringOffset baseTitleOffset) { builder.AddOffset(3, baseTitleOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, VectorOffset titleOffset) { builder.AddOffset(4, titleOffset.Value, 0); }
  public static VectorOffset CreateTitleVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTitleVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTitleVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTitleVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTitleVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.AbyssSettle> EndAbyssSettle(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AbyssSettle>(o);
  }
  public AbyssSettleT UnPack() {
    var _o = new AbyssSettleT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AbyssSettleT _o) {
    _o.Id = this.Id;
    _o.BattleScoreName = this.BattleScoreName;
    _o.IsTotalRatio = this.IsTotalRatio;
    _o.BaseTitle = this.BaseTitle;
    _o.Title = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.TitleLength; ++_j) {_o.Title.Add(this.Title(_j).HasValue ? this.Title(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.AbyssSettle> Pack(FlatBufferBuilder builder, AbyssSettleT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AbyssSettle>);
    var _battle_score_name = _o.BattleScoreName == null ? default(StringOffset) : builder.CreateString(_o.BattleScoreName);
    var _base_title = _o.BaseTitle == null ? default(StringOffset) : builder.CreateString(_o.BaseTitle);
    var _title = default(VectorOffset);
    if (_o.Title != null) {
      var __title = new Offset<WWParser.Defs.DicIntString>[_o.Title.Count];
      for (var _j = 0; _j < __title.Length; ++_j) { __title[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.Title[_j]); }
      _title = CreateTitleVector(builder, __title);
    }
    return CreateAbyssSettle(
      builder,
      _o.Id,
      _battle_score_name,
      _o.IsTotalRatio,
      _base_title,
      _title);
  }
}

public class AbyssSettleT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("battle_score_name")]
  public string BattleScoreName { get; set; }
  [Newtonsoft.Json.JsonProperty("is_total_ratio")]
  public bool IsTotalRatio { get; set; }
  [Newtonsoft.Json.JsonProperty("base_title")]
  public string BaseTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public List<WWParser.Defs.DicIntStringT> Title { get; set; }

  public AbyssSettleT() {
    this.Id = 0;
    this.BattleScoreName = null;
    this.IsTotalRatio = false;
    this.BaseTitle = null;
    this.Title = null;
  }
}


static public class AbyssSettleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*BattleScoreName*/, false)
      && verifier.VerifyField(tablePos, 8 /*IsTotalRatio*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*BaseTitle*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 12 /*Title*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
