// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct VideoData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static VideoData GetRootAsVideoData(ByteBuffer _bb) { return GetRootAsVideoData(_bb, new VideoData()); }
  public static VideoData GetRootAsVideoData(ByteBuffer _bb, VideoData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public VideoData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int CgId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string CgName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCgNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetCgNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCgNameArray() { return __p.__vector_as_array<byte>(6); }
  public int GirlOrBoy { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)2; } }
  public string CgFile { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCgFileBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCgFileBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCgFileArray() { return __p.__vector_as_array<byte>(10); }
  public bool CanSkip { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float Aspect { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)2.38f; } }

  public static Offset<WWParser.Defs.VideoData> CreateVideoData(FlatBufferBuilder builder,
      int cg_id = 0,
      StringOffset cg_nameOffset = default(StringOffset),
      int girl_or_boy = 2,
      StringOffset cg_fileOffset = default(StringOffset),
      bool can_skip = false,
      float aspect = 2.38f) {
    builder.StartTable(6);
    VideoData.AddAspect(builder, aspect);
    VideoData.AddCgFile(builder, cg_fileOffset);
    VideoData.AddGirlOrBoy(builder, girl_or_boy);
    VideoData.AddCgName(builder, cg_nameOffset);
    VideoData.AddCgId(builder, cg_id);
    VideoData.AddCanSkip(builder, can_skip);
    return VideoData.EndVideoData(builder);
  }

  public static void StartVideoData(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddCgId(FlatBufferBuilder builder, int cgId) { builder.AddInt(0, cgId, 0); }
  public static void AddCgName(FlatBufferBuilder builder, StringOffset cgNameOffset) { builder.AddOffset(1, cgNameOffset.Value, 0); }
  public static void AddGirlOrBoy(FlatBufferBuilder builder, int girlOrBoy) { builder.AddInt(2, girlOrBoy, 2); }
  public static void AddCgFile(FlatBufferBuilder builder, StringOffset cgFileOffset) { builder.AddOffset(3, cgFileOffset.Value, 0); }
  public static void AddCanSkip(FlatBufferBuilder builder, bool canSkip) { builder.AddBool(4, canSkip, false); }
  public static void AddAspect(FlatBufferBuilder builder, float aspect) { builder.AddFloat(5, aspect, 2.38f); }
  public static Offset<WWParser.Defs.VideoData> EndVideoData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.VideoData>(o);
  }
  public VideoDataT UnPack() {
    var _o = new VideoDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(VideoDataT _o) {
    _o.CgId = this.CgId;
    _o.CgName = this.CgName;
    _o.GirlOrBoy = this.GirlOrBoy;
    _o.CgFile = this.CgFile;
    _o.CanSkip = this.CanSkip;
    _o.Aspect = this.Aspect;
  }
  public static Offset<WWParser.Defs.VideoData> Pack(FlatBufferBuilder builder, VideoDataT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.VideoData>);
    var _cg_name = _o.CgName == null ? default(StringOffset) : builder.CreateString(_o.CgName);
    var _cg_file = _o.CgFile == null ? default(StringOffset) : builder.CreateString(_o.CgFile);
    return CreateVideoData(
      builder,
      _o.CgId,
      _cg_name,
      _o.GirlOrBoy,
      _cg_file,
      _o.CanSkip,
      _o.Aspect);
  }
}

public class VideoDataT
{
  [Newtonsoft.Json.JsonProperty("cg_id")]
  public int CgId { get; set; }
  [Newtonsoft.Json.JsonProperty("cg_name")]
  public string CgName { get; set; }
  [Newtonsoft.Json.JsonProperty("girl_or_boy")]
  public int GirlOrBoy { get; set; }
  [Newtonsoft.Json.JsonProperty("cg_file")]
  public string CgFile { get; set; }
  [Newtonsoft.Json.JsonProperty("can_skip")]
  public bool CanSkip { get; set; }
  [Newtonsoft.Json.JsonProperty("aspect")]
  public float Aspect { get; set; }

  public VideoDataT() {
    this.CgId = 0;
    this.CgName = null;
    this.GirlOrBoy = 2;
    this.CgFile = null;
    this.CanSkip = false;
    this.Aspect = 2.38f;
  }
}


static public class VideoDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CgId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*CgName*/, false)
      && verifier.VerifyField(tablePos, 8 /*GirlOrBoy*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*CgFile*/, false)
      && verifier.VerifyField(tablePos, 12 /*CanSkip*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*Aspect*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
