// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleAnimAudio : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleAnimAudio GetRootAsRoleAnimAudio(ByteBuffer _bb) { return GetRootAsRoleAnimAudio(_bb, new RoleAnimAudio()); }
  public static RoleAnimAudio GetRootAsRoleAnimAudio(ByteBuffer _bb, RoleAnimAudio obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleAnimAudio __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string ActionName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActionNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetActionNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetActionNameArray() { return __p.__vector_as_array<byte>(8); }
  public string AudioPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAudioPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAudioPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAudioPathArray() { return __p.__vector_as_array<byte>(10); }
  public bool CanInterrupt { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.RoleAnimAudio> CreateRoleAnimAudio(FlatBufferBuilder builder,
      int id = 0,
      int role_id = 0,
      StringOffset action_nameOffset = default(StringOffset),
      StringOffset audio_pathOffset = default(StringOffset),
      bool can_interrupt = false) {
    builder.StartTable(5);
    RoleAnimAudio.AddAudioPath(builder, audio_pathOffset);
    RoleAnimAudio.AddActionName(builder, action_nameOffset);
    RoleAnimAudio.AddRoleId(builder, role_id);
    RoleAnimAudio.AddId(builder, id);
    RoleAnimAudio.AddCanInterrupt(builder, can_interrupt);
    return RoleAnimAudio.EndRoleAnimAudio(builder);
  }

  public static void StartRoleAnimAudio(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(1, roleId, 0); }
  public static void AddActionName(FlatBufferBuilder builder, StringOffset actionNameOffset) { builder.AddOffset(2, actionNameOffset.Value, 0); }
  public static void AddAudioPath(FlatBufferBuilder builder, StringOffset audioPathOffset) { builder.AddOffset(3, audioPathOffset.Value, 0); }
  public static void AddCanInterrupt(FlatBufferBuilder builder, bool canInterrupt) { builder.AddBool(4, canInterrupt, false); }
  public static Offset<WWParser.Defs.RoleAnimAudio> EndRoleAnimAudio(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleAnimAudio>(o);
  }
  public RoleAnimAudioT UnPack() {
    var _o = new RoleAnimAudioT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleAnimAudioT _o) {
    _o.Id = this.Id;
    _o.RoleId = this.RoleId;
    _o.ActionName = this.ActionName;
    _o.AudioPath = this.AudioPath;
    _o.CanInterrupt = this.CanInterrupt;
  }
  public static Offset<WWParser.Defs.RoleAnimAudio> Pack(FlatBufferBuilder builder, RoleAnimAudioT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleAnimAudio>);
    var _action_name = _o.ActionName == null ? default(StringOffset) : builder.CreateString(_o.ActionName);
    var _audio_path = _o.AudioPath == null ? default(StringOffset) : builder.CreateString(_o.AudioPath);
    return CreateRoleAnimAudio(
      builder,
      _o.Id,
      _o.RoleId,
      _action_name,
      _audio_path,
      _o.CanInterrupt);
  }
}

public class RoleAnimAudioT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("action_name")]
  public string ActionName { get; set; }
  [Newtonsoft.Json.JsonProperty("audio_path")]
  public string AudioPath { get; set; }
  [Newtonsoft.Json.JsonProperty("can_interrupt")]
  public bool CanInterrupt { get; set; }

  public RoleAnimAudioT() {
    this.Id = 0;
    this.RoleId = 0;
    this.ActionName = null;
    this.AudioPath = null;
    this.CanInterrupt = false;
  }
}


static public class RoleAnimAudioVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*ActionName*/, false)
      && verifier.VerifyString(tablePos, 10 /*AudioPath*/, false)
      && verifier.VerifyField(tablePos, 12 /*CanInterrupt*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
