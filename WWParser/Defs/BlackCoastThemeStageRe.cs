// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BlackCoastThemeStageRe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BlackCoastThemeStageRe GetRootAsBlackCoastThemeStageRe(ByteBuffer _bb) { return GetRootAsBlackCoastThemeStageRe(_bb, new BlackCoastThemeStageRe()); }
  public static BlackCoastThemeStageRe GetRootAsBlackCoastThemeStageRe(ByteBuffer _bb, BlackCoastThemeStageRe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BlackCoastThemeStageRe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(8); }
  public string TitleDetail { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleDetailBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTitleDetailBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTitleDetailArray() { return __p.__vector_as_array<byte>(10); }
  public int OpenConditionId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QuestionId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string VideoSource { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoSourceBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetVideoSourceBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetVideoSourceArray() { return __p.__vector_as_array<byte>(16); }
  public string TextureSmall { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextureSmallBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetTextureSmallBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetTextureSmallArray() { return __p.__vector_as_array<byte>(18); }
  public string TextureNormal { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextureNormalBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetTextureNormalBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetTextureNormalArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<WWParser.Defs.BlackCoastThemeStageRe> CreateBlackCoastThemeStageRe(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset title_detailOffset = default(StringOffset),
      int open_condition_id = 0,
      int question_id = 0,
      StringOffset video_sourceOffset = default(StringOffset),
      StringOffset texture_smallOffset = default(StringOffset),
      StringOffset texture_normalOffset = default(StringOffset)) {
    builder.StartTable(9);
    BlackCoastThemeStageRe.AddTextureNormal(builder, texture_normalOffset);
    BlackCoastThemeStageRe.AddTextureSmall(builder, texture_smallOffset);
    BlackCoastThemeStageRe.AddVideoSource(builder, video_sourceOffset);
    BlackCoastThemeStageRe.AddQuestionId(builder, question_id);
    BlackCoastThemeStageRe.AddOpenConditionId(builder, open_condition_id);
    BlackCoastThemeStageRe.AddTitleDetail(builder, title_detailOffset);
    BlackCoastThemeStageRe.AddTitle(builder, titleOffset);
    BlackCoastThemeStageRe.AddActivityId(builder, activity_id);
    BlackCoastThemeStageRe.AddId(builder, id);
    return BlackCoastThemeStageRe.EndBlackCoastThemeStageRe(builder);
  }

  public static void StartBlackCoastThemeStageRe(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(2, titleOffset.Value, 0); }
  public static void AddTitleDetail(FlatBufferBuilder builder, StringOffset titleDetailOffset) { builder.AddOffset(3, titleDetailOffset.Value, 0); }
  public static void AddOpenConditionId(FlatBufferBuilder builder, int openConditionId) { builder.AddInt(4, openConditionId, 0); }
  public static void AddQuestionId(FlatBufferBuilder builder, int questionId) { builder.AddInt(5, questionId, 0); }
  public static void AddVideoSource(FlatBufferBuilder builder, StringOffset videoSourceOffset) { builder.AddOffset(6, videoSourceOffset.Value, 0); }
  public static void AddTextureSmall(FlatBufferBuilder builder, StringOffset textureSmallOffset) { builder.AddOffset(7, textureSmallOffset.Value, 0); }
  public static void AddTextureNormal(FlatBufferBuilder builder, StringOffset textureNormalOffset) { builder.AddOffset(8, textureNormalOffset.Value, 0); }
  public static Offset<WWParser.Defs.BlackCoastThemeStageRe> EndBlackCoastThemeStageRe(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BlackCoastThemeStageRe>(o);
  }
  public BlackCoastThemeStageReT UnPack() {
    var _o = new BlackCoastThemeStageReT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BlackCoastThemeStageReT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.Title = this.Title;
    _o.TitleDetail = this.TitleDetail;
    _o.OpenConditionId = this.OpenConditionId;
    _o.QuestionId = this.QuestionId;
    _o.VideoSource = this.VideoSource;
    _o.TextureSmall = this.TextureSmall;
    _o.TextureNormal = this.TextureNormal;
  }
  public static Offset<WWParser.Defs.BlackCoastThemeStageRe> Pack(FlatBufferBuilder builder, BlackCoastThemeStageReT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BlackCoastThemeStageRe>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _title_detail = _o.TitleDetail == null ? default(StringOffset) : builder.CreateString(_o.TitleDetail);
    var _video_source = _o.VideoSource == null ? default(StringOffset) : builder.CreateString(_o.VideoSource);
    var _texture_small = _o.TextureSmall == null ? default(StringOffset) : builder.CreateString(_o.TextureSmall);
    var _texture_normal = _o.TextureNormal == null ? default(StringOffset) : builder.CreateString(_o.TextureNormal);
    return CreateBlackCoastThemeStageRe(
      builder,
      _o.Id,
      _o.ActivityId,
      _title,
      _title_detail,
      _o.OpenConditionId,
      _o.QuestionId,
      _video_source,
      _texture_small,
      _texture_normal);
  }
}

public class BlackCoastThemeStageReT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("title_detail")]
  public string TitleDetail { get; set; }
  [Newtonsoft.Json.JsonProperty("open_condition_id")]
  public int OpenConditionId { get; set; }
  [Newtonsoft.Json.JsonProperty("question_id")]
  public int QuestionId { get; set; }
  [Newtonsoft.Json.JsonProperty("video_source")]
  public string VideoSource { get; set; }
  [Newtonsoft.Json.JsonProperty("texture_small")]
  public string TextureSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("texture_normal")]
  public string TextureNormal { get; set; }

  public BlackCoastThemeStageReT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.Title = null;
    this.TitleDetail = null;
    this.OpenConditionId = 0;
    this.QuestionId = 0;
    this.VideoSource = null;
    this.TextureSmall = null;
    this.TextureNormal = null;
  }
}


static public class BlackCoastThemeStageReVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Title*/, false)
      && verifier.VerifyString(tablePos, 10 /*TitleDetail*/, false)
      && verifier.VerifyField(tablePos, 12 /*OpenConditionId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*QuestionId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 16 /*VideoSource*/, false)
      && verifier.VerifyString(tablePos, 18 /*TextureSmall*/, false)
      && verifier.VerifyString(tablePos, 20 /*TextureNormal*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
