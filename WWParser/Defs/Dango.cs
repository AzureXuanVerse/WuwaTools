// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Dango : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Dango GetRootAsDango(ByteBuffer _bb) { return GetRootAsDango(_bb, new Dango()); }
  public static Dango GetRootAsDango(ByteBuffer _bb, Dango obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Dango __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TemplateId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ModelId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(10); }
  public int DiceId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(16); }
  public string IconDamage { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconDamageBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIconDamageBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIconDamageArray() { return __p.__vector_as_array<byte>(18); }
  public string IconAttack { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconAttackBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetIconAttackBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetIconAttackArray() { return __p.__vector_as_array<byte>(20); }
  public string IconSmall { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSmallBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetIconSmallBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetIconSmallArray() { return __p.__vector_as_array<byte>(22); }
  public string IconDamageSmall { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconDamageSmallBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetIconDamageSmallBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetIconDamageSmallArray() { return __p.__vector_as_array<byte>(24); }
  public string IconAttackSmall { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconAttackSmallBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetIconAttackSmallBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetIconAttackSmallArray() { return __p.__vector_as_array<byte>(26); }
  public string IconLarge { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconLargeBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetIconLargeBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetIconLargeArray() { return __p.__vector_as_array<byte>(28); }
  public string IconDamageLarge { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconDamageLargeBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetIconDamageLargeBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetIconDamageLargeArray() { return __p.__vector_as_array<byte>(30); }
  public string IconAttackLarge { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconAttackLargeBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetIconAttackLargeBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetIconAttackLargeArray() { return __p.__vector_as_array<byte>(32); }
  public string Dialog { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDialogBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetDialogBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetDialogArray() { return __p.__vector_as_array<byte>(34); }
  public string CheerAudio { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCheerAudioBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetCheerAudioBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetCheerAudioArray() { return __p.__vector_as_array<byte>(36); }
  public string DeathAudio { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeathAudioBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetDeathAudioBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetDeathAudioArray() { return __p.__vector_as_array<byte>(38); }
  public string Audio { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAudioBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetAudioBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetAudioArray() { return __p.__vector_as_array<byte>(40); }
  public int ModelHeight { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)70; } }

  public static Offset<WWParser.Defs.Dango> CreateDango(FlatBufferBuilder builder,
      int id = 0,
      int template_id = 0,
      int model_id = 0,
      StringOffset nameOffset = default(StringOffset),
      int dice_id = 0,
      int skill_id = 0,
      StringOffset iconOffset = default(StringOffset),
      StringOffset icon_damageOffset = default(StringOffset),
      StringOffset icon_attackOffset = default(StringOffset),
      StringOffset icon_smallOffset = default(StringOffset),
      StringOffset icon_damage_smallOffset = default(StringOffset),
      StringOffset icon_attack_smallOffset = default(StringOffset),
      StringOffset icon_largeOffset = default(StringOffset),
      StringOffset icon_damage_largeOffset = default(StringOffset),
      StringOffset icon_attack_largeOffset = default(StringOffset),
      StringOffset dialogOffset = default(StringOffset),
      StringOffset cheer_audioOffset = default(StringOffset),
      StringOffset death_audioOffset = default(StringOffset),
      StringOffset audioOffset = default(StringOffset),
      int model_height = 70) {
    builder.StartTable(20);
    Dango.AddModelHeight(builder, model_height);
    Dango.AddAudio(builder, audioOffset);
    Dango.AddDeathAudio(builder, death_audioOffset);
    Dango.AddCheerAudio(builder, cheer_audioOffset);
    Dango.AddDialog(builder, dialogOffset);
    Dango.AddIconAttackLarge(builder, icon_attack_largeOffset);
    Dango.AddIconDamageLarge(builder, icon_damage_largeOffset);
    Dango.AddIconLarge(builder, icon_largeOffset);
    Dango.AddIconAttackSmall(builder, icon_attack_smallOffset);
    Dango.AddIconDamageSmall(builder, icon_damage_smallOffset);
    Dango.AddIconSmall(builder, icon_smallOffset);
    Dango.AddIconAttack(builder, icon_attackOffset);
    Dango.AddIconDamage(builder, icon_damageOffset);
    Dango.AddIcon(builder, iconOffset);
    Dango.AddSkillId(builder, skill_id);
    Dango.AddDiceId(builder, dice_id);
    Dango.AddName(builder, nameOffset);
    Dango.AddModelId(builder, model_id);
    Dango.AddTemplateId(builder, template_id);
    Dango.AddId(builder, id);
    return Dango.EndDango(builder);
  }

  public static void StartDango(FlatBufferBuilder builder) { builder.StartTable(20); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTemplateId(FlatBufferBuilder builder, int templateId) { builder.AddInt(1, templateId, 0); }
  public static void AddModelId(FlatBufferBuilder builder, int modelId) { builder.AddInt(2, modelId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(3, nameOffset.Value, 0); }
  public static void AddDiceId(FlatBufferBuilder builder, int diceId) { builder.AddInt(4, diceId, 0); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(5, skillId, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(6, iconOffset.Value, 0); }
  public static void AddIconDamage(FlatBufferBuilder builder, StringOffset iconDamageOffset) { builder.AddOffset(7, iconDamageOffset.Value, 0); }
  public static void AddIconAttack(FlatBufferBuilder builder, StringOffset iconAttackOffset) { builder.AddOffset(8, iconAttackOffset.Value, 0); }
  public static void AddIconSmall(FlatBufferBuilder builder, StringOffset iconSmallOffset) { builder.AddOffset(9, iconSmallOffset.Value, 0); }
  public static void AddIconDamageSmall(FlatBufferBuilder builder, StringOffset iconDamageSmallOffset) { builder.AddOffset(10, iconDamageSmallOffset.Value, 0); }
  public static void AddIconAttackSmall(FlatBufferBuilder builder, StringOffset iconAttackSmallOffset) { builder.AddOffset(11, iconAttackSmallOffset.Value, 0); }
  public static void AddIconLarge(FlatBufferBuilder builder, StringOffset iconLargeOffset) { builder.AddOffset(12, iconLargeOffset.Value, 0); }
  public static void AddIconDamageLarge(FlatBufferBuilder builder, StringOffset iconDamageLargeOffset) { builder.AddOffset(13, iconDamageLargeOffset.Value, 0); }
  public static void AddIconAttackLarge(FlatBufferBuilder builder, StringOffset iconAttackLargeOffset) { builder.AddOffset(14, iconAttackLargeOffset.Value, 0); }
  public static void AddDialog(FlatBufferBuilder builder, StringOffset dialogOffset) { builder.AddOffset(15, dialogOffset.Value, 0); }
  public static void AddCheerAudio(FlatBufferBuilder builder, StringOffset cheerAudioOffset) { builder.AddOffset(16, cheerAudioOffset.Value, 0); }
  public static void AddDeathAudio(FlatBufferBuilder builder, StringOffset deathAudioOffset) { builder.AddOffset(17, deathAudioOffset.Value, 0); }
  public static void AddAudio(FlatBufferBuilder builder, StringOffset audioOffset) { builder.AddOffset(18, audioOffset.Value, 0); }
  public static void AddModelHeight(FlatBufferBuilder builder, int modelHeight) { builder.AddInt(19, modelHeight, 70); }
  public static Offset<WWParser.Defs.Dango> EndDango(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Dango>(o);
  }
  public DangoT UnPack() {
    var _o = new DangoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DangoT _o) {
    _o.Id = this.Id;
    _o.TemplateId = this.TemplateId;
    _o.ModelId = this.ModelId;
    _o.Name = this.Name;
    _o.DiceId = this.DiceId;
    _o.SkillId = this.SkillId;
    _o.Icon = this.Icon;
    _o.IconDamage = this.IconDamage;
    _o.IconAttack = this.IconAttack;
    _o.IconSmall = this.IconSmall;
    _o.IconDamageSmall = this.IconDamageSmall;
    _o.IconAttackSmall = this.IconAttackSmall;
    _o.IconLarge = this.IconLarge;
    _o.IconDamageLarge = this.IconDamageLarge;
    _o.IconAttackLarge = this.IconAttackLarge;
    _o.Dialog = this.Dialog;
    _o.CheerAudio = this.CheerAudio;
    _o.DeathAudio = this.DeathAudio;
    _o.Audio = this.Audio;
    _o.ModelHeight = this.ModelHeight;
  }
  public static Offset<WWParser.Defs.Dango> Pack(FlatBufferBuilder builder, DangoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Dango>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _icon_damage = _o.IconDamage == null ? default(StringOffset) : builder.CreateString(_o.IconDamage);
    var _icon_attack = _o.IconAttack == null ? default(StringOffset) : builder.CreateString(_o.IconAttack);
    var _icon_small = _o.IconSmall == null ? default(StringOffset) : builder.CreateString(_o.IconSmall);
    var _icon_damage_small = _o.IconDamageSmall == null ? default(StringOffset) : builder.CreateString(_o.IconDamageSmall);
    var _icon_attack_small = _o.IconAttackSmall == null ? default(StringOffset) : builder.CreateString(_o.IconAttackSmall);
    var _icon_large = _o.IconLarge == null ? default(StringOffset) : builder.CreateString(_o.IconLarge);
    var _icon_damage_large = _o.IconDamageLarge == null ? default(StringOffset) : builder.CreateString(_o.IconDamageLarge);
    var _icon_attack_large = _o.IconAttackLarge == null ? default(StringOffset) : builder.CreateString(_o.IconAttackLarge);
    var _dialog = _o.Dialog == null ? default(StringOffset) : builder.CreateString(_o.Dialog);
    var _cheer_audio = _o.CheerAudio == null ? default(StringOffset) : builder.CreateString(_o.CheerAudio);
    var _death_audio = _o.DeathAudio == null ? default(StringOffset) : builder.CreateString(_o.DeathAudio);
    var _audio = _o.Audio == null ? default(StringOffset) : builder.CreateString(_o.Audio);
    return CreateDango(
      builder,
      _o.Id,
      _o.TemplateId,
      _o.ModelId,
      _name,
      _o.DiceId,
      _o.SkillId,
      _icon,
      _icon_damage,
      _icon_attack,
      _icon_small,
      _icon_damage_small,
      _icon_attack_small,
      _icon_large,
      _icon_damage_large,
      _icon_attack_large,
      _dialog,
      _cheer_audio,
      _death_audio,
      _audio,
      _o.ModelHeight);
  }
}

public class DangoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("template_id")]
  public int TemplateId { get; set; }
  [Newtonsoft.Json.JsonProperty("model_id")]
  public int ModelId { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("dice_id")]
  public int DiceId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id")]
  public int SkillId { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_damage")]
  public string IconDamage { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_attack")]
  public string IconAttack { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_small")]
  public string IconSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_damage_small")]
  public string IconDamageSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_attack_small")]
  public string IconAttackSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_large")]
  public string IconLarge { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_damage_large")]
  public string IconDamageLarge { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_attack_large")]
  public string IconAttackLarge { get; set; }
  [Newtonsoft.Json.JsonProperty("dialog")]
  public string Dialog { get; set; }
  [Newtonsoft.Json.JsonProperty("cheer_audio")]
  public string CheerAudio { get; set; }
  [Newtonsoft.Json.JsonProperty("death_audio")]
  public string DeathAudio { get; set; }
  [Newtonsoft.Json.JsonProperty("audio")]
  public string Audio { get; set; }
  [Newtonsoft.Json.JsonProperty("model_height")]
  public int ModelHeight { get; set; }

  public DangoT() {
    this.Id = 0;
    this.TemplateId = 0;
    this.ModelId = 0;
    this.Name = null;
    this.DiceId = 0;
    this.SkillId = 0;
    this.Icon = null;
    this.IconDamage = null;
    this.IconAttack = null;
    this.IconSmall = null;
    this.IconDamageSmall = null;
    this.IconAttackSmall = null;
    this.IconLarge = null;
    this.IconDamageLarge = null;
    this.IconAttackLarge = null;
    this.Dialog = null;
    this.CheerAudio = null;
    this.DeathAudio = null;
    this.Audio = null;
    this.ModelHeight = 70;
  }
}


static public class DangoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*TemplateId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ModelId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Name*/, false)
      && verifier.VerifyField(tablePos, 12 /*DiceId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*SkillId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 16 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 18 /*IconDamage*/, false)
      && verifier.VerifyString(tablePos, 20 /*IconAttack*/, false)
      && verifier.VerifyString(tablePos, 22 /*IconSmall*/, false)
      && verifier.VerifyString(tablePos, 24 /*IconDamageSmall*/, false)
      && verifier.VerifyString(tablePos, 26 /*IconAttackSmall*/, false)
      && verifier.VerifyString(tablePos, 28 /*IconLarge*/, false)
      && verifier.VerifyString(tablePos, 30 /*IconDamageLarge*/, false)
      && verifier.VerifyString(tablePos, 32 /*IconAttackLarge*/, false)
      && verifier.VerifyString(tablePos, 34 /*Dialog*/, false)
      && verifier.VerifyString(tablePos, 36 /*CheerAudio*/, false)
      && verifier.VerifyString(tablePos, 38 /*DeathAudio*/, false)
      && verifier.VerifyString(tablePos, 40 /*Audio*/, false)
      && verifier.VerifyField(tablePos, 42 /*ModelHeight*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
