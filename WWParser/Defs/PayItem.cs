// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PayItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PayItem GetRootAsPayItem(ByteBuffer _bb) { return GetRootAsPayItem(_bb, new PayItem()); }
  public static PayItem GetRootAsPayItem(ByteBuffer _bb, PayItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PayItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PayId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsDisplay { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string StageImage { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStageImageBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetStageImageBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetStageImageArray() { return __p.__vector_as_array<byte>(14); }
  public int BonusItemCount { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SpecialBonusItemCount { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.PayItem> CreatePayItem(FlatBufferBuilder builder,
      int id = 0,
      int item_id = 0,
      int item_count = 0,
      int pay_id = 0,
      bool is_display = false,
      StringOffset stage_imageOffset = default(StringOffset),
      int bonus_item_count = 0,
      int special_bonus_item_count = 0) {
    builder.StartTable(8);
    PayItem.AddSpecialBonusItemCount(builder, special_bonus_item_count);
    PayItem.AddBonusItemCount(builder, bonus_item_count);
    PayItem.AddStageImage(builder, stage_imageOffset);
    PayItem.AddPayId(builder, pay_id);
    PayItem.AddItemCount(builder, item_count);
    PayItem.AddItemId(builder, item_id);
    PayItem.AddId(builder, id);
    PayItem.AddIsDisplay(builder, is_display);
    return PayItem.EndPayItem(builder);
  }

  public static void StartPayItem(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(1, itemId, 0); }
  public static void AddItemCount(FlatBufferBuilder builder, int itemCount) { builder.AddInt(2, itemCount, 0); }
  public static void AddPayId(FlatBufferBuilder builder, int payId) { builder.AddInt(3, payId, 0); }
  public static void AddIsDisplay(FlatBufferBuilder builder, bool isDisplay) { builder.AddBool(4, isDisplay, false); }
  public static void AddStageImage(FlatBufferBuilder builder, StringOffset stageImageOffset) { builder.AddOffset(5, stageImageOffset.Value, 0); }
  public static void AddBonusItemCount(FlatBufferBuilder builder, int bonusItemCount) { builder.AddInt(6, bonusItemCount, 0); }
  public static void AddSpecialBonusItemCount(FlatBufferBuilder builder, int specialBonusItemCount) { builder.AddInt(7, specialBonusItemCount, 0); }
  public static Offset<WWParser.Defs.PayItem> EndPayItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PayItem>(o);
  }
  public PayItemT UnPack() {
    var _o = new PayItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PayItemT _o) {
    _o.Id = this.Id;
    _o.ItemId = this.ItemId;
    _o.ItemCount = this.ItemCount;
    _o.PayId = this.PayId;
    _o.IsDisplay = this.IsDisplay;
    _o.StageImage = this.StageImage;
    _o.BonusItemCount = this.BonusItemCount;
    _o.SpecialBonusItemCount = this.SpecialBonusItemCount;
  }
  public static Offset<WWParser.Defs.PayItem> Pack(FlatBufferBuilder builder, PayItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PayItem>);
    var _stage_image = _o.StageImage == null ? default(StringOffset) : builder.CreateString(_o.StageImage);
    return CreatePayItem(
      builder,
      _o.Id,
      _o.ItemId,
      _o.ItemCount,
      _o.PayId,
      _o.IsDisplay,
      _stage_image,
      _o.BonusItemCount,
      _o.SpecialBonusItemCount);
  }
}

public class PayItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("item_count")]
  public int ItemCount { get; set; }
  [Newtonsoft.Json.JsonProperty("pay_id")]
  public int PayId { get; set; }
  [Newtonsoft.Json.JsonProperty("is_display")]
  public bool IsDisplay { get; set; }
  [Newtonsoft.Json.JsonProperty("stage_image")]
  public string StageImage { get; set; }
  [Newtonsoft.Json.JsonProperty("bonus_item_count")]
  public int BonusItemCount { get; set; }
  [Newtonsoft.Json.JsonProperty("special_bonus_item_count")]
  public int SpecialBonusItemCount { get; set; }

  public PayItemT() {
    this.Id = 0;
    this.ItemId = 0;
    this.ItemCount = 0;
    this.PayId = 0;
    this.IsDisplay = false;
    this.StageImage = null;
    this.BonusItemCount = 0;
    this.SpecialBonusItemCount = 0;
  }
}


static public class PayItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*PayId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*IsDisplay*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 14 /*StageImage*/, false)
      && verifier.VerifyField(tablePos, 16 /*BonusItemCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*SpecialBonusItemCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
