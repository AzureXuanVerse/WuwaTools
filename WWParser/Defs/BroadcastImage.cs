// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BroadcastImage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BroadcastImage GetRootAsBroadcastImage(ByteBuffer _bb) { return GetRootAsBroadcastImage(_bb, new BroadcastImage()); }
  public static BroadcastImage GetRootAsBroadcastImage(ByteBuffer _bb, BroadcastImage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BroadcastImage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(6); }
  public string Image { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetImageBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetImageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetImageArray() { return __p.__vector_as_array<byte>(8); }
  public string UmgIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUmgIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetUmgIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetUmgIconArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.BroadcastImage> CreateBroadcastImage(FlatBufferBuilder builder,
      int id = 0,
      StringOffset iconOffset = default(StringOffset),
      StringOffset imageOffset = default(StringOffset),
      StringOffset umg_iconOffset = default(StringOffset)) {
    builder.StartTable(4);
    BroadcastImage.AddUmgIcon(builder, umg_iconOffset);
    BroadcastImage.AddImage(builder, imageOffset);
    BroadcastImage.AddIcon(builder, iconOffset);
    BroadcastImage.AddId(builder, id);
    return BroadcastImage.EndBroadcastImage(builder);
  }

  public static void StartBroadcastImage(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(1, iconOffset.Value, 0); }
  public static void AddImage(FlatBufferBuilder builder, StringOffset imageOffset) { builder.AddOffset(2, imageOffset.Value, 0); }
  public static void AddUmgIcon(FlatBufferBuilder builder, StringOffset umgIconOffset) { builder.AddOffset(3, umgIconOffset.Value, 0); }
  public static Offset<WWParser.Defs.BroadcastImage> EndBroadcastImage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BroadcastImage>(o);
  }
  public BroadcastImageT UnPack() {
    var _o = new BroadcastImageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BroadcastImageT _o) {
    _o.Id = this.Id;
    _o.Icon = this.Icon;
    _o.Image = this.Image;
    _o.UmgIcon = this.UmgIcon;
  }
  public static Offset<WWParser.Defs.BroadcastImage> Pack(FlatBufferBuilder builder, BroadcastImageT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BroadcastImage>);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _image = _o.Image == null ? default(StringOffset) : builder.CreateString(_o.Image);
    var _umg_icon = _o.UmgIcon == null ? default(StringOffset) : builder.CreateString(_o.UmgIcon);
    return CreateBroadcastImage(
      builder,
      _o.Id,
      _icon,
      _image,
      _umg_icon);
  }
}

public class BroadcastImageT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("image")]
  public string Image { get; set; }
  [Newtonsoft.Json.JsonProperty("umg_icon")]
  public string UmgIcon { get; set; }

  public BroadcastImageT() {
    this.Id = 0;
    this.Icon = null;
    this.Image = null;
    this.UmgIcon = null;
  }
}


static public class BroadcastImageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 8 /*Image*/, false)
      && verifier.VerifyString(tablePos, 10 /*UmgIcon*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
