// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ItemMainType : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ItemMainType GetRootAsItemMainType(ByteBuffer _bb) { return GetRootAsItemMainType(_bb, new ItemMainType()); }
  public static ItemMainType GetRootAsItemMainType(ByteBuffer _bb, ItemMainType obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ItemMainType __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool BShowInInventoryView { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public string Icon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(10); }
  public string IconFirstAchieve { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconFirstAchieveBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetIconFirstAchieveBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetIconFirstAchieveArray() { return __p.__vector_as_array<byte>(12); }
  public int PackageId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool BShowDescompose { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int SequenceId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int UseWayId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DestroyUseWayId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool BFilterSortVisible { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.ItemMainType> CreateItemMainType(FlatBufferBuilder builder,
      int id = 0,
      bool b_show_in_inventory_view = false,
      StringOffset nameOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      StringOffset icon_first_achieveOffset = default(StringOffset),
      int package_id = 0,
      bool b_show_descompose = false,
      int sequence_id = 0,
      int use_way_id = 0,
      int destroy_use_way_id = 0,
      bool b_filter_sort_visible = false) {
    builder.StartTable(11);
    ItemMainType.AddDestroyUseWayId(builder, destroy_use_way_id);
    ItemMainType.AddUseWayId(builder, use_way_id);
    ItemMainType.AddSequenceId(builder, sequence_id);
    ItemMainType.AddPackageId(builder, package_id);
    ItemMainType.AddIconFirstAchieve(builder, icon_first_achieveOffset);
    ItemMainType.AddIcon(builder, iconOffset);
    ItemMainType.AddName(builder, nameOffset);
    ItemMainType.AddId(builder, id);
    ItemMainType.AddBFilterSortVisible(builder, b_filter_sort_visible);
    ItemMainType.AddBShowDescompose(builder, b_show_descompose);
    ItemMainType.AddBShowInInventoryView(builder, b_show_in_inventory_view);
    return ItemMainType.EndItemMainType(builder);
  }

  public static void StartItemMainType(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBShowInInventoryView(FlatBufferBuilder builder, bool bShowInInventoryView) { builder.AddBool(1, bShowInInventoryView, false); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(3, iconOffset.Value, 0); }
  public static void AddIconFirstAchieve(FlatBufferBuilder builder, StringOffset iconFirstAchieveOffset) { builder.AddOffset(4, iconFirstAchieveOffset.Value, 0); }
  public static void AddPackageId(FlatBufferBuilder builder, int packageId) { builder.AddInt(5, packageId, 0); }
  public static void AddBShowDescompose(FlatBufferBuilder builder, bool bShowDescompose) { builder.AddBool(6, bShowDescompose, false); }
  public static void AddSequenceId(FlatBufferBuilder builder, int sequenceId) { builder.AddInt(7, sequenceId, 0); }
  public static void AddUseWayId(FlatBufferBuilder builder, int useWayId) { builder.AddInt(8, useWayId, 0); }
  public static void AddDestroyUseWayId(FlatBufferBuilder builder, int destroyUseWayId) { builder.AddInt(9, destroyUseWayId, 0); }
  public static void AddBFilterSortVisible(FlatBufferBuilder builder, bool bFilterSortVisible) { builder.AddBool(10, bFilterSortVisible, false); }
  public static Offset<WWParser.Defs.ItemMainType> EndItemMainType(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ItemMainType>(o);
  }
  public ItemMainTypeT UnPack() {
    var _o = new ItemMainTypeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ItemMainTypeT _o) {
    _o.Id = this.Id;
    _o.BShowInInventoryView = this.BShowInInventoryView;
    _o.Name = this.Name;
    _o.Icon = this.Icon;
    _o.IconFirstAchieve = this.IconFirstAchieve;
    _o.PackageId = this.PackageId;
    _o.BShowDescompose = this.BShowDescompose;
    _o.SequenceId = this.SequenceId;
    _o.UseWayId = this.UseWayId;
    _o.DestroyUseWayId = this.DestroyUseWayId;
    _o.BFilterSortVisible = this.BFilterSortVisible;
  }
  public static Offset<WWParser.Defs.ItemMainType> Pack(FlatBufferBuilder builder, ItemMainTypeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ItemMainType>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _icon_first_achieve = _o.IconFirstAchieve == null ? default(StringOffset) : builder.CreateString(_o.IconFirstAchieve);
    return CreateItemMainType(
      builder,
      _o.Id,
      _o.BShowInInventoryView,
      _name,
      _icon,
      _icon_first_achieve,
      _o.PackageId,
      _o.BShowDescompose,
      _o.SequenceId,
      _o.UseWayId,
      _o.DestroyUseWayId,
      _o.BFilterSortVisible);
  }
}

public class ItemMainTypeT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("b_show_in_inventory_view")]
  public bool BShowInInventoryView { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_first_achieve")]
  public string IconFirstAchieve { get; set; }
  [Newtonsoft.Json.JsonProperty("package_id")]
  public int PackageId { get; set; }
  [Newtonsoft.Json.JsonProperty("b_show_descompose")]
  public bool BShowDescompose { get; set; }
  [Newtonsoft.Json.JsonProperty("sequence_id")]
  public int SequenceId { get; set; }
  [Newtonsoft.Json.JsonProperty("use_way_id")]
  public int UseWayId { get; set; }
  [Newtonsoft.Json.JsonProperty("destroy_use_way_id")]
  public int DestroyUseWayId { get; set; }
  [Newtonsoft.Json.JsonProperty("b_filter_sort_visible")]
  public bool BFilterSortVisible { get; set; }

  public ItemMainTypeT() {
    this.Id = 0;
    this.BShowInInventoryView = false;
    this.Name = null;
    this.Icon = null;
    this.IconFirstAchieve = null;
    this.PackageId = 0;
    this.BShowDescompose = false;
    this.SequenceId = 0;
    this.UseWayId = 0;
    this.DestroyUseWayId = 0;
    this.BFilterSortVisible = false;
  }
}


static public class ItemMainTypeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*BShowInInventoryView*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyString(tablePos, 10 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 12 /*IconFirstAchieve*/, false)
      && verifier.VerifyField(tablePos, 14 /*PackageId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*BShowDescompose*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*SequenceId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*UseWayId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*DestroyUseWayId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*BFilterSortVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
