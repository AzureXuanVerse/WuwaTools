// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Audio : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Audio GetRootAsAudio(ByteBuffer _bb) { return GetRootAsAudio(_bb, new Audio()); }
  public static Audio GetRootAsAudio(ByteBuffer _bb, Audio obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Audio __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Path { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPathBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPathBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPathArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.Audio> CreateAudio(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset pathOffset = default(StringOffset)) {
    builder.StartTable(2);
    Audio.AddPath(builder, pathOffset);
    Audio.AddId(builder, idOffset);
    return Audio.EndAudio(builder);
  }

  public static void StartAudio(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddPath(FlatBufferBuilder builder, StringOffset pathOffset) { builder.AddOffset(1, pathOffset.Value, 0); }
  public static Offset<WWParser.Defs.Audio> EndAudio(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Audio>(o);
  }
  public AudioT UnPack() {
    var _o = new AudioT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AudioT _o) {
    _o.Id = this.Id;
    _o.Path = this.Path;
  }
  public static Offset<WWParser.Defs.Audio> Pack(FlatBufferBuilder builder, AudioT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Audio>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _path = _o.Path == null ? default(StringOffset) : builder.CreateString(_o.Path);
    return CreateAudio(
      builder,
      _id,
      _path);
  }
}

public class AudioT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public string Id { get; set; }
  [Newtonsoft.Json.JsonProperty("path")]
  public string Path { get; set; }

  public AudioT() {
    this.Id = null;
    this.Path = null;
  }
}


static public class AudioVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Path*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
