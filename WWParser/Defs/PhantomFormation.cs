// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhantomFormation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhantomFormation GetRootAsPhantomFormation(ByteBuffer _bb) { return GetRootAsPhantomFormation(_bb, new PhantomFormation()); }
  public static PhantomFormation GetRootAsPhantomFormation(ByteBuffer _bb, PhantomFormation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhantomFormation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Roles(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RolesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRolesBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetRolesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetRolesArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<WWParser.Defs.PhantomFormation> CreatePhantomFormation(FlatBufferBuilder builder,
      int id = 0,
      VectorOffset rolesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    PhantomFormation.AddRoles(builder, rolesOffset);
    PhantomFormation.AddId(builder, id);
    return PhantomFormation.EndPhantomFormation(builder);
  }

  public static void StartPhantomFormation(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoles(FlatBufferBuilder builder, VectorOffset rolesOffset) { builder.AddOffset(1, rolesOffset.Value, 0); }
  public static VectorOffset CreateRolesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRolesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRolesVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRolesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRolesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.PhantomFormation> EndPhantomFormation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhantomFormation>(o);
  }
  public PhantomFormationT UnPack() {
    var _o = new PhantomFormationT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhantomFormationT _o) {
    _o.Id = this.Id;
    _o.Roles = new List<int>();
    for (var _j = 0; _j < this.RolesLength; ++_j) {_o.Roles.Add(this.Roles(_j));}
  }
  public static Offset<WWParser.Defs.PhantomFormation> Pack(FlatBufferBuilder builder, PhantomFormationT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhantomFormation>);
    var _roles = default(VectorOffset);
    if (_o.Roles != null) {
      var __roles = _o.Roles.ToArray();
      _roles = CreateRolesVector(builder, __roles);
    }
    return CreatePhantomFormation(
      builder,
      _o.Id,
      _roles);
  }
}

public class PhantomFormationT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("roles")]
  public List<int> Roles { get; set; }

  public PhantomFormationT() {
    this.Id = 0;
    this.Roles = null;
  }
}


static public class PhantomFormationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*Roles*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
