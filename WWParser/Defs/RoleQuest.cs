// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleQuest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleQuest GetRootAsRoleQuest(ByteBuffer _bb) { return GetRootAsRoleQuest(_bb, new RoleQuest()); }
  public static RoleQuest GetRootAsRoleQuest(ByteBuffer _bb, RoleQuest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleQuest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Region { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRegionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetRegionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetRegionArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsShow { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int QuestId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string QuestName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetQuestNameBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetQuestNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetQuestNameArray() { return __p.__vector_as_array<byte>(14); }
  public string Chapter { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChapterBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetChapterBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetChapterArray() { return __p.__vector_as_array<byte>(16); }
  public int Consume { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }

  public static Offset<WWParser.Defs.RoleQuest> CreateRoleQuest(FlatBufferBuilder builder,
      int id = 0,
      int role_id = 0,
      StringOffset regionOffset = default(StringOffset),
      bool is_show = false,
      int quest_id = 0,
      StringOffset quest_nameOffset = default(StringOffset),
      StringOffset chapterOffset = default(StringOffset),
      int consume = 1) {
    builder.StartTable(8);
    RoleQuest.AddConsume(builder, consume);
    RoleQuest.AddChapter(builder, chapterOffset);
    RoleQuest.AddQuestName(builder, quest_nameOffset);
    RoleQuest.AddQuestId(builder, quest_id);
    RoleQuest.AddRegion(builder, regionOffset);
    RoleQuest.AddRoleId(builder, role_id);
    RoleQuest.AddId(builder, id);
    RoleQuest.AddIsShow(builder, is_show);
    return RoleQuest.EndRoleQuest(builder);
  }

  public static void StartRoleQuest(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(1, roleId, 0); }
  public static void AddRegion(FlatBufferBuilder builder, StringOffset regionOffset) { builder.AddOffset(2, regionOffset.Value, 0); }
  public static void AddIsShow(FlatBufferBuilder builder, bool isShow) { builder.AddBool(3, isShow, false); }
  public static void AddQuestId(FlatBufferBuilder builder, int questId) { builder.AddInt(4, questId, 0); }
  public static void AddQuestName(FlatBufferBuilder builder, StringOffset questNameOffset) { builder.AddOffset(5, questNameOffset.Value, 0); }
  public static void AddChapter(FlatBufferBuilder builder, StringOffset chapterOffset) { builder.AddOffset(6, chapterOffset.Value, 0); }
  public static void AddConsume(FlatBufferBuilder builder, int consume) { builder.AddInt(7, consume, 1); }
  public static Offset<WWParser.Defs.RoleQuest> EndRoleQuest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleQuest>(o);
  }
  public RoleQuestT UnPack() {
    var _o = new RoleQuestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleQuestT _o) {
    _o.Id = this.Id;
    _o.RoleId = this.RoleId;
    _o.Region = this.Region;
    _o.IsShow = this.IsShow;
    _o.QuestId = this.QuestId;
    _o.QuestName = this.QuestName;
    _o.Chapter = this.Chapter;
    _o.Consume = this.Consume;
  }
  public static Offset<WWParser.Defs.RoleQuest> Pack(FlatBufferBuilder builder, RoleQuestT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleQuest>);
    var _region = _o.Region == null ? default(StringOffset) : builder.CreateString(_o.Region);
    var _quest_name = _o.QuestName == null ? default(StringOffset) : builder.CreateString(_o.QuestName);
    var _chapter = _o.Chapter == null ? default(StringOffset) : builder.CreateString(_o.Chapter);
    return CreateRoleQuest(
      builder,
      _o.Id,
      _o.RoleId,
      _region,
      _o.IsShow,
      _o.QuestId,
      _quest_name,
      _chapter,
      _o.Consume);
  }
}

public class RoleQuestT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("region")]
  public string Region { get; set; }
  [Newtonsoft.Json.JsonProperty("is_show")]
  public bool IsShow { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_id")]
  public int QuestId { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_name")]
  public string QuestName { get; set; }
  [Newtonsoft.Json.JsonProperty("chapter")]
  public string Chapter { get; set; }
  [Newtonsoft.Json.JsonProperty("consume")]
  public int Consume { get; set; }

  public RoleQuestT() {
    this.Id = 0;
    this.RoleId = 0;
    this.Region = null;
    this.IsShow = false;
    this.QuestId = 0;
    this.QuestName = null;
    this.Chapter = null;
    this.Consume = 1;
  }
}


static public class RoleQuestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Region*/, false)
      && verifier.VerifyField(tablePos, 10 /*IsShow*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*QuestId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*QuestName*/, false)
      && verifier.VerifyString(tablePos, 16 /*Chapter*/, false)
      && verifier.VerifyField(tablePos, 18 /*Consume*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
