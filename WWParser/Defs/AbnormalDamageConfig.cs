// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AbnormalDamageConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AbnormalDamageConfig GetRootAsAbnormalDamageConfig(ByteBuffer _bb) { return GetRootAsAbnormalDamageConfig(_bb, new AbnormalDamageConfig()); }
  public static AbnormalDamageConfig GetRootAsAbnormalDamageConfig(ByteBuffer _bb, AbnormalDamageConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AbnormalDamageConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Level { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1001 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1002 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1003 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1004 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1005 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Abnormal1006 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.AbnormalDamageConfig> CreateAbnormalDamageConfig(FlatBufferBuilder builder,
      int level = 0,
      int abnormal1001 = 0,
      int abnormal1002 = 0,
      int abnormal1003 = 0,
      int abnormal1004 = 0,
      int abnormal1005 = 0,
      int abnormal1006 = 0) {
    builder.StartTable(7);
    AbnormalDamageConfig.AddAbnormal1006(builder, abnormal1006);
    AbnormalDamageConfig.AddAbnormal1005(builder, abnormal1005);
    AbnormalDamageConfig.AddAbnormal1004(builder, abnormal1004);
    AbnormalDamageConfig.AddAbnormal1003(builder, abnormal1003);
    AbnormalDamageConfig.AddAbnormal1002(builder, abnormal1002);
    AbnormalDamageConfig.AddAbnormal1001(builder, abnormal1001);
    AbnormalDamageConfig.AddLevel(builder, level);
    return AbnormalDamageConfig.EndAbnormalDamageConfig(builder);
  }

  public static void StartAbnormalDamageConfig(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(0, level, 0); }
  public static void AddAbnormal1001(FlatBufferBuilder builder, int abnormal1001) { builder.AddInt(1, abnormal1001, 0); }
  public static void AddAbnormal1002(FlatBufferBuilder builder, int abnormal1002) { builder.AddInt(2, abnormal1002, 0); }
  public static void AddAbnormal1003(FlatBufferBuilder builder, int abnormal1003) { builder.AddInt(3, abnormal1003, 0); }
  public static void AddAbnormal1004(FlatBufferBuilder builder, int abnormal1004) { builder.AddInt(4, abnormal1004, 0); }
  public static void AddAbnormal1005(FlatBufferBuilder builder, int abnormal1005) { builder.AddInt(5, abnormal1005, 0); }
  public static void AddAbnormal1006(FlatBufferBuilder builder, int abnormal1006) { builder.AddInt(6, abnormal1006, 0); }
  public static Offset<WWParser.Defs.AbnormalDamageConfig> EndAbnormalDamageConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AbnormalDamageConfig>(o);
  }
  public AbnormalDamageConfigT UnPack() {
    var _o = new AbnormalDamageConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AbnormalDamageConfigT _o) {
    _o.Level = this.Level;
    _o.Abnormal1001 = this.Abnormal1001;
    _o.Abnormal1002 = this.Abnormal1002;
    _o.Abnormal1003 = this.Abnormal1003;
    _o.Abnormal1004 = this.Abnormal1004;
    _o.Abnormal1005 = this.Abnormal1005;
    _o.Abnormal1006 = this.Abnormal1006;
  }
  public static Offset<WWParser.Defs.AbnormalDamageConfig> Pack(FlatBufferBuilder builder, AbnormalDamageConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AbnormalDamageConfig>);
    return CreateAbnormalDamageConfig(
      builder,
      _o.Level,
      _o.Abnormal1001,
      _o.Abnormal1002,
      _o.Abnormal1003,
      _o.Abnormal1004,
      _o.Abnormal1005,
      _o.Abnormal1006);
  }
}

public class AbnormalDamageConfigT
{
  [Newtonsoft.Json.JsonProperty("level")]
  public int Level { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1001")]
  public int Abnormal1001 { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1002")]
  public int Abnormal1002 { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1003")]
  public int Abnormal1003 { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1004")]
  public int Abnormal1004 { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1005")]
  public int Abnormal1005 { get; set; }
  [Newtonsoft.Json.JsonProperty("abnormal1006")]
  public int Abnormal1006 { get; set; }

  public AbnormalDamageConfigT() {
    this.Level = 0;
    this.Abnormal1001 = 0;
    this.Abnormal1002 = 0;
    this.Abnormal1003 = 0;
    this.Abnormal1004 = 0;
    this.Abnormal1005 = 0;
    this.Abnormal1006 = 0;
  }
}


static public class AbnormalDamageConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Abnormal1001*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Abnormal1002*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Abnormal1003*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Abnormal1004*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*Abnormal1005*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Abnormal1006*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
