// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TypeInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TypeInfo GetRootAsTypeInfo(ByteBuffer _bb) { return GetRootAsTypeInfo(_bb, new TypeInfo()); }
  public static TypeInfo GetRootAsTypeInfo(ByteBuffer _bb, TypeInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TypeInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string TypeDescription { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeDescriptionBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTypeDescriptionBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTypeDescriptionArray() { return __p.__vector_as_array<byte>(6); }
  public bool Lock { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Deprecate { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int SortIndex { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemInfoDisplayType { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TypeInfo> CreateTypeInfo(FlatBufferBuilder builder,
      int id = 0,
      StringOffset type_descriptionOffset = default(StringOffset),
      bool @lock = false,
      bool deprecate = false,
      int sort_index = 0,
      int item_info_display_type = 0) {
    builder.StartTable(6);
    TypeInfo.AddItemInfoDisplayType(builder, item_info_display_type);
    TypeInfo.AddSortIndex(builder, sort_index);
    TypeInfo.AddTypeDescription(builder, type_descriptionOffset);
    TypeInfo.AddId(builder, id);
    TypeInfo.AddDeprecate(builder, deprecate);
    TypeInfo.AddLock(builder, @lock);
    return TypeInfo.EndTypeInfo(builder);
  }

  public static void StartTypeInfo(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTypeDescription(FlatBufferBuilder builder, StringOffset typeDescriptionOffset) { builder.AddOffset(1, typeDescriptionOffset.Value, 0); }
  public static void AddLock(FlatBufferBuilder builder, bool @lock) { builder.AddBool(2, @lock, false); }
  public static void AddDeprecate(FlatBufferBuilder builder, bool deprecate) { builder.AddBool(3, deprecate, false); }
  public static void AddSortIndex(FlatBufferBuilder builder, int sortIndex) { builder.AddInt(4, sortIndex, 0); }
  public static void AddItemInfoDisplayType(FlatBufferBuilder builder, int itemInfoDisplayType) { builder.AddInt(5, itemInfoDisplayType, 0); }
  public static Offset<WWParser.Defs.TypeInfo> EndTypeInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TypeInfo>(o);
  }
  public TypeInfoT UnPack() {
    var _o = new TypeInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TypeInfoT _o) {
    _o.Id = this.Id;
    _o.TypeDescription = this.TypeDescription;
    _o.Lock = this.Lock;
    _o.Deprecate = this.Deprecate;
    _o.SortIndex = this.SortIndex;
    _o.ItemInfoDisplayType = this.ItemInfoDisplayType;
  }
  public static Offset<WWParser.Defs.TypeInfo> Pack(FlatBufferBuilder builder, TypeInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TypeInfo>);
    var _type_description = _o.TypeDescription == null ? default(StringOffset) : builder.CreateString(_o.TypeDescription);
    return CreateTypeInfo(
      builder,
      _o.Id,
      _type_description,
      _o.Lock,
      _o.Deprecate,
      _o.SortIndex,
      _o.ItemInfoDisplayType);
  }
}

public class TypeInfoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type_description")]
  public string TypeDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("lock")]
  public bool Lock { get; set; }
  [Newtonsoft.Json.JsonProperty("deprecate")]
  public bool Deprecate { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_index")]
  public int SortIndex { get; set; }
  [Newtonsoft.Json.JsonProperty("item_info_display_type")]
  public int ItemInfoDisplayType { get; set; }

  public TypeInfoT() {
    this.Id = 0;
    this.TypeDescription = null;
    this.Lock = false;
    this.Deprecate = false;
    this.SortIndex = 0;
    this.ItemInfoDisplayType = 0;
  }
}


static public class TypeInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*TypeDescription*/, false)
      && verifier.VerifyField(tablePos, 8 /*Lock*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*Deprecate*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*SortIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ItemInfoDisplayType*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
