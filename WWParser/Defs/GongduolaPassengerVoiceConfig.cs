// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GongduolaPassengerVoiceConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GongduolaPassengerVoiceConfig GetRootAsGongduolaPassengerVoiceConfig(ByteBuffer _bb) { return GetRootAsGongduolaPassengerVoiceConfig(_bb, new GongduolaPassengerVoiceConfig()); }
  public static GongduolaPassengerVoiceConfig GetRootAsGongduolaPassengerVoiceConfig(ByteBuffer _bb, GongduolaPassengerVoiceConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GongduolaPassengerVoiceConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TriggerType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Priority { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string PlotFlow(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int PlotFlowLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Voice { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVoiceBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetVoiceBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetVoiceArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.GongduolaPassengerVoiceConfig> CreateGongduolaPassengerVoiceConfig(FlatBufferBuilder builder,
      int id = 0,
      int role_id = 0,
      int trigger_type = 0,
      int priority = 0,
      VectorOffset plot_flowOffset = default(VectorOffset),
      StringOffset voiceOffset = default(StringOffset)) {
    builder.StartTable(6);
    GongduolaPassengerVoiceConfig.AddVoice(builder, voiceOffset);
    GongduolaPassengerVoiceConfig.AddPlotFlow(builder, plot_flowOffset);
    GongduolaPassengerVoiceConfig.AddPriority(builder, priority);
    GongduolaPassengerVoiceConfig.AddTriggerType(builder, trigger_type);
    GongduolaPassengerVoiceConfig.AddRoleId(builder, role_id);
    GongduolaPassengerVoiceConfig.AddId(builder, id);
    return GongduolaPassengerVoiceConfig.EndGongduolaPassengerVoiceConfig(builder);
  }

  public static void StartGongduolaPassengerVoiceConfig(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(1, roleId, 0); }
  public static void AddTriggerType(FlatBufferBuilder builder, int triggerType) { builder.AddInt(2, triggerType, 0); }
  public static void AddPriority(FlatBufferBuilder builder, int priority) { builder.AddInt(3, priority, 0); }
  public static void AddPlotFlow(FlatBufferBuilder builder, VectorOffset plotFlowOffset) { builder.AddOffset(4, plotFlowOffset.Value, 0); }
  public static VectorOffset CreatePlotFlowVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlotFlowVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlotFlowVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlotFlowVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlotFlowVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVoice(FlatBufferBuilder builder, StringOffset voiceOffset) { builder.AddOffset(5, voiceOffset.Value, 0); }
  public static Offset<WWParser.Defs.GongduolaPassengerVoiceConfig> EndGongduolaPassengerVoiceConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GongduolaPassengerVoiceConfig>(o);
  }
  public GongduolaPassengerVoiceConfigT UnPack() {
    var _o = new GongduolaPassengerVoiceConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GongduolaPassengerVoiceConfigT _o) {
    _o.Id = this.Id;
    _o.RoleId = this.RoleId;
    _o.TriggerType = this.TriggerType;
    _o.Priority = this.Priority;
    _o.PlotFlow = new List<string>();
    for (var _j = 0; _j < this.PlotFlowLength; ++_j) {_o.PlotFlow.Add(this.PlotFlow(_j));}
    _o.Voice = this.Voice;
  }
  public static Offset<WWParser.Defs.GongduolaPassengerVoiceConfig> Pack(FlatBufferBuilder builder, GongduolaPassengerVoiceConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GongduolaPassengerVoiceConfig>);
    var _plot_flow = default(VectorOffset);
    if (_o.PlotFlow != null) {
      var __plot_flow = new StringOffset[_o.PlotFlow.Count];
      for (var _j = 0; _j < __plot_flow.Length; ++_j) { __plot_flow[_j] = builder.CreateString(_o.PlotFlow[_j]); }
      _plot_flow = CreatePlotFlowVector(builder, __plot_flow);
    }
    var _voice = _o.Voice == null ? default(StringOffset) : builder.CreateString(_o.Voice);
    return CreateGongduolaPassengerVoiceConfig(
      builder,
      _o.Id,
      _o.RoleId,
      _o.TriggerType,
      _o.Priority,
      _plot_flow,
      _voice);
  }
}

public class GongduolaPassengerVoiceConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("trigger_type")]
  public int TriggerType { get; set; }
  [Newtonsoft.Json.JsonProperty("priority")]
  public int Priority { get; set; }
  [Newtonsoft.Json.JsonProperty("plot_flow")]
  public List<string> PlotFlow { get; set; }
  [Newtonsoft.Json.JsonProperty("voice")]
  public string Voice { get; set; }

  public GongduolaPassengerVoiceConfigT() {
    this.Id = 0;
    this.RoleId = 0;
    this.TriggerType = 0;
    this.Priority = 0;
    this.PlotFlow = null;
    this.Voice = null;
  }
}


static public class GongduolaPassengerVoiceConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*TriggerType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Priority*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfStrings(tablePos, 12 /*PlotFlow*/, false)
      && verifier.VerifyString(tablePos, 14 /*Voice*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
