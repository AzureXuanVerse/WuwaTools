// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueRandomGood : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueRandomGood GetRootAsRogueRandomGood(ByteBuffer _bb) { return GetRootAsRogueRandomGood(_bb, new RogueRandomGood()); }
  public static RogueRandomGood GetRootAsRogueRandomGood(ByteBuffer _bb, RogueRandomGood obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueRandomGood __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public WWParser.Defs.DicStringInt? GoodsPoolWeight(int j) { int o = __p.__offset(4); return o != 0 ? (WWParser.Defs.DicStringInt?)(new WWParser.Defs.DicStringInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GoodsPoolWeightLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int Discount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RogueRandomGood> CreateRogueRandomGood(FlatBufferBuilder builder,
      VectorOffset goods_pool_weightOffset = default(VectorOffset),
      int discount = 0) {
    builder.StartTable(2);
    RogueRandomGood.AddDiscount(builder, discount);
    RogueRandomGood.AddGoodsPoolWeight(builder, goods_pool_weightOffset);
    return RogueRandomGood.EndRogueRandomGood(builder);
  }

  public static void StartRogueRandomGood(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddGoodsPoolWeight(FlatBufferBuilder builder, VectorOffset goodsPoolWeightOffset) { builder.AddOffset(0, goodsPoolWeightOffset.Value, 0); }
  public static VectorOffset CreateGoodsPoolWeightVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGoodsPoolWeightVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateGoodsPoolWeightVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateGoodsPoolWeightVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartGoodsPoolWeightVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDiscount(FlatBufferBuilder builder, int discount) { builder.AddInt(1, discount, 0); }
  public static Offset<WWParser.Defs.RogueRandomGood> EndRogueRandomGood(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueRandomGood>(o);
  }
  public RogueRandomGoodT UnPack() {
    var _o = new RogueRandomGoodT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueRandomGoodT _o) {
    _o.GoodsPoolWeight = new List<WWParser.Defs.DicStringIntT>();
    for (var _j = 0; _j < this.GoodsPoolWeightLength; ++_j) {_o.GoodsPoolWeight.Add(this.GoodsPoolWeight(_j).HasValue ? this.GoodsPoolWeight(_j).Value.UnPack() : null);}
    _o.Discount = this.Discount;
  }
  public static Offset<WWParser.Defs.RogueRandomGood> Pack(FlatBufferBuilder builder, RogueRandomGoodT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueRandomGood>);
    var _goods_pool_weight = default(VectorOffset);
    if (_o.GoodsPoolWeight != null) {
      var __goods_pool_weight = new Offset<WWParser.Defs.DicStringInt>[_o.GoodsPoolWeight.Count];
      for (var _j = 0; _j < __goods_pool_weight.Length; ++_j) { __goods_pool_weight[_j] = WWParser.Defs.DicStringInt.Pack(builder, _o.GoodsPoolWeight[_j]); }
      _goods_pool_weight = CreateGoodsPoolWeightVector(builder, __goods_pool_weight);
    }
    return CreateRogueRandomGood(
      builder,
      _goods_pool_weight,
      _o.Discount);
  }
}

public class RogueRandomGoodT
{
  [Newtonsoft.Json.JsonProperty("goods_pool_weight")]
  public List<WWParser.Defs.DicStringIntT> GoodsPoolWeight { get; set; }
  [Newtonsoft.Json.JsonProperty("discount")]
  public int Discount { get; set; }

  public RogueRandomGoodT() {
    this.GoodsPoolWeight = null;
    this.Discount = 0;
  }
}


static public class RogueRandomGoodVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*GoodsPoolWeight*/, WWParser.Defs.DicStringIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 6 /*Discount*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
