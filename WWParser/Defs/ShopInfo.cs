// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ShopInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ShopInfo GetRootAsShopInfo(ByteBuffer _bb) { return GetRootAsShopInfo(_bb, new ShopInfo()); }
  public static ShopInfo GetRootAsShopInfo(ByteBuffer _bb, ShopInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ShopInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShopType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string ShopName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetShopNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetShopNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetShopNameArray() { return __p.__vector_as_array<byte>(8); }
  public int OpenId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowCurrency(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ShowCurrencyLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetShowCurrencyBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetShowCurrencyBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetShowCurrencyArray() { return __p.__vector_as_array<int>(12); }
  public string DialogueText { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDialogueTextBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetDialogueTextBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDialogueTextArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.ShopInfo> CreateShopInfo(FlatBufferBuilder builder,
      int id = 0,
      int shop_type = 0,
      StringOffset shop_nameOffset = default(StringOffset),
      int open_id = 0,
      VectorOffset show_currencyOffset = default(VectorOffset),
      StringOffset dialogue_textOffset = default(StringOffset)) {
    builder.StartTable(6);
    ShopInfo.AddDialogueText(builder, dialogue_textOffset);
    ShopInfo.AddShowCurrency(builder, show_currencyOffset);
    ShopInfo.AddOpenId(builder, open_id);
    ShopInfo.AddShopName(builder, shop_nameOffset);
    ShopInfo.AddShopType(builder, shop_type);
    ShopInfo.AddId(builder, id);
    return ShopInfo.EndShopInfo(builder);
  }

  public static void StartShopInfo(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddShopType(FlatBufferBuilder builder, int shopType) { builder.AddInt(1, shopType, 0); }
  public static void AddShopName(FlatBufferBuilder builder, StringOffset shopNameOffset) { builder.AddOffset(2, shopNameOffset.Value, 0); }
  public static void AddOpenId(FlatBufferBuilder builder, int openId) { builder.AddInt(3, openId, 0); }
  public static void AddShowCurrency(FlatBufferBuilder builder, VectorOffset showCurrencyOffset) { builder.AddOffset(4, showCurrencyOffset.Value, 0); }
  public static VectorOffset CreateShowCurrencyVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShowCurrencyVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowCurrencyVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowCurrencyVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartShowCurrencyVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDialogueText(FlatBufferBuilder builder, StringOffset dialogueTextOffset) { builder.AddOffset(5, dialogueTextOffset.Value, 0); }
  public static Offset<WWParser.Defs.ShopInfo> EndShopInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ShopInfo>(o);
  }
  public ShopInfoT UnPack() {
    var _o = new ShopInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ShopInfoT _o) {
    _o.Id = this.Id;
    _o.ShopType = this.ShopType;
    _o.ShopName = this.ShopName;
    _o.OpenId = this.OpenId;
    _o.ShowCurrency = new List<int>();
    for (var _j = 0; _j < this.ShowCurrencyLength; ++_j) {_o.ShowCurrency.Add(this.ShowCurrency(_j));}
    _o.DialogueText = this.DialogueText;
  }
  public static Offset<WWParser.Defs.ShopInfo> Pack(FlatBufferBuilder builder, ShopInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ShopInfo>);
    var _shop_name = _o.ShopName == null ? default(StringOffset) : builder.CreateString(_o.ShopName);
    var _show_currency = default(VectorOffset);
    if (_o.ShowCurrency != null) {
      var __show_currency = _o.ShowCurrency.ToArray();
      _show_currency = CreateShowCurrencyVector(builder, __show_currency);
    }
    var _dialogue_text = _o.DialogueText == null ? default(StringOffset) : builder.CreateString(_o.DialogueText);
    return CreateShopInfo(
      builder,
      _o.Id,
      _o.ShopType,
      _shop_name,
      _o.OpenId,
      _show_currency,
      _dialogue_text);
  }
}

public class ShopInfoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("shop_type")]
  public int ShopType { get; set; }
  [Newtonsoft.Json.JsonProperty("shop_name")]
  public string ShopName { get; set; }
  [Newtonsoft.Json.JsonProperty("open_id")]
  public int OpenId { get; set; }
  [Newtonsoft.Json.JsonProperty("show_currency")]
  public List<int> ShowCurrency { get; set; }
  [Newtonsoft.Json.JsonProperty("dialogue_text")]
  public string DialogueText { get; set; }

  public ShopInfoT() {
    this.Id = 0;
    this.ShopType = 0;
    this.ShopName = null;
    this.OpenId = 0;
    this.ShowCurrency = null;
    this.DialogueText = null;
  }
}


static public class ShopInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ShopType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*ShopName*/, false)
      && verifier.VerifyField(tablePos, 10 /*OpenId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*ShowCurrency*/, 4 /*int*/, false)
      && verifier.VerifyString(tablePos, 14 /*DialogueText*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
