// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DigitalScreenText : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DigitalScreenText GetRootAsDigitalScreenText(ByteBuffer _bb) { return GetRootAsDigitalScreenText(_bb, new DigitalScreenText()); }
  public static DigitalScreenText GetRootAsDigitalScreenText(ByteBuffer _bb, DigitalScreenText obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DigitalScreenText __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string TextContentId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextContentIdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTextContentIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTextContentIdArray() { return __p.__vector_as_array<byte>(6); }
  public int Alignment { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FontSize { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float ShowStartFrame { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float ShowEndFrame { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HideFrame { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int Effect { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.DigitalScreenText> CreateDigitalScreenText(FlatBufferBuilder builder,
      int id = 0,
      StringOffset text_content_idOffset = default(StringOffset),
      int alignment = 0,
      int font_size = 0,
      float show_start_frame = 0.0f,
      float show_end_frame = 0.0f,
      float hide_frame = 0.0f,
      int effect = 0) {
    builder.StartTable(8);
    DigitalScreenText.AddEffect(builder, effect);
    DigitalScreenText.AddHideFrame(builder, hide_frame);
    DigitalScreenText.AddShowEndFrame(builder, show_end_frame);
    DigitalScreenText.AddShowStartFrame(builder, show_start_frame);
    DigitalScreenText.AddFontSize(builder, font_size);
    DigitalScreenText.AddAlignment(builder, alignment);
    DigitalScreenText.AddTextContentId(builder, text_content_idOffset);
    DigitalScreenText.AddId(builder, id);
    return DigitalScreenText.EndDigitalScreenText(builder);
  }

  public static void StartDigitalScreenText(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTextContentId(FlatBufferBuilder builder, StringOffset textContentIdOffset) { builder.AddOffset(1, textContentIdOffset.Value, 0); }
  public static void AddAlignment(FlatBufferBuilder builder, int alignment) { builder.AddInt(2, alignment, 0); }
  public static void AddFontSize(FlatBufferBuilder builder, int fontSize) { builder.AddInt(3, fontSize, 0); }
  public static void AddShowStartFrame(FlatBufferBuilder builder, float showStartFrame) { builder.AddFloat(4, showStartFrame, 0.0f); }
  public static void AddShowEndFrame(FlatBufferBuilder builder, float showEndFrame) { builder.AddFloat(5, showEndFrame, 0.0f); }
  public static void AddHideFrame(FlatBufferBuilder builder, float hideFrame) { builder.AddFloat(6, hideFrame, 0.0f); }
  public static void AddEffect(FlatBufferBuilder builder, int effect) { builder.AddInt(7, effect, 0); }
  public static Offset<WWParser.Defs.DigitalScreenText> EndDigitalScreenText(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DigitalScreenText>(o);
  }
  public DigitalScreenTextT UnPack() {
    var _o = new DigitalScreenTextT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DigitalScreenTextT _o) {
    _o.Id = this.Id;
    _o.TextContentId = this.TextContentId;
    _o.Alignment = this.Alignment;
    _o.FontSize = this.FontSize;
    _o.ShowStartFrame = this.ShowStartFrame;
    _o.ShowEndFrame = this.ShowEndFrame;
    _o.HideFrame = this.HideFrame;
    _o.Effect = this.Effect;
  }
  public static Offset<WWParser.Defs.DigitalScreenText> Pack(FlatBufferBuilder builder, DigitalScreenTextT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DigitalScreenText>);
    var _text_content_id = _o.TextContentId == null ? default(StringOffset) : builder.CreateString(_o.TextContentId);
    return CreateDigitalScreenText(
      builder,
      _o.Id,
      _text_content_id,
      _o.Alignment,
      _o.FontSize,
      _o.ShowStartFrame,
      _o.ShowEndFrame,
      _o.HideFrame,
      _o.Effect);
  }
}

public class DigitalScreenTextT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("text_content_id")]
  public string TextContentId { get; set; }
  [Newtonsoft.Json.JsonProperty("alignment")]
  public int Alignment { get; set; }
  [Newtonsoft.Json.JsonProperty("font_size")]
  public int FontSize { get; set; }
  [Newtonsoft.Json.JsonProperty("show_start_frame")]
  public float ShowStartFrame { get; set; }
  [Newtonsoft.Json.JsonProperty("show_end_frame")]
  public float ShowEndFrame { get; set; }
  [Newtonsoft.Json.JsonProperty("hide_frame")]
  public float HideFrame { get; set; }
  [Newtonsoft.Json.JsonProperty("effect")]
  public int Effect { get; set; }

  public DigitalScreenTextT() {
    this.Id = 0;
    this.TextContentId = null;
    this.Alignment = 0;
    this.FontSize = 0;
    this.ShowStartFrame = 0.0f;
    this.ShowEndFrame = 0.0f;
    this.HideFrame = 0.0f;
    this.Effect = 0;
  }
}


static public class DigitalScreenTextVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*TextContentId*/, false)
      && verifier.VerifyField(tablePos, 8 /*Alignment*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*FontSize*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ShowStartFrame*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ShowEndFrame*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*HideFrame*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*Effect*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
