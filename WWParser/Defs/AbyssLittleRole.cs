// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AbyssLittleRole : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AbyssLittleRole GetRootAsAbyssLittleRole(ByteBuffer _bb) { return GetRootAsAbyssLittleRole(_bb, new AbyssLittleRole()); }
  public static AbyssLittleRole GetRootAsAbyssLittleRole(ByteBuffer _bb, AbyssLittleRole obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AbyssLittleRole __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CastType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LevelGroupId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string SkillDesc { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSkillDescBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetSkillDescBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetSkillDescArray() { return __p.__vector_as_array<byte>(12); }
  public double AbyssRoleBuff(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int AbyssRoleBuffLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetAbyssRoleBuffBytes() { return __p.__vector_as_span<double>(14, 8); }
#else
  public ArraySegment<byte>? GetAbyssRoleBuffBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public double[] GetAbyssRoleBuffArray() { return __p.__vector_as_array<double>(14); }
  public double AbyssRolePhantomBuff(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int AbyssRolePhantomBuffLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetAbyssRolePhantomBuffBytes() { return __p.__vector_as_span<double>(16, 8); }
#else
  public ArraySegment<byte>? GetAbyssRolePhantomBuffBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public double[] GetAbyssRolePhantomBuffArray() { return __p.__vector_as_array<double>(16); }
  public int TagList(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int TagListLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetTagListBytes() { return __p.__vector_as_span<int>(18, 4); }
#else
  public ArraySegment<byte>? GetTagListBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public int[] GetTagListArray() { return __p.__vector_as_array<int>(18); }
  public string FormationIcon { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFormationIconBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetFormationIconBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetFormationIconArray() { return __p.__vector_as_array<byte>(20); }
  public string Icon { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(22); }
  public string UnlockDesc { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUnlockDescBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetUnlockDescBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetUnlockDescArray() { return __p.__vector_as_array<byte>(24); }
  public string Name { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(26); }
  public int Quality { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PhantomItemId { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.AbyssLittleRole> CreateAbyssLittleRole(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int cast_type = 0,
      int level_group_id = 0,
      StringOffset skill_descOffset = default(StringOffset),
      VectorOffset abyss_role_buffOffset = default(VectorOffset),
      VectorOffset abyss_role_phantom_buffOffset = default(VectorOffset),
      VectorOffset tag_listOffset = default(VectorOffset),
      StringOffset formation_iconOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      StringOffset unlock_descOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      int quality = 0,
      int phantom_item_id = 0) {
    builder.StartTable(14);
    AbyssLittleRole.AddPhantomItemId(builder, phantom_item_id);
    AbyssLittleRole.AddQuality(builder, quality);
    AbyssLittleRole.AddName(builder, nameOffset);
    AbyssLittleRole.AddUnlockDesc(builder, unlock_descOffset);
    AbyssLittleRole.AddIcon(builder, iconOffset);
    AbyssLittleRole.AddFormationIcon(builder, formation_iconOffset);
    AbyssLittleRole.AddTagList(builder, tag_listOffset);
    AbyssLittleRole.AddAbyssRolePhantomBuff(builder, abyss_role_phantom_buffOffset);
    AbyssLittleRole.AddAbyssRoleBuff(builder, abyss_role_buffOffset);
    AbyssLittleRole.AddSkillDesc(builder, skill_descOffset);
    AbyssLittleRole.AddLevelGroupId(builder, level_group_id);
    AbyssLittleRole.AddCastType(builder, cast_type);
    AbyssLittleRole.AddActivityId(builder, activity_id);
    AbyssLittleRole.AddId(builder, id);
    return AbyssLittleRole.EndAbyssLittleRole(builder);
  }

  public static void StartAbyssLittleRole(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddCastType(FlatBufferBuilder builder, int castType) { builder.AddInt(2, castType, 0); }
  public static void AddLevelGroupId(FlatBufferBuilder builder, int levelGroupId) { builder.AddInt(3, levelGroupId, 0); }
  public static void AddSkillDesc(FlatBufferBuilder builder, StringOffset skillDescOffset) { builder.AddOffset(4, skillDescOffset.Value, 0); }
  public static void AddAbyssRoleBuff(FlatBufferBuilder builder, VectorOffset abyssRoleBuffOffset) { builder.AddOffset(5, abyssRoleBuffOffset.Value, 0); }
  public static VectorOffset CreateAbyssRoleBuffVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRoleBuffVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRoleBuffVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRoleBuffVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAbyssRoleBuffVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddAbyssRolePhantomBuff(FlatBufferBuilder builder, VectorOffset abyssRolePhantomBuffOffset) { builder.AddOffset(6, abyssRolePhantomBuffOffset.Value, 0); }
  public static VectorOffset CreateAbyssRolePhantomBuffVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRolePhantomBuffVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRolePhantomBuffVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAbyssRolePhantomBuffVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAbyssRolePhantomBuffVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddTagList(FlatBufferBuilder builder, VectorOffset tagListOffset) { builder.AddOffset(7, tagListOffset.Value, 0); }
  public static VectorOffset CreateTagListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTagListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTagListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFormationIcon(FlatBufferBuilder builder, StringOffset formationIconOffset) { builder.AddOffset(8, formationIconOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(9, iconOffset.Value, 0); }
  public static void AddUnlockDesc(FlatBufferBuilder builder, StringOffset unlockDescOffset) { builder.AddOffset(10, unlockDescOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(11, nameOffset.Value, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int quality) { builder.AddInt(12, quality, 0); }
  public static void AddPhantomItemId(FlatBufferBuilder builder, int phantomItemId) { builder.AddInt(13, phantomItemId, 0); }
  public static Offset<WWParser.Defs.AbyssLittleRole> EndAbyssLittleRole(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AbyssLittleRole>(o);
  }
  public AbyssLittleRoleT UnPack() {
    var _o = new AbyssLittleRoleT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AbyssLittleRoleT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.CastType = this.CastType;
    _o.LevelGroupId = this.LevelGroupId;
    _o.SkillDesc = this.SkillDesc;
    _o.AbyssRoleBuff = new List<double>();
    for (var _j = 0; _j < this.AbyssRoleBuffLength; ++_j) {_o.AbyssRoleBuff.Add(this.AbyssRoleBuff(_j));}
    _o.AbyssRolePhantomBuff = new List<double>();
    for (var _j = 0; _j < this.AbyssRolePhantomBuffLength; ++_j) {_o.AbyssRolePhantomBuff.Add(this.AbyssRolePhantomBuff(_j));}
    _o.TagList = new List<int>();
    for (var _j = 0; _j < this.TagListLength; ++_j) {_o.TagList.Add(this.TagList(_j));}
    _o.FormationIcon = this.FormationIcon;
    _o.Icon = this.Icon;
    _o.UnlockDesc = this.UnlockDesc;
    _o.Name = this.Name;
    _o.Quality = this.Quality;
    _o.PhantomItemId = this.PhantomItemId;
  }
  public static Offset<WWParser.Defs.AbyssLittleRole> Pack(FlatBufferBuilder builder, AbyssLittleRoleT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AbyssLittleRole>);
    var _skill_desc = _o.SkillDesc == null ? default(StringOffset) : builder.CreateString(_o.SkillDesc);
    var _abyss_role_buff = default(VectorOffset);
    if (_o.AbyssRoleBuff != null) {
      var __abyss_role_buff = _o.AbyssRoleBuff.ToArray();
      _abyss_role_buff = CreateAbyssRoleBuffVector(builder, __abyss_role_buff);
    }
    var _abyss_role_phantom_buff = default(VectorOffset);
    if (_o.AbyssRolePhantomBuff != null) {
      var __abyss_role_phantom_buff = _o.AbyssRolePhantomBuff.ToArray();
      _abyss_role_phantom_buff = CreateAbyssRolePhantomBuffVector(builder, __abyss_role_phantom_buff);
    }
    var _tag_list = default(VectorOffset);
    if (_o.TagList != null) {
      var __tag_list = _o.TagList.ToArray();
      _tag_list = CreateTagListVector(builder, __tag_list);
    }
    var _formation_icon = _o.FormationIcon == null ? default(StringOffset) : builder.CreateString(_o.FormationIcon);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _unlock_desc = _o.UnlockDesc == null ? default(StringOffset) : builder.CreateString(_o.UnlockDesc);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateAbyssLittleRole(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.CastType,
      _o.LevelGroupId,
      _skill_desc,
      _abyss_role_buff,
      _abyss_role_phantom_buff,
      _tag_list,
      _formation_icon,
      _icon,
      _unlock_desc,
      _name,
      _o.Quality,
      _o.PhantomItemId);
  }
}

public class AbyssLittleRoleT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("cast_type")]
  public int CastType { get; set; }
  [Newtonsoft.Json.JsonProperty("level_group_id")]
  public int LevelGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_desc")]
  public string SkillDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("abyss_role_buff")]
  public List<double> AbyssRoleBuff { get; set; }
  [Newtonsoft.Json.JsonProperty("abyss_role_phantom_buff")]
  public List<double> AbyssRolePhantomBuff { get; set; }
  [Newtonsoft.Json.JsonProperty("tag_list")]
  public List<int> TagList { get; set; }
  [Newtonsoft.Json.JsonProperty("formation_icon")]
  public string FormationIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("unlock_desc")]
  public string UnlockDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("quality")]
  public int Quality { get; set; }
  [Newtonsoft.Json.JsonProperty("phantom_item_id")]
  public int PhantomItemId { get; set; }

  public AbyssLittleRoleT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.CastType = 0;
    this.LevelGroupId = 0;
    this.SkillDesc = null;
    this.AbyssRoleBuff = null;
    this.AbyssRolePhantomBuff = null;
    this.TagList = null;
    this.FormationIcon = null;
    this.Icon = null;
    this.UnlockDesc = null;
    this.Name = null;
    this.Quality = 0;
    this.PhantomItemId = 0;
  }
}


static public class AbyssLittleRoleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*CastType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*LevelGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*SkillDesc*/, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*AbyssRoleBuff*/, 8 /*double*/, false)
      && verifier.VerifyVectorOfData(tablePos, 16 /*AbyssRolePhantomBuff*/, 8 /*double*/, false)
      && verifier.VerifyVectorOfData(tablePos, 18 /*TagList*/, 4 /*int*/, false)
      && verifier.VerifyString(tablePos, 20 /*FormationIcon*/, false)
      && verifier.VerifyString(tablePos, 22 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 24 /*UnlockDesc*/, false)
      && verifier.VerifyString(tablePos, 26 /*Name*/, false)
      && verifier.VerifyField(tablePos, 28 /*Quality*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*PhantomItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
