// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RacingBetsOddsUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RacingBetsOddsUpdate GetRootAsRacingBetsOddsUpdate(ByteBuffer _bb) { return GetRootAsRacingBetsOddsUpdate(_bb, new RacingBetsOddsUpdate()); }
  public static RacingBetsOddsUpdate GetRootAsRacingBetsOddsUpdate(ByteBuffer _bb, RacingBetsOddsUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RacingBetsOddsUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IndexId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string OddsUpdatePoint(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int OddsUpdatePointLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.RacingBetsOddsUpdate> CreateRacingBetsOddsUpdate(FlatBufferBuilder builder,
      int id = 0,
      int index_id = 0,
      VectorOffset odds_update_pointOffset = default(VectorOffset)) {
    builder.StartTable(3);
    RacingBetsOddsUpdate.AddOddsUpdatePoint(builder, odds_update_pointOffset);
    RacingBetsOddsUpdate.AddIndexId(builder, index_id);
    RacingBetsOddsUpdate.AddId(builder, id);
    return RacingBetsOddsUpdate.EndRacingBetsOddsUpdate(builder);
  }

  public static void StartRacingBetsOddsUpdate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddIndexId(FlatBufferBuilder builder, int indexId) { builder.AddInt(1, indexId, 0); }
  public static void AddOddsUpdatePoint(FlatBufferBuilder builder, VectorOffset oddsUpdatePointOffset) { builder.AddOffset(2, oddsUpdatePointOffset.Value, 0); }
  public static VectorOffset CreateOddsUpdatePointVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOddsUpdatePointVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateOddsUpdatePointVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateOddsUpdatePointVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartOddsUpdatePointVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.RacingBetsOddsUpdate> EndRacingBetsOddsUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RacingBetsOddsUpdate>(o);
  }
  public RacingBetsOddsUpdateT UnPack() {
    var _o = new RacingBetsOddsUpdateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RacingBetsOddsUpdateT _o) {
    _o.Id = this.Id;
    _o.IndexId = this.IndexId;
    _o.OddsUpdatePoint = new List<string>();
    for (var _j = 0; _j < this.OddsUpdatePointLength; ++_j) {_o.OddsUpdatePoint.Add(this.OddsUpdatePoint(_j));}
  }
  public static Offset<WWParser.Defs.RacingBetsOddsUpdate> Pack(FlatBufferBuilder builder, RacingBetsOddsUpdateT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RacingBetsOddsUpdate>);
    var _odds_update_point = default(VectorOffset);
    if (_o.OddsUpdatePoint != null) {
      var __odds_update_point = new StringOffset[_o.OddsUpdatePoint.Count];
      for (var _j = 0; _j < __odds_update_point.Length; ++_j) { __odds_update_point[_j] = builder.CreateString(_o.OddsUpdatePoint[_j]); }
      _odds_update_point = CreateOddsUpdatePointVector(builder, __odds_update_point);
    }
    return CreateRacingBetsOddsUpdate(
      builder,
      _o.Id,
      _o.IndexId,
      _odds_update_point);
  }
}

public class RacingBetsOddsUpdateT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("index_id")]
  public int IndexId { get; set; }
  [Newtonsoft.Json.JsonProperty("odds_update_point")]
  public List<string> OddsUpdatePoint { get; set; }

  public RacingBetsOddsUpdateT() {
    this.Id = 0;
    this.IndexId = 0;
    this.OddsUpdatePoint = null;
  }
}


static public class RacingBetsOddsUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*IndexId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*OddsUpdatePoint*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
