// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FarmGoldScore : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FarmGoldScore GetRootAsFarmGoldScore(ByteBuffer _bb) { return GetRootAsFarmGoldScore(_bb, new FarmGoldScore()); }
  public static FarmGoldScore GetRootAsFarmGoldScore(ByteBuffer _bb, FarmGoldScore obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FarmGoldScore __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Score { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.FarmGoldScore> CreateFarmGoldScore(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int score = 0,
      int reward_id = 0) {
    builder.StartTable(4);
    FarmGoldScore.AddRewardId(builder, reward_id);
    FarmGoldScore.AddScore(builder, score);
    FarmGoldScore.AddActivityId(builder, activity_id);
    FarmGoldScore.AddId(builder, id);
    return FarmGoldScore.EndFarmGoldScore(builder);
  }

  public static void StartFarmGoldScore(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(2, score, 0); }
  public static void AddRewardId(FlatBufferBuilder builder, int rewardId) { builder.AddInt(3, rewardId, 0); }
  public static Offset<WWParser.Defs.FarmGoldScore> EndFarmGoldScore(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FarmGoldScore>(o);
  }
  public FarmGoldScoreT UnPack() {
    var _o = new FarmGoldScoreT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FarmGoldScoreT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.Score = this.Score;
    _o.RewardId = this.RewardId;
  }
  public static Offset<WWParser.Defs.FarmGoldScore> Pack(FlatBufferBuilder builder, FarmGoldScoreT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FarmGoldScore>);
    return CreateFarmGoldScore(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.Score,
      _o.RewardId);
  }
}

public class FarmGoldScoreT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("score")]
  public int Score { get; set; }
  [Newtonsoft.Json.JsonProperty("reward_id")]
  public int RewardId { get; set; }

  public FarmGoldScoreT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.Score = 0;
    this.RewardId = 0;
  }
}


static public class FarmGoldScoreVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Score*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*RewardId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
