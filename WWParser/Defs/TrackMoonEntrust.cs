// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TrackMoonEntrust : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TrackMoonEntrust GetRootAsTrackMoonEntrust(ByteBuffer _bb) { return GetRootAsTrackMoonEntrust(_bb, new TrackMoonEntrust()); }
  public static TrackMoonEntrust GetRootAsTrackMoonEntrust(ByteBuffer _bb, TrackMoonEntrust obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TrackMoonEntrust __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string Content { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContentBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetContentBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetContentArray() { return __p.__vector_as_array<byte>(8); }
  public int UnlockCondition { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Guaranteed { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int JumpType { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int JumpParam { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? CapacityMap(int j) { int o = __p.__offset(18); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CapacityMapLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntInt? Consume(int j) { int o = __p.__offset(20); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConsumeLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int Star { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntrustType { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? IdeaSuccRatio(int j) { int o = __p.__offset(26); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int IdeaSuccRatioLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int IdeaSuccMul(int j) { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int IdeaSuccMulLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetIdeaSuccMulBytes() { return __p.__vector_as_span<int>(28, 4); }
#else
  public ArraySegment<byte>? GetIdeaSuccMulBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public int[] GetIdeaSuccMulArray() { return __p.__vector_as_array<int>(28); }
  public int AttributionSuccRatio(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AttributionSuccRatioLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetAttributionSuccRatioBytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetAttributionSuccRatioBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetAttributionSuccRatioArray() { return __p.__vector_as_array<int>(30); }
  public int AttributeMaxValue { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InvestLimit { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TrackMoonEntrust> CreateTrackMoonEntrust(FlatBufferBuilder builder,
      int id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset contentOffset = default(StringOffset),
      int unlock_condition = 0,
      bool guaranteed = false,
      int jump_type = 0,
      int jump_param = 0,
      VectorOffset capacity_mapOffset = default(VectorOffset),
      VectorOffset consumeOffset = default(VectorOffset),
      int star = 0,
      int entrust_type = 0,
      VectorOffset idea_succ_ratioOffset = default(VectorOffset),
      VectorOffset idea_succ_mulOffset = default(VectorOffset),
      VectorOffset attribution_succ_ratioOffset = default(VectorOffset),
      int attribute_max_value = 0,
      int invest_limit = 0) {
    builder.StartTable(16);
    TrackMoonEntrust.AddInvestLimit(builder, invest_limit);
    TrackMoonEntrust.AddAttributeMaxValue(builder, attribute_max_value);
    TrackMoonEntrust.AddAttributionSuccRatio(builder, attribution_succ_ratioOffset);
    TrackMoonEntrust.AddIdeaSuccMul(builder, idea_succ_mulOffset);
    TrackMoonEntrust.AddIdeaSuccRatio(builder, idea_succ_ratioOffset);
    TrackMoonEntrust.AddEntrustType(builder, entrust_type);
    TrackMoonEntrust.AddStar(builder, star);
    TrackMoonEntrust.AddConsume(builder, consumeOffset);
    TrackMoonEntrust.AddCapacityMap(builder, capacity_mapOffset);
    TrackMoonEntrust.AddJumpParam(builder, jump_param);
    TrackMoonEntrust.AddJumpType(builder, jump_type);
    TrackMoonEntrust.AddUnlockCondition(builder, unlock_condition);
    TrackMoonEntrust.AddContent(builder, contentOffset);
    TrackMoonEntrust.AddTitle(builder, titleOffset);
    TrackMoonEntrust.AddId(builder, id);
    TrackMoonEntrust.AddGuaranteed(builder, guaranteed);
    return TrackMoonEntrust.EndTrackMoonEntrust(builder);
  }

  public static void StartTrackMoonEntrust(FlatBufferBuilder builder) { builder.StartTable(16); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(1, titleOffset.Value, 0); }
  public static void AddContent(FlatBufferBuilder builder, StringOffset contentOffset) { builder.AddOffset(2, contentOffset.Value, 0); }
  public static void AddUnlockCondition(FlatBufferBuilder builder, int unlockCondition) { builder.AddInt(3, unlockCondition, 0); }
  public static void AddGuaranteed(FlatBufferBuilder builder, bool guaranteed) { builder.AddBool(4, guaranteed, false); }
  public static void AddJumpType(FlatBufferBuilder builder, int jumpType) { builder.AddInt(5, jumpType, 0); }
  public static void AddJumpParam(FlatBufferBuilder builder, int jumpParam) { builder.AddInt(6, jumpParam, 0); }
  public static void AddCapacityMap(FlatBufferBuilder builder, VectorOffset capacityMapOffset) { builder.AddOffset(7, capacityMapOffset.Value, 0); }
  public static VectorOffset CreateCapacityMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCapacityMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCapacityMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCapacityMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCapacityMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddConsume(FlatBufferBuilder builder, VectorOffset consumeOffset) { builder.AddOffset(8, consumeOffset.Value, 0); }
  public static VectorOffset CreateConsumeVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartConsumeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStar(FlatBufferBuilder builder, int star) { builder.AddInt(9, star, 0); }
  public static void AddEntrustType(FlatBufferBuilder builder, int entrustType) { builder.AddInt(10, entrustType, 0); }
  public static void AddIdeaSuccRatio(FlatBufferBuilder builder, VectorOffset ideaSuccRatioOffset) { builder.AddOffset(11, ideaSuccRatioOffset.Value, 0); }
  public static VectorOffset CreateIdeaSuccRatioVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccRatioVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccRatioVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccRatioVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIdeaSuccRatioVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIdeaSuccMul(FlatBufferBuilder builder, VectorOffset ideaSuccMulOffset) { builder.AddOffset(12, ideaSuccMulOffset.Value, 0); }
  public static VectorOffset CreateIdeaSuccMulVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccMulVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccMulVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIdeaSuccMulVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIdeaSuccMulVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttributionSuccRatio(FlatBufferBuilder builder, VectorOffset attributionSuccRatioOffset) { builder.AddOffset(13, attributionSuccRatioOffset.Value, 0); }
  public static VectorOffset CreateAttributionSuccRatioVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAttributionSuccRatioVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributionSuccRatioVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAttributionSuccRatioVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAttributionSuccRatioVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttributeMaxValue(FlatBufferBuilder builder, int attributeMaxValue) { builder.AddInt(14, attributeMaxValue, 0); }
  public static void AddInvestLimit(FlatBufferBuilder builder, int investLimit) { builder.AddInt(15, investLimit, 0); }
  public static Offset<WWParser.Defs.TrackMoonEntrust> EndTrackMoonEntrust(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TrackMoonEntrust>(o);
  }
  public TrackMoonEntrustT UnPack() {
    var _o = new TrackMoonEntrustT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TrackMoonEntrustT _o) {
    _o.Id = this.Id;
    _o.Title = this.Title;
    _o.Content = this.Content;
    _o.UnlockCondition = this.UnlockCondition;
    _o.Guaranteed = this.Guaranteed;
    _o.JumpType = this.JumpType;
    _o.JumpParam = this.JumpParam;
    _o.CapacityMap = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.CapacityMapLength; ++_j) {_o.CapacityMap.Add(this.CapacityMap(_j).HasValue ? this.CapacityMap(_j).Value.UnPack() : null);}
    _o.Consume = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.ConsumeLength; ++_j) {_o.Consume.Add(this.Consume(_j).HasValue ? this.Consume(_j).Value.UnPack() : null);}
    _o.Star = this.Star;
    _o.EntrustType = this.EntrustType;
    _o.IdeaSuccRatio = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.IdeaSuccRatioLength; ++_j) {_o.IdeaSuccRatio.Add(this.IdeaSuccRatio(_j).HasValue ? this.IdeaSuccRatio(_j).Value.UnPack() : null);}
    _o.IdeaSuccMul = new List<int>();
    for (var _j = 0; _j < this.IdeaSuccMulLength; ++_j) {_o.IdeaSuccMul.Add(this.IdeaSuccMul(_j));}
    _o.AttributionSuccRatio = new List<int>();
    for (var _j = 0; _j < this.AttributionSuccRatioLength; ++_j) {_o.AttributionSuccRatio.Add(this.AttributionSuccRatio(_j));}
    _o.AttributeMaxValue = this.AttributeMaxValue;
    _o.InvestLimit = this.InvestLimit;
  }
  public static Offset<WWParser.Defs.TrackMoonEntrust> Pack(FlatBufferBuilder builder, TrackMoonEntrustT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TrackMoonEntrust>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _content = _o.Content == null ? default(StringOffset) : builder.CreateString(_o.Content);
    var _capacity_map = default(VectorOffset);
    if (_o.CapacityMap != null) {
      var __capacity_map = new Offset<WWParser.Defs.DicIntInt>[_o.CapacityMap.Count];
      for (var _j = 0; _j < __capacity_map.Length; ++_j) { __capacity_map[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.CapacityMap[_j]); }
      _capacity_map = CreateCapacityMapVector(builder, __capacity_map);
    }
    var _consume = default(VectorOffset);
    if (_o.Consume != null) {
      var __consume = new Offset<WWParser.Defs.DicIntInt>[_o.Consume.Count];
      for (var _j = 0; _j < __consume.Length; ++_j) { __consume[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.Consume[_j]); }
      _consume = CreateConsumeVector(builder, __consume);
    }
    var _idea_succ_ratio = default(VectorOffset);
    if (_o.IdeaSuccRatio != null) {
      var __idea_succ_ratio = new Offset<WWParser.Defs.DicIntInt>[_o.IdeaSuccRatio.Count];
      for (var _j = 0; _j < __idea_succ_ratio.Length; ++_j) { __idea_succ_ratio[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.IdeaSuccRatio[_j]); }
      _idea_succ_ratio = CreateIdeaSuccRatioVector(builder, __idea_succ_ratio);
    }
    var _idea_succ_mul = default(VectorOffset);
    if (_o.IdeaSuccMul != null) {
      var __idea_succ_mul = _o.IdeaSuccMul.ToArray();
      _idea_succ_mul = CreateIdeaSuccMulVector(builder, __idea_succ_mul);
    }
    var _attribution_succ_ratio = default(VectorOffset);
    if (_o.AttributionSuccRatio != null) {
      var __attribution_succ_ratio = _o.AttributionSuccRatio.ToArray();
      _attribution_succ_ratio = CreateAttributionSuccRatioVector(builder, __attribution_succ_ratio);
    }
    return CreateTrackMoonEntrust(
      builder,
      _o.Id,
      _title,
      _content,
      _o.UnlockCondition,
      _o.Guaranteed,
      _o.JumpType,
      _o.JumpParam,
      _capacity_map,
      _consume,
      _o.Star,
      _o.EntrustType,
      _idea_succ_ratio,
      _idea_succ_mul,
      _attribution_succ_ratio,
      _o.AttributeMaxValue,
      _o.InvestLimit);
  }
}

public class TrackMoonEntrustT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("content")]
  public string Content { get; set; }
  [Newtonsoft.Json.JsonProperty("unlock_condition")]
  public int UnlockCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("guaranteed")]
  public bool Guaranteed { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_type")]
  public int JumpType { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_param")]
  public int JumpParam { get; set; }
  [Newtonsoft.Json.JsonProperty("capacity_map")]
  public List<WWParser.Defs.DicIntIntT> CapacityMap { get; set; }
  [Newtonsoft.Json.JsonProperty("consume")]
  public List<WWParser.Defs.DicIntIntT> Consume { get; set; }
  [Newtonsoft.Json.JsonProperty("star")]
  public int Star { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_type")]
  public int EntrustType { get; set; }
  [Newtonsoft.Json.JsonProperty("idea_succ_ratio")]
  public List<WWParser.Defs.DicIntIntT> IdeaSuccRatio { get; set; }
  [Newtonsoft.Json.JsonProperty("idea_succ_mul")]
  public List<int> IdeaSuccMul { get; set; }
  [Newtonsoft.Json.JsonProperty("attribution_succ_ratio")]
  public List<int> AttributionSuccRatio { get; set; }
  [Newtonsoft.Json.JsonProperty("attribute_max_value")]
  public int AttributeMaxValue { get; set; }
  [Newtonsoft.Json.JsonProperty("invest_limit")]
  public int InvestLimit { get; set; }

  public TrackMoonEntrustT() {
    this.Id = 0;
    this.Title = null;
    this.Content = null;
    this.UnlockCondition = 0;
    this.Guaranteed = false;
    this.JumpType = 0;
    this.JumpParam = 0;
    this.CapacityMap = null;
    this.Consume = null;
    this.Star = 0;
    this.EntrustType = 0;
    this.IdeaSuccRatio = null;
    this.IdeaSuccMul = null;
    this.AttributionSuccRatio = null;
    this.AttributeMaxValue = 0;
    this.InvestLimit = 0;
  }
}


static public class TrackMoonEntrustVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Title*/, false)
      && verifier.VerifyString(tablePos, 8 /*Content*/, false)
      && verifier.VerifyField(tablePos, 10 /*UnlockCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Guaranteed*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*JumpType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*JumpParam*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 18 /*CapacityMap*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 20 /*Consume*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 22 /*Star*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*EntrustType*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 26 /*IdeaSuccRatio*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 28 /*IdeaSuccMul*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 30 /*AttributionSuccRatio*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 32 /*AttributeMaxValue*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*InvestLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
