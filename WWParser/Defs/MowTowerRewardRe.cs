// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MowTowerRewardRe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static MowTowerRewardRe GetRootAsMowTowerRewardRe(ByteBuffer _bb) { return GetRootAsMowTowerRewardRe(_bb, new MowTowerRewardRe()); }
  public static MowTowerRewardRe GetRootAsMowTowerRewardRe(ByteBuffer _bb, MowTowerRewardRe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MowTowerRewardRe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MowTowerLevelsId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Score { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string LevelRewardDesc { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLevelRewardDescBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLevelRewardDescBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLevelRewardDescArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<WWParser.Defs.MowTowerRewardRe> CreateMowTowerRewardRe(FlatBufferBuilder builder,
      int id = 0,
      int mow_tower_levels_id = 0,
      int score = 0,
      int reward_id = 0,
      StringOffset level_reward_descOffset = default(StringOffset)) {
    builder.StartTable(5);
    MowTowerRewardRe.AddLevelRewardDesc(builder, level_reward_descOffset);
    MowTowerRewardRe.AddRewardId(builder, reward_id);
    MowTowerRewardRe.AddScore(builder, score);
    MowTowerRewardRe.AddMowTowerLevelsId(builder, mow_tower_levels_id);
    MowTowerRewardRe.AddId(builder, id);
    return MowTowerRewardRe.EndMowTowerRewardRe(builder);
  }

  public static void StartMowTowerRewardRe(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddMowTowerLevelsId(FlatBufferBuilder builder, int mowTowerLevelsId) { builder.AddInt(1, mowTowerLevelsId, 0); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(2, score, 0); }
  public static void AddRewardId(FlatBufferBuilder builder, int rewardId) { builder.AddInt(3, rewardId, 0); }
  public static void AddLevelRewardDesc(FlatBufferBuilder builder, StringOffset levelRewardDescOffset) { builder.AddOffset(4, levelRewardDescOffset.Value, 0); }
  public static Offset<WWParser.Defs.MowTowerRewardRe> EndMowTowerRewardRe(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.MowTowerRewardRe>(o);
  }
  public MowTowerRewardReT UnPack() {
    var _o = new MowTowerRewardReT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MowTowerRewardReT _o) {
    _o.Id = this.Id;
    _o.MowTowerLevelsId = this.MowTowerLevelsId;
    _o.Score = this.Score;
    _o.RewardId = this.RewardId;
    _o.LevelRewardDesc = this.LevelRewardDesc;
  }
  public static Offset<WWParser.Defs.MowTowerRewardRe> Pack(FlatBufferBuilder builder, MowTowerRewardReT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.MowTowerRewardRe>);
    var _level_reward_desc = _o.LevelRewardDesc == null ? default(StringOffset) : builder.CreateString(_o.LevelRewardDesc);
    return CreateMowTowerRewardRe(
      builder,
      _o.Id,
      _o.MowTowerLevelsId,
      _o.Score,
      _o.RewardId,
      _level_reward_desc);
  }
}

public class MowTowerRewardReT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("mow_tower_levels_id")]
  public int MowTowerLevelsId { get; set; }
  [Newtonsoft.Json.JsonProperty("score")]
  public int Score { get; set; }
  [Newtonsoft.Json.JsonProperty("reward_id")]
  public int RewardId { get; set; }
  [Newtonsoft.Json.JsonProperty("level_reward_desc")]
  public string LevelRewardDesc { get; set; }

  public MowTowerRewardReT() {
    this.Id = 0;
    this.MowTowerLevelsId = 0;
    this.Score = 0;
    this.RewardId = 0;
    this.LevelRewardDesc = null;
  }
}


static public class MowTowerRewardReVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*MowTowerLevelsId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Score*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*RewardId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*LevelRewardDesc*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
