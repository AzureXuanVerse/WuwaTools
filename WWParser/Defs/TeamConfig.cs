// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TeamConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TeamConfig GetRootAsTeamConfig(ByteBuffer _bb) { return GetRootAsTeamConfig(_bb, new TeamConfig()); }
  public static TeamConfig GetRootAsTeamConfig(ByteBuffer _bb, TeamConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TeamConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BuffId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InviteEffectTime { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ViolationOperationTimes { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ViolationOperationBanTime { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BanTimesCheck { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BBanTime { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CBanTime { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InviteCd { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NearbrPlayerCount { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NearbrPlayerCountRefreshCd { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ViolationOperationTimeLimit { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TeamConfig> CreateTeamConfig(FlatBufferBuilder builder,
      int id = 0,
      int buff_id = 0,
      int invite_effect_time = 0,
      int violation_operation_times = 0,
      int violation_operation_ban_time = 0,
      int ban_times_check = 0,
      int b_ban_time = 0,
      int c_ban_time = 0,
      int invite_cd = 0,
      int nearbr_player_count = 0,
      int nearbr_player_count_refresh_cd = 0,
      int violation_operation_time_limit = 0) {
    builder.StartTable(12);
    TeamConfig.AddViolationOperationTimeLimit(builder, violation_operation_time_limit);
    TeamConfig.AddNearbrPlayerCountRefreshCd(builder, nearbr_player_count_refresh_cd);
    TeamConfig.AddNearbrPlayerCount(builder, nearbr_player_count);
    TeamConfig.AddInviteCd(builder, invite_cd);
    TeamConfig.AddCBanTime(builder, c_ban_time);
    TeamConfig.AddBBanTime(builder, b_ban_time);
    TeamConfig.AddBanTimesCheck(builder, ban_times_check);
    TeamConfig.AddViolationOperationBanTime(builder, violation_operation_ban_time);
    TeamConfig.AddViolationOperationTimes(builder, violation_operation_times);
    TeamConfig.AddInviteEffectTime(builder, invite_effect_time);
    TeamConfig.AddBuffId(builder, buff_id);
    TeamConfig.AddId(builder, id);
    return TeamConfig.EndTeamConfig(builder);
  }

  public static void StartTeamConfig(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, int buffId) { builder.AddInt(1, buffId, 0); }
  public static void AddInviteEffectTime(FlatBufferBuilder builder, int inviteEffectTime) { builder.AddInt(2, inviteEffectTime, 0); }
  public static void AddViolationOperationTimes(FlatBufferBuilder builder, int violationOperationTimes) { builder.AddInt(3, violationOperationTimes, 0); }
  public static void AddViolationOperationBanTime(FlatBufferBuilder builder, int violationOperationBanTime) { builder.AddInt(4, violationOperationBanTime, 0); }
  public static void AddBanTimesCheck(FlatBufferBuilder builder, int banTimesCheck) { builder.AddInt(5, banTimesCheck, 0); }
  public static void AddBBanTime(FlatBufferBuilder builder, int bBanTime) { builder.AddInt(6, bBanTime, 0); }
  public static void AddCBanTime(FlatBufferBuilder builder, int cBanTime) { builder.AddInt(7, cBanTime, 0); }
  public static void AddInviteCd(FlatBufferBuilder builder, int inviteCd) { builder.AddInt(8, inviteCd, 0); }
  public static void AddNearbrPlayerCount(FlatBufferBuilder builder, int nearbrPlayerCount) { builder.AddInt(9, nearbrPlayerCount, 0); }
  public static void AddNearbrPlayerCountRefreshCd(FlatBufferBuilder builder, int nearbrPlayerCountRefreshCd) { builder.AddInt(10, nearbrPlayerCountRefreshCd, 0); }
  public static void AddViolationOperationTimeLimit(FlatBufferBuilder builder, int violationOperationTimeLimit) { builder.AddInt(11, violationOperationTimeLimit, 0); }
  public static Offset<WWParser.Defs.TeamConfig> EndTeamConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TeamConfig>(o);
  }
  public TeamConfigT UnPack() {
    var _o = new TeamConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TeamConfigT _o) {
    _o.Id = this.Id;
    _o.BuffId = this.BuffId;
    _o.InviteEffectTime = this.InviteEffectTime;
    _o.ViolationOperationTimes = this.ViolationOperationTimes;
    _o.ViolationOperationBanTime = this.ViolationOperationBanTime;
    _o.BanTimesCheck = this.BanTimesCheck;
    _o.BBanTime = this.BBanTime;
    _o.CBanTime = this.CBanTime;
    _o.InviteCd = this.InviteCd;
    _o.NearbrPlayerCount = this.NearbrPlayerCount;
    _o.NearbrPlayerCountRefreshCd = this.NearbrPlayerCountRefreshCd;
    _o.ViolationOperationTimeLimit = this.ViolationOperationTimeLimit;
  }
  public static Offset<WWParser.Defs.TeamConfig> Pack(FlatBufferBuilder builder, TeamConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TeamConfig>);
    return CreateTeamConfig(
      builder,
      _o.Id,
      _o.BuffId,
      _o.InviteEffectTime,
      _o.ViolationOperationTimes,
      _o.ViolationOperationBanTime,
      _o.BanTimesCheck,
      _o.BBanTime,
      _o.CBanTime,
      _o.InviteCd,
      _o.NearbrPlayerCount,
      _o.NearbrPlayerCountRefreshCd,
      _o.ViolationOperationTimeLimit);
  }
}

public class TeamConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_id")]
  public int BuffId { get; set; }
  [Newtonsoft.Json.JsonProperty("invite_effect_time")]
  public int InviteEffectTime { get; set; }
  [Newtonsoft.Json.JsonProperty("violation_operation_times")]
  public int ViolationOperationTimes { get; set; }
  [Newtonsoft.Json.JsonProperty("violation_operation_ban_time")]
  public int ViolationOperationBanTime { get; set; }
  [Newtonsoft.Json.JsonProperty("ban_times_check")]
  public int BanTimesCheck { get; set; }
  [Newtonsoft.Json.JsonProperty("b_ban_time")]
  public int BBanTime { get; set; }
  [Newtonsoft.Json.JsonProperty("c_ban_time")]
  public int CBanTime { get; set; }
  [Newtonsoft.Json.JsonProperty("invite_cd")]
  public int InviteCd { get; set; }
  [Newtonsoft.Json.JsonProperty("nearbr_player_count")]
  public int NearbrPlayerCount { get; set; }
  [Newtonsoft.Json.JsonProperty("nearbr_player_count_refresh_cd")]
  public int NearbrPlayerCountRefreshCd { get; set; }
  [Newtonsoft.Json.JsonProperty("violation_operation_time_limit")]
  public int ViolationOperationTimeLimit { get; set; }

  public TeamConfigT() {
    this.Id = 0;
    this.BuffId = 0;
    this.InviteEffectTime = 0;
    this.ViolationOperationTimes = 0;
    this.ViolationOperationBanTime = 0;
    this.BanTimesCheck = 0;
    this.BBanTime = 0;
    this.CBanTime = 0;
    this.InviteCd = 0;
    this.NearbrPlayerCount = 0;
    this.NearbrPlayerCountRefreshCd = 0;
    this.ViolationOperationTimeLimit = 0;
  }
}


static public class TeamConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*BuffId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*InviteEffectTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*ViolationOperationTimes*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ViolationOperationBanTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*BanTimesCheck*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*BBanTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*CBanTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*InviteCd*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*NearbrPlayerCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*NearbrPlayerCountRefreshCd*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*ViolationOperationTimeLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
