// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FarmGoldDifficulty : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FarmGoldDifficulty GetRootAsFarmGoldDifficulty(ByteBuffer _bb) { return GetRootAsFarmGoldDifficulty(_bb, new FarmGoldDifficulty()); }
  public static FarmGoldDifficulty GetRootAsFarmGoldDifficulty(ByteBuffer _bb, FarmGoldDifficulty obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FarmGoldDifficulty __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Magnification { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RecommendedLevel { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.FarmGoldDifficulty> CreateFarmGoldDifficulty(FlatBufferBuilder builder,
      int id = 0,
      int magnification = 0,
      int recommended_level = 0,
      StringOffset descOffset = default(StringOffset)) {
    builder.StartTable(4);
    FarmGoldDifficulty.AddDesc(builder, descOffset);
    FarmGoldDifficulty.AddRecommendedLevel(builder, recommended_level);
    FarmGoldDifficulty.AddMagnification(builder, magnification);
    FarmGoldDifficulty.AddId(builder, id);
    return FarmGoldDifficulty.EndFarmGoldDifficulty(builder);
  }

  public static void StartFarmGoldDifficulty(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddMagnification(FlatBufferBuilder builder, int magnification) { builder.AddInt(1, magnification, 0); }
  public static void AddRecommendedLevel(FlatBufferBuilder builder, int recommendedLevel) { builder.AddInt(2, recommendedLevel, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(3, descOffset.Value, 0); }
  public static Offset<WWParser.Defs.FarmGoldDifficulty> EndFarmGoldDifficulty(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FarmGoldDifficulty>(o);
  }
  public FarmGoldDifficultyT UnPack() {
    var _o = new FarmGoldDifficultyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FarmGoldDifficultyT _o) {
    _o.Id = this.Id;
    _o.Magnification = this.Magnification;
    _o.RecommendedLevel = this.RecommendedLevel;
    _o.Desc = this.Desc;
  }
  public static Offset<WWParser.Defs.FarmGoldDifficulty> Pack(FlatBufferBuilder builder, FarmGoldDifficultyT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FarmGoldDifficulty>);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    return CreateFarmGoldDifficulty(
      builder,
      _o.Id,
      _o.Magnification,
      _o.RecommendedLevel,
      _desc);
  }
}

public class FarmGoldDifficultyT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("magnification")]
  public int Magnification { get; set; }
  [Newtonsoft.Json.JsonProperty("recommended_level")]
  public int RecommendedLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }

  public FarmGoldDifficultyT() {
    this.Id = 0;
    this.Magnification = 0;
    this.RecommendedLevel = 0;
    this.Desc = null;
  }
}


static public class FarmGoldDifficultyVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Magnification*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*RecommendedLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Desc*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
