// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterAudioConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CharacterAudioConfig GetRootAsCharacterAudioConfig(ByteBuffer _bb) { return GetRootAsCharacterAudioConfig(_bb, new CharacterAudioConfig()); }
  public static CharacterAudioConfig GetRootAsCharacterAudioConfig(ByteBuffer _bb, CharacterAudioConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterAudioConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public WWParser.Defs.DicIntString? HpLost(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int HpLostLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Chest { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChestBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetChestBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetChestArray() { return __p.__vector_as_array<byte>(10); }
  public string Effort { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEffortBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetEffortBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetEffortArray() { return __p.__vector_as_array<byte>(12); }
  public string EffortLow { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEffortLowBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetEffortLowBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetEffortLowArray() { return __p.__vector_as_array<byte>(14); }
  public float EffortCd { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public WWParser.Defs.DicIntString? Rankup(int j) { int o = __p.__offset(18); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RankupLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string JoinTeam { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinTeamBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetJoinTeamBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetJoinTeamArray() { return __p.__vector_as_array<byte>(20); }
  public string FirstGet { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFirstGetBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetFirstGetBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetFirstGetArray() { return __p.__vector_as_array<byte>(22); }
  public string MutantTransform { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMutantTransformBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetMutantTransformBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetMutantTransformArray() { return __p.__vector_as_array<byte>(24); }
  public string MutantSummon { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMutantSummonBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetMutantSummonBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetMutantSummonArray() { return __p.__vector_as_array<byte>(26); }

  public static Offset<WWParser.Defs.CharacterAudioConfig> CreateCharacterAudioConfig(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset hp_lostOffset = default(VectorOffset),
      StringOffset chestOffset = default(StringOffset),
      StringOffset effortOffset = default(StringOffset),
      StringOffset effort_lowOffset = default(StringOffset),
      float effort_cd = 0.0f,
      VectorOffset rankupOffset = default(VectorOffset),
      StringOffset join_teamOffset = default(StringOffset),
      StringOffset first_getOffset = default(StringOffset),
      StringOffset mutant_transformOffset = default(StringOffset),
      StringOffset mutant_summonOffset = default(StringOffset)) {
    builder.StartTable(12);
    CharacterAudioConfig.AddMutantSummon(builder, mutant_summonOffset);
    CharacterAudioConfig.AddMutantTransform(builder, mutant_transformOffset);
    CharacterAudioConfig.AddFirstGet(builder, first_getOffset);
    CharacterAudioConfig.AddJoinTeam(builder, join_teamOffset);
    CharacterAudioConfig.AddRankup(builder, rankupOffset);
    CharacterAudioConfig.AddEffortCd(builder, effort_cd);
    CharacterAudioConfig.AddEffortLow(builder, effort_lowOffset);
    CharacterAudioConfig.AddEffort(builder, effortOffset);
    CharacterAudioConfig.AddChest(builder, chestOffset);
    CharacterAudioConfig.AddHpLost(builder, hp_lostOffset);
    CharacterAudioConfig.AddName(builder, nameOffset);
    CharacterAudioConfig.AddId(builder, id);
    return CharacterAudioConfig.EndCharacterAudioConfig(builder);
  }

  public static void StartCharacterAudioConfig(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddHpLost(FlatBufferBuilder builder, VectorOffset hpLostOffset) { builder.AddOffset(2, hpLostOffset.Value, 0); }
  public static VectorOffset CreateHpLostVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateHpLostVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateHpLostVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateHpLostVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartHpLostVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChest(FlatBufferBuilder builder, StringOffset chestOffset) { builder.AddOffset(3, chestOffset.Value, 0); }
  public static void AddEffort(FlatBufferBuilder builder, StringOffset effortOffset) { builder.AddOffset(4, effortOffset.Value, 0); }
  public static void AddEffortLow(FlatBufferBuilder builder, StringOffset effortLowOffset) { builder.AddOffset(5, effortLowOffset.Value, 0); }
  public static void AddEffortCd(FlatBufferBuilder builder, float effortCd) { builder.AddFloat(6, effortCd, 0.0f); }
  public static void AddRankup(FlatBufferBuilder builder, VectorOffset rankupOffset) { builder.AddOffset(7, rankupOffset.Value, 0); }
  public static VectorOffset CreateRankupVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRankupVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRankupVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRankupVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRankupVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJoinTeam(FlatBufferBuilder builder, StringOffset joinTeamOffset) { builder.AddOffset(8, joinTeamOffset.Value, 0); }
  public static void AddFirstGet(FlatBufferBuilder builder, StringOffset firstGetOffset) { builder.AddOffset(9, firstGetOffset.Value, 0); }
  public static void AddMutantTransform(FlatBufferBuilder builder, StringOffset mutantTransformOffset) { builder.AddOffset(10, mutantTransformOffset.Value, 0); }
  public static void AddMutantSummon(FlatBufferBuilder builder, StringOffset mutantSummonOffset) { builder.AddOffset(11, mutantSummonOffset.Value, 0); }
  public static Offset<WWParser.Defs.CharacterAudioConfig> EndCharacterAudioConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.CharacterAudioConfig>(o);
  }
  public CharacterAudioConfigT UnPack() {
    var _o = new CharacterAudioConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CharacterAudioConfigT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.HpLost = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.HpLostLength; ++_j) {_o.HpLost.Add(this.HpLost(_j).HasValue ? this.HpLost(_j).Value.UnPack() : null);}
    _o.Chest = this.Chest;
    _o.Effort = this.Effort;
    _o.EffortLow = this.EffortLow;
    _o.EffortCd = this.EffortCd;
    _o.Rankup = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.RankupLength; ++_j) {_o.Rankup.Add(this.Rankup(_j).HasValue ? this.Rankup(_j).Value.UnPack() : null);}
    _o.JoinTeam = this.JoinTeam;
    _o.FirstGet = this.FirstGet;
    _o.MutantTransform = this.MutantTransform;
    _o.MutantSummon = this.MutantSummon;
  }
  public static Offset<WWParser.Defs.CharacterAudioConfig> Pack(FlatBufferBuilder builder, CharacterAudioConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.CharacterAudioConfig>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _hp_lost = default(VectorOffset);
    if (_o.HpLost != null) {
      var __hp_lost = new Offset<WWParser.Defs.DicIntString>[_o.HpLost.Count];
      for (var _j = 0; _j < __hp_lost.Length; ++_j) { __hp_lost[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.HpLost[_j]); }
      _hp_lost = CreateHpLostVector(builder, __hp_lost);
    }
    var _chest = _o.Chest == null ? default(StringOffset) : builder.CreateString(_o.Chest);
    var _effort = _o.Effort == null ? default(StringOffset) : builder.CreateString(_o.Effort);
    var _effort_low = _o.EffortLow == null ? default(StringOffset) : builder.CreateString(_o.EffortLow);
    var _rankup = default(VectorOffset);
    if (_o.Rankup != null) {
      var __rankup = new Offset<WWParser.Defs.DicIntString>[_o.Rankup.Count];
      for (var _j = 0; _j < __rankup.Length; ++_j) { __rankup[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.Rankup[_j]); }
      _rankup = CreateRankupVector(builder, __rankup);
    }
    var _join_team = _o.JoinTeam == null ? default(StringOffset) : builder.CreateString(_o.JoinTeam);
    var _first_get = _o.FirstGet == null ? default(StringOffset) : builder.CreateString(_o.FirstGet);
    var _mutant_transform = _o.MutantTransform == null ? default(StringOffset) : builder.CreateString(_o.MutantTransform);
    var _mutant_summon = _o.MutantSummon == null ? default(StringOffset) : builder.CreateString(_o.MutantSummon);
    return CreateCharacterAudioConfig(
      builder,
      _o.Id,
      _name,
      _hp_lost,
      _chest,
      _effort,
      _effort_low,
      _o.EffortCd,
      _rankup,
      _join_team,
      _first_get,
      _mutant_transform,
      _mutant_summon);
  }
}

public class CharacterAudioConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("hp_lost")]
  public List<WWParser.Defs.DicIntStringT> HpLost { get; set; }
  [Newtonsoft.Json.JsonProperty("chest")]
  public string Chest { get; set; }
  [Newtonsoft.Json.JsonProperty("effort")]
  public string Effort { get; set; }
  [Newtonsoft.Json.JsonProperty("effort_low")]
  public string EffortLow { get; set; }
  [Newtonsoft.Json.JsonProperty("effort_cd")]
  public float EffortCd { get; set; }
  [Newtonsoft.Json.JsonProperty("rankup")]
  public List<WWParser.Defs.DicIntStringT> Rankup { get; set; }
  [Newtonsoft.Json.JsonProperty("join_team")]
  public string JoinTeam { get; set; }
  [Newtonsoft.Json.JsonProperty("first_get")]
  public string FirstGet { get; set; }
  [Newtonsoft.Json.JsonProperty("mutant_transform")]
  public string MutantTransform { get; set; }
  [Newtonsoft.Json.JsonProperty("mutant_summon")]
  public string MutantSummon { get; set; }

  public CharacterAudioConfigT() {
    this.Id = 0;
    this.Name = null;
    this.HpLost = null;
    this.Chest = null;
    this.Effort = null;
    this.EffortLow = null;
    this.EffortCd = 0.0f;
    this.Rankup = null;
    this.JoinTeam = null;
    this.FirstGet = null;
    this.MutantTransform = null;
    this.MutantSummon = null;
  }
}


static public class CharacterAudioConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*HpLost*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyString(tablePos, 10 /*Chest*/, false)
      && verifier.VerifyString(tablePos, 12 /*Effort*/, false)
      && verifier.VerifyString(tablePos, 14 /*EffortLow*/, false)
      && verifier.VerifyField(tablePos, 16 /*EffortCd*/, 4 /*float*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 18 /*Rankup*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyString(tablePos, 20 /*JoinTeam*/, false)
      && verifier.VerifyString(tablePos, 22 /*FirstGet*/, false)
      && verifier.VerifyString(tablePos, 24 /*MutantTransform*/, false)
      && verifier.VerifyString(tablePos, 26 /*MutantSummon*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
