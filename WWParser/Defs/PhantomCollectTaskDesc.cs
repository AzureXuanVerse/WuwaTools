// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhantomCollectTaskDesc : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhantomCollectTaskDesc GetRootAsPhantomCollectTaskDesc(ByteBuffer _bb) { return GetRootAsPhantomCollectTaskDesc(_bb, new PhantomCollectTaskDesc()); }
  public static PhantomCollectTaskDesc GetRootAsPhantomCollectTaskDesc(ByteBuffer _bb, PhantomCollectTaskDesc obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhantomCollectTaskDesc __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(8); }
  public WWParser.Defs.DicIntString? JumpTo(int j) { int o = __p.__offset(10); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int JumpToLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.PhantomCollectTaskDesc> CreatePhantomCollectTaskDesc(FlatBufferBuilder builder,
      int id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset descOffset = default(StringOffset),
      VectorOffset jump_toOffset = default(VectorOffset)) {
    builder.StartTable(4);
    PhantomCollectTaskDesc.AddJumpTo(builder, jump_toOffset);
    PhantomCollectTaskDesc.AddDesc(builder, descOffset);
    PhantomCollectTaskDesc.AddTitle(builder, titleOffset);
    PhantomCollectTaskDesc.AddId(builder, id);
    return PhantomCollectTaskDesc.EndPhantomCollectTaskDesc(builder);
  }

  public static void StartPhantomCollectTaskDesc(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(1, titleOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(2, descOffset.Value, 0); }
  public static void AddJumpTo(FlatBufferBuilder builder, VectorOffset jumpToOffset) { builder.AddOffset(3, jumpToOffset.Value, 0); }
  public static VectorOffset CreateJumpToVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateJumpToVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateJumpToVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateJumpToVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartJumpToVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.PhantomCollectTaskDesc> EndPhantomCollectTaskDesc(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhantomCollectTaskDesc>(o);
  }
  public PhantomCollectTaskDescT UnPack() {
    var _o = new PhantomCollectTaskDescT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhantomCollectTaskDescT _o) {
    _o.Id = this.Id;
    _o.Title = this.Title;
    _o.Desc = this.Desc;
    _o.JumpTo = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.JumpToLength; ++_j) {_o.JumpTo.Add(this.JumpTo(_j).HasValue ? this.JumpTo(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.PhantomCollectTaskDesc> Pack(FlatBufferBuilder builder, PhantomCollectTaskDescT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhantomCollectTaskDesc>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _jump_to = default(VectorOffset);
    if (_o.JumpTo != null) {
      var __jump_to = new Offset<WWParser.Defs.DicIntString>[_o.JumpTo.Count];
      for (var _j = 0; _j < __jump_to.Length; ++_j) { __jump_to[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.JumpTo[_j]); }
      _jump_to = CreateJumpToVector(builder, __jump_to);
    }
    return CreatePhantomCollectTaskDesc(
      builder,
      _o.Id,
      _title,
      _desc,
      _jump_to);
  }
}

public class PhantomCollectTaskDescT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_to")]
  public List<WWParser.Defs.DicIntStringT> JumpTo { get; set; }

  public PhantomCollectTaskDescT() {
    this.Id = 0;
    this.Title = null;
    this.Desc = null;
    this.JumpTo = null;
  }
}


static public class PhantomCollectTaskDescVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Title*/, false)
      && verifier.VerifyString(tablePos, 8 /*Desc*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 10 /*JumpTo*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
