// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhotographHandBook : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhotographHandBook GetRootAsPhotographHandBook(ByteBuffer _bb) { return GetRootAsPhotographHandBook(_bb, new PhotographHandBook()); }
  public static PhotographHandBook GetRootAsPhotographHandBook(ByteBuffer _bb, PhotographHandBook obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhotographHandBook __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public string MaleTexture { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMaleTextureBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetMaleTextureBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetMaleTextureArray() { return __p.__vector_as_array<byte>(10); }
  public string FemaleTexture { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFemaleTextureBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetFemaleTextureBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetFemaleTextureArray() { return __p.__vector_as_array<byte>(12); }
  public string Descrtption { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescrtptionBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetDescrtptionBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDescrtptionArray() { return __p.__vector_as_array<byte>(14); }
  public string AreaIcon { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAreaIconBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetAreaIconBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetAreaIconArray() { return __p.__vector_as_array<byte>(16); }
  public string AreaNumber { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAreaNumberBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetAreaNumberBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetAreaNumberArray() { return __p.__vector_as_array<byte>(18); }
  public string RoleName { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleNameBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetRoleNameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetRoleNameArray() { return __p.__vector_as_array<byte>(20); }
  public int QuestId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowQuestList(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ShowQuestListLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetShowQuestListBytes() { return __p.__vector_as_span<int>(24, 4); }
#else
  public ArraySegment<byte>? GetShowQuestListBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public int[] GetShowQuestListArray() { return __p.__vector_as_array<int>(24); }

  public static Offset<WWParser.Defs.PhotographHandBook> CreatePhotographHandBook(FlatBufferBuilder builder,
      int id = 0,
      int type = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset male_textureOffset = default(StringOffset),
      StringOffset female_textureOffset = default(StringOffset),
      StringOffset descrtptionOffset = default(StringOffset),
      StringOffset area_iconOffset = default(StringOffset),
      StringOffset area_numberOffset = default(StringOffset),
      StringOffset role_nameOffset = default(StringOffset),
      int quest_id = 0,
      VectorOffset show_quest_listOffset = default(VectorOffset)) {
    builder.StartTable(11);
    PhotographHandBook.AddShowQuestList(builder, show_quest_listOffset);
    PhotographHandBook.AddQuestId(builder, quest_id);
    PhotographHandBook.AddRoleName(builder, role_nameOffset);
    PhotographHandBook.AddAreaNumber(builder, area_numberOffset);
    PhotographHandBook.AddAreaIcon(builder, area_iconOffset);
    PhotographHandBook.AddDescrtption(builder, descrtptionOffset);
    PhotographHandBook.AddFemaleTexture(builder, female_textureOffset);
    PhotographHandBook.AddMaleTexture(builder, male_textureOffset);
    PhotographHandBook.AddName(builder, nameOffset);
    PhotographHandBook.AddType(builder, type);
    PhotographHandBook.AddId(builder, id);
    return PhotographHandBook.EndPhotographHandBook(builder);
  }

  public static void StartPhotographHandBook(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(1, type, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddMaleTexture(FlatBufferBuilder builder, StringOffset maleTextureOffset) { builder.AddOffset(3, maleTextureOffset.Value, 0); }
  public static void AddFemaleTexture(FlatBufferBuilder builder, StringOffset femaleTextureOffset) { builder.AddOffset(4, femaleTextureOffset.Value, 0); }
  public static void AddDescrtption(FlatBufferBuilder builder, StringOffset descrtptionOffset) { builder.AddOffset(5, descrtptionOffset.Value, 0); }
  public static void AddAreaIcon(FlatBufferBuilder builder, StringOffset areaIconOffset) { builder.AddOffset(6, areaIconOffset.Value, 0); }
  public static void AddAreaNumber(FlatBufferBuilder builder, StringOffset areaNumberOffset) { builder.AddOffset(7, areaNumberOffset.Value, 0); }
  public static void AddRoleName(FlatBufferBuilder builder, StringOffset roleNameOffset) { builder.AddOffset(8, roleNameOffset.Value, 0); }
  public static void AddQuestId(FlatBufferBuilder builder, int questId) { builder.AddInt(9, questId, 0); }
  public static void AddShowQuestList(FlatBufferBuilder builder, VectorOffset showQuestListOffset) { builder.AddOffset(10, showQuestListOffset.Value, 0); }
  public static VectorOffset CreateShowQuestListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShowQuestListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowQuestListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowQuestListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartShowQuestListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.PhotographHandBook> EndPhotographHandBook(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhotographHandBook>(o);
  }
  public PhotographHandBookT UnPack() {
    var _o = new PhotographHandBookT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhotographHandBookT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.Name = this.Name;
    _o.MaleTexture = this.MaleTexture;
    _o.FemaleTexture = this.FemaleTexture;
    _o.Descrtption = this.Descrtption;
    _o.AreaIcon = this.AreaIcon;
    _o.AreaNumber = this.AreaNumber;
    _o.RoleName = this.RoleName;
    _o.QuestId = this.QuestId;
    _o.ShowQuestList = new List<int>();
    for (var _j = 0; _j < this.ShowQuestListLength; ++_j) {_o.ShowQuestList.Add(this.ShowQuestList(_j));}
  }
  public static Offset<WWParser.Defs.PhotographHandBook> Pack(FlatBufferBuilder builder, PhotographHandBookT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhotographHandBook>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _male_texture = _o.MaleTexture == null ? default(StringOffset) : builder.CreateString(_o.MaleTexture);
    var _female_texture = _o.FemaleTexture == null ? default(StringOffset) : builder.CreateString(_o.FemaleTexture);
    var _descrtption = _o.Descrtption == null ? default(StringOffset) : builder.CreateString(_o.Descrtption);
    var _area_icon = _o.AreaIcon == null ? default(StringOffset) : builder.CreateString(_o.AreaIcon);
    var _area_number = _o.AreaNumber == null ? default(StringOffset) : builder.CreateString(_o.AreaNumber);
    var _role_name = _o.RoleName == null ? default(StringOffset) : builder.CreateString(_o.RoleName);
    var _show_quest_list = default(VectorOffset);
    if (_o.ShowQuestList != null) {
      var __show_quest_list = _o.ShowQuestList.ToArray();
      _show_quest_list = CreateShowQuestListVector(builder, __show_quest_list);
    }
    return CreatePhotographHandBook(
      builder,
      _o.Id,
      _o.Type,
      _name,
      _male_texture,
      _female_texture,
      _descrtption,
      _area_icon,
      _area_number,
      _role_name,
      _o.QuestId,
      _show_quest_list);
  }
}

public class PhotographHandBookT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("male_texture")]
  public string MaleTexture { get; set; }
  [Newtonsoft.Json.JsonProperty("female_texture")]
  public string FemaleTexture { get; set; }
  [Newtonsoft.Json.JsonProperty("descrtption")]
  public string Descrtption { get; set; }
  [Newtonsoft.Json.JsonProperty("area_icon")]
  public string AreaIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("area_number")]
  public string AreaNumber { get; set; }
  [Newtonsoft.Json.JsonProperty("role_name")]
  public string RoleName { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_id")]
  public int QuestId { get; set; }
  [Newtonsoft.Json.JsonProperty("show_quest_list")]
  public List<int> ShowQuestList { get; set; }

  public PhotographHandBookT() {
    this.Id = 0;
    this.Type = 0;
    this.Name = null;
    this.MaleTexture = null;
    this.FemaleTexture = null;
    this.Descrtption = null;
    this.AreaIcon = null;
    this.AreaNumber = null;
    this.RoleName = null;
    this.QuestId = 0;
    this.ShowQuestList = null;
  }
}


static public class PhotographHandBookVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyString(tablePos, 10 /*MaleTexture*/, false)
      && verifier.VerifyString(tablePos, 12 /*FemaleTexture*/, false)
      && verifier.VerifyString(tablePos, 14 /*Descrtption*/, false)
      && verifier.VerifyString(tablePos, 16 /*AreaIcon*/, false)
      && verifier.VerifyString(tablePos, 18 /*AreaNumber*/, false)
      && verifier.VerifyString(tablePos, 20 /*RoleName*/, false)
      && verifier.VerifyField(tablePos, 22 /*QuestId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 24 /*ShowQuestList*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
