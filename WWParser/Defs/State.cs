// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct State : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static State GetRootAsState(ByteBuffer _bb) { return GetRootAsState(_bb, new State()); }
  public static State GetRootAsState(ByteBuffer _bb, State obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public State __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int StateId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string StateName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStateNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStateNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStateNameArray() { return __p.__vector_as_array<byte>(6); }
  public string CountryId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCountryIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetCountryIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCountryIdArray() { return __p.__vector_as_array<byte>(8); }
  public string AudioName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAudioNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAudioNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAudioNameArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.State> CreateState(FlatBufferBuilder builder,
      int state_id = 0,
      StringOffset state_nameOffset = default(StringOffset),
      StringOffset country_idOffset = default(StringOffset),
      StringOffset audio_nameOffset = default(StringOffset)) {
    builder.StartTable(4);
    State.AddAudioName(builder, audio_nameOffset);
    State.AddCountryId(builder, country_idOffset);
    State.AddStateName(builder, state_nameOffset);
    State.AddStateId(builder, state_id);
    return State.EndState(builder);
  }

  public static void StartState(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddStateId(FlatBufferBuilder builder, int stateId) { builder.AddInt(0, stateId, 0); }
  public static void AddStateName(FlatBufferBuilder builder, StringOffset stateNameOffset) { builder.AddOffset(1, stateNameOffset.Value, 0); }
  public static void AddCountryId(FlatBufferBuilder builder, StringOffset countryIdOffset) { builder.AddOffset(2, countryIdOffset.Value, 0); }
  public static void AddAudioName(FlatBufferBuilder builder, StringOffset audioNameOffset) { builder.AddOffset(3, audioNameOffset.Value, 0); }
  public static Offset<WWParser.Defs.State> EndState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.State>(o);
  }
  public StateT UnPack() {
    var _o = new StateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StateT _o) {
    _o.StateId = this.StateId;
    _o.StateName = this.StateName;
    _o.CountryId = this.CountryId;
    _o.AudioName = this.AudioName;
  }
  public static Offset<WWParser.Defs.State> Pack(FlatBufferBuilder builder, StateT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.State>);
    var _state_name = _o.StateName == null ? default(StringOffset) : builder.CreateString(_o.StateName);
    var _country_id = _o.CountryId == null ? default(StringOffset) : builder.CreateString(_o.CountryId);
    var _audio_name = _o.AudioName == null ? default(StringOffset) : builder.CreateString(_o.AudioName);
    return CreateState(
      builder,
      _o.StateId,
      _state_name,
      _country_id,
      _audio_name);
  }
}

public class StateT
{
  [Newtonsoft.Json.JsonProperty("state_id")]
  public int StateId { get; set; }
  [Newtonsoft.Json.JsonProperty("state_name")]
  public string StateName { get; set; }
  [Newtonsoft.Json.JsonProperty("country_id")]
  public string CountryId { get; set; }
  [Newtonsoft.Json.JsonProperty("audio_name")]
  public string AudioName { get; set; }

  public StateT() {
    this.StateId = 0;
    this.StateName = null;
    this.CountryId = null;
    this.AudioName = null;
  }
}


static public class StateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*StateId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*StateName*/, false)
      && verifier.VerifyString(tablePos, 8 /*CountryId*/, false)
      && verifier.VerifyString(tablePos, 10 /*AudioName*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
