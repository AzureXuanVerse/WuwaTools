// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SlashBuffToItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SlashBuffToItem GetRootAsSlashBuffToItem(ByteBuffer _bb) { return GetRootAsSlashBuffToItem(_bb, new SlashBuffToItem()); }
  public static SlashBuffToItem GetRootAsSlashBuffToItem(ByteBuffer _bb, SlashBuffToItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SlashBuffToItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Season { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Tips { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Unlimited { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long BuffIds(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int BuffIdsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetBuffIdsBytes() { return __p.__vector_as_span<long>(14, 8); }
#else
  public ArraySegment<byte>? GetBuffIdsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public long[] GetBuffIdsArray() { return __p.__vector_as_array<long>(14); }

  public static Offset<WWParser.Defs.SlashBuffToItem> CreateSlashBuffToItem(FlatBufferBuilder builder,
      int id = 0,
      int season = 0,
      int item_id = 0,
      int tips = 0,
      bool unlimited = false,
      VectorOffset buff_idsOffset = default(VectorOffset)) {
    builder.StartTable(6);
    SlashBuffToItem.AddBuffIds(builder, buff_idsOffset);
    SlashBuffToItem.AddTips(builder, tips);
    SlashBuffToItem.AddItemId(builder, item_id);
    SlashBuffToItem.AddSeason(builder, season);
    SlashBuffToItem.AddId(builder, id);
    SlashBuffToItem.AddUnlimited(builder, unlimited);
    return SlashBuffToItem.EndSlashBuffToItem(builder);
  }

  public static void StartSlashBuffToItem(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddSeason(FlatBufferBuilder builder, int season) { builder.AddInt(1, season, 0); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(2, itemId, 0); }
  public static void AddTips(FlatBufferBuilder builder, int tips) { builder.AddInt(3, tips, 0); }
  public static void AddUnlimited(FlatBufferBuilder builder, bool unlimited) { builder.AddBool(4, unlimited, false); }
  public static void AddBuffIds(FlatBufferBuilder builder, VectorOffset buffIdsOffset) { builder.AddOffset(5, buffIdsOffset.Value, 0); }
  public static VectorOffset CreateBuffIdsVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBuffIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<WWParser.Defs.SlashBuffToItem> EndSlashBuffToItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SlashBuffToItem>(o);
  }
  public SlashBuffToItemT UnPack() {
    var _o = new SlashBuffToItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SlashBuffToItemT _o) {
    _o.Id = this.Id;
    _o.Season = this.Season;
    _o.ItemId = this.ItemId;
    _o.Tips = this.Tips;
    _o.Unlimited = this.Unlimited;
    _o.BuffIds = new List<long>();
    for (var _j = 0; _j < this.BuffIdsLength; ++_j) {_o.BuffIds.Add(this.BuffIds(_j));}
  }
  public static Offset<WWParser.Defs.SlashBuffToItem> Pack(FlatBufferBuilder builder, SlashBuffToItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SlashBuffToItem>);
    var _buff_ids = default(VectorOffset);
    if (_o.BuffIds != null) {
      var __buff_ids = _o.BuffIds.ToArray();
      _buff_ids = CreateBuffIdsVector(builder, __buff_ids);
    }
    return CreateSlashBuffToItem(
      builder,
      _o.Id,
      _o.Season,
      _o.ItemId,
      _o.Tips,
      _o.Unlimited,
      _buff_ids);
  }
}

public class SlashBuffToItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("season")]
  public int Season { get; set; }
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("tips")]
  public int Tips { get; set; }
  [Newtonsoft.Json.JsonProperty("unlimited")]
  public bool Unlimited { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_ids")]
  public List<long> BuffIds { get; set; }

  public SlashBuffToItemT() {
    this.Id = 0;
    this.Season = 0;
    this.ItemId = 0;
    this.Tips = 0;
    this.Unlimited = false;
    this.BuffIds = null;
  }
}


static public class SlashBuffToItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Season*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Tips*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Unlimited*/, 1 /*bool*/, 1, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*BuffIds*/, 8 /*long*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
