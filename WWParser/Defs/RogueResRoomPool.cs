// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResRoomPool : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResRoomPool GetRootAsRogueResRoomPool(ByteBuffer _bb) { return GetRootAsRogueResRoomPool(_bb, new RogueResRoomPool()); }
  public static RogueResRoomPool GetRootAsRogueResRoomPool(ByteBuffer _bb, RogueResRoomPool obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResRoomPool __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BehaviorTree { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string RoomsMusicState { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoomsMusicStateBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetRoomsMusicStateBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetRoomsMusicStateArray() { return __p.__vector_as_array<byte>(8); }
  public string MonsterDesc(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int MonsterDescLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string MonsterDescParams(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int MonsterDescParamsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string MonsterFig(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int MonsterFigLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string EnvDesc(int j) { int o = __p.__offset(16); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EnvDescLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string EnvFig(int j) { int o = __p.__offset(18); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EnvFigLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string EnvDescParams(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EnvDescParamsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.RogueResRoomPool> CreateRogueResRoomPool(FlatBufferBuilder builder,
      int id = 0,
      int behavior_tree = 0,
      StringOffset rooms_music_stateOffset = default(StringOffset),
      VectorOffset monster_descOffset = default(VectorOffset),
      VectorOffset monster_desc_paramsOffset = default(VectorOffset),
      VectorOffset monster_figOffset = default(VectorOffset),
      VectorOffset env_descOffset = default(VectorOffset),
      VectorOffset env_figOffset = default(VectorOffset),
      VectorOffset env_desc_paramsOffset = default(VectorOffset)) {
    builder.StartTable(9);
    RogueResRoomPool.AddEnvDescParams(builder, env_desc_paramsOffset);
    RogueResRoomPool.AddEnvFig(builder, env_figOffset);
    RogueResRoomPool.AddEnvDesc(builder, env_descOffset);
    RogueResRoomPool.AddMonsterFig(builder, monster_figOffset);
    RogueResRoomPool.AddMonsterDescParams(builder, monster_desc_paramsOffset);
    RogueResRoomPool.AddMonsterDesc(builder, monster_descOffset);
    RogueResRoomPool.AddRoomsMusicState(builder, rooms_music_stateOffset);
    RogueResRoomPool.AddBehaviorTree(builder, behavior_tree);
    RogueResRoomPool.AddId(builder, id);
    return RogueResRoomPool.EndRogueResRoomPool(builder);
  }

  public static void StartRogueResRoomPool(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBehaviorTree(FlatBufferBuilder builder, int behaviorTree) { builder.AddInt(1, behaviorTree, 0); }
  public static void AddRoomsMusicState(FlatBufferBuilder builder, StringOffset roomsMusicStateOffset) { builder.AddOffset(2, roomsMusicStateOffset.Value, 0); }
  public static void AddMonsterDesc(FlatBufferBuilder builder, VectorOffset monsterDescOffset) { builder.AddOffset(3, monsterDescOffset.Value, 0); }
  public static VectorOffset CreateMonsterDescVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMonsterDescVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterDescParams(FlatBufferBuilder builder, VectorOffset monsterDescParamsOffset) { builder.AddOffset(4, monsterDescParamsOffset.Value, 0); }
  public static VectorOffset CreateMonsterDescParamsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescParamsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescParamsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterDescParamsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMonsterDescParamsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterFig(FlatBufferBuilder builder, VectorOffset monsterFigOffset) { builder.AddOffset(5, monsterFigOffset.Value, 0); }
  public static VectorOffset CreateMonsterFigVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMonsterFigVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterFigVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMonsterFigVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMonsterFigVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEnvDesc(FlatBufferBuilder builder, VectorOffset envDescOffset) { builder.AddOffset(6, envDescOffset.Value, 0); }
  public static VectorOffset CreateEnvDescVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEnvDescVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEnvFig(FlatBufferBuilder builder, VectorOffset envFigOffset) { builder.AddOffset(7, envFigOffset.Value, 0); }
  public static VectorOffset CreateEnvFigVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEnvFigVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvFigVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvFigVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEnvFigVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEnvDescParams(FlatBufferBuilder builder, VectorOffset envDescParamsOffset) { builder.AddOffset(8, envDescParamsOffset.Value, 0); }
  public static VectorOffset CreateEnvDescParamsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescParamsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescParamsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEnvDescParamsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEnvDescParamsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.RogueResRoomPool> EndRogueResRoomPool(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResRoomPool>(o);
  }
  public RogueResRoomPoolT UnPack() {
    var _o = new RogueResRoomPoolT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResRoomPoolT _o) {
    _o.Id = this.Id;
    _o.BehaviorTree = this.BehaviorTree;
    _o.RoomsMusicState = this.RoomsMusicState;
    _o.MonsterDesc = new List<string>();
    for (var _j = 0; _j < this.MonsterDescLength; ++_j) {_o.MonsterDesc.Add(this.MonsterDesc(_j));}
    _o.MonsterDescParams = new List<string>();
    for (var _j = 0; _j < this.MonsterDescParamsLength; ++_j) {_o.MonsterDescParams.Add(this.MonsterDescParams(_j));}
    _o.MonsterFig = new List<string>();
    for (var _j = 0; _j < this.MonsterFigLength; ++_j) {_o.MonsterFig.Add(this.MonsterFig(_j));}
    _o.EnvDesc = new List<string>();
    for (var _j = 0; _j < this.EnvDescLength; ++_j) {_o.EnvDesc.Add(this.EnvDesc(_j));}
    _o.EnvFig = new List<string>();
    for (var _j = 0; _j < this.EnvFigLength; ++_j) {_o.EnvFig.Add(this.EnvFig(_j));}
    _o.EnvDescParams = new List<string>();
    for (var _j = 0; _j < this.EnvDescParamsLength; ++_j) {_o.EnvDescParams.Add(this.EnvDescParams(_j));}
  }
  public static Offset<WWParser.Defs.RogueResRoomPool> Pack(FlatBufferBuilder builder, RogueResRoomPoolT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResRoomPool>);
    var _rooms_music_state = _o.RoomsMusicState == null ? default(StringOffset) : builder.CreateString(_o.RoomsMusicState);
    var _monster_desc = default(VectorOffset);
    if (_o.MonsterDesc != null) {
      var __monster_desc = new StringOffset[_o.MonsterDesc.Count];
      for (var _j = 0; _j < __monster_desc.Length; ++_j) { __monster_desc[_j] = builder.CreateString(_o.MonsterDesc[_j]); }
      _monster_desc = CreateMonsterDescVector(builder, __monster_desc);
    }
    var _monster_desc_params = default(VectorOffset);
    if (_o.MonsterDescParams != null) {
      var __monster_desc_params = new StringOffset[_o.MonsterDescParams.Count];
      for (var _j = 0; _j < __monster_desc_params.Length; ++_j) { __monster_desc_params[_j] = builder.CreateString(_o.MonsterDescParams[_j]); }
      _monster_desc_params = CreateMonsterDescParamsVector(builder, __monster_desc_params);
    }
    var _monster_fig = default(VectorOffset);
    if (_o.MonsterFig != null) {
      var __monster_fig = new StringOffset[_o.MonsterFig.Count];
      for (var _j = 0; _j < __monster_fig.Length; ++_j) { __monster_fig[_j] = builder.CreateString(_o.MonsterFig[_j]); }
      _monster_fig = CreateMonsterFigVector(builder, __monster_fig);
    }
    var _env_desc = default(VectorOffset);
    if (_o.EnvDesc != null) {
      var __env_desc = new StringOffset[_o.EnvDesc.Count];
      for (var _j = 0; _j < __env_desc.Length; ++_j) { __env_desc[_j] = builder.CreateString(_o.EnvDesc[_j]); }
      _env_desc = CreateEnvDescVector(builder, __env_desc);
    }
    var _env_fig = default(VectorOffset);
    if (_o.EnvFig != null) {
      var __env_fig = new StringOffset[_o.EnvFig.Count];
      for (var _j = 0; _j < __env_fig.Length; ++_j) { __env_fig[_j] = builder.CreateString(_o.EnvFig[_j]); }
      _env_fig = CreateEnvFigVector(builder, __env_fig);
    }
    var _env_desc_params = default(VectorOffset);
    if (_o.EnvDescParams != null) {
      var __env_desc_params = new StringOffset[_o.EnvDescParams.Count];
      for (var _j = 0; _j < __env_desc_params.Length; ++_j) { __env_desc_params[_j] = builder.CreateString(_o.EnvDescParams[_j]); }
      _env_desc_params = CreateEnvDescParamsVector(builder, __env_desc_params);
    }
    return CreateRogueResRoomPool(
      builder,
      _o.Id,
      _o.BehaviorTree,
      _rooms_music_state,
      _monster_desc,
      _monster_desc_params,
      _monster_fig,
      _env_desc,
      _env_fig,
      _env_desc_params);
  }
}

public class RogueResRoomPoolT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("behavior_tree")]
  public int BehaviorTree { get; set; }
  [Newtonsoft.Json.JsonProperty("rooms_music_state")]
  public string RoomsMusicState { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_desc")]
  public List<string> MonsterDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_desc_params")]
  public List<string> MonsterDescParams { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_fig")]
  public List<string> MonsterFig { get; set; }
  [Newtonsoft.Json.JsonProperty("env_desc")]
  public List<string> EnvDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("env_fig")]
  public List<string> EnvFig { get; set; }
  [Newtonsoft.Json.JsonProperty("env_desc_params")]
  public List<string> EnvDescParams { get; set; }

  public RogueResRoomPoolT() {
    this.Id = 0;
    this.BehaviorTree = 0;
    this.RoomsMusicState = null;
    this.MonsterDesc = null;
    this.MonsterDescParams = null;
    this.MonsterFig = null;
    this.EnvDesc = null;
    this.EnvFig = null;
    this.EnvDescParams = null;
  }
}


static public class RogueResRoomPoolVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*BehaviorTree*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*RoomsMusicState*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 10 /*MonsterDesc*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 12 /*MonsterDescParams*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 14 /*MonsterFig*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 16 /*EnvDesc*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 18 /*EnvFig*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 20 /*EnvDescParams*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
