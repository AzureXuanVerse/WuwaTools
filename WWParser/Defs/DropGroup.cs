// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DropGroup : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DropGroup GetRootAsDropGroup(ByteBuffer _bb) { return GetRootAsDropGroup(_bb, new DropGroup()); }
  public static DropGroup GetRootAsDropGroup(ByteBuffer _bb, DropGroup obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DropGroup __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UnitId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int GroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MinNum { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxNum { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Interval { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropShowPlan { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }

  public static Offset<WWParser.Defs.DropGroup> CreateDropGroup(FlatBufferBuilder builder,
      int unit_id = 0,
      int group_id = 0,
      int min_num = 0,
      int max_num = 0,
      int interval = 0,
      int drop_show_plan = 1) {
    builder.StartTable(6);
    DropGroup.AddDropShowPlan(builder, drop_show_plan);
    DropGroup.AddInterval(builder, interval);
    DropGroup.AddMaxNum(builder, max_num);
    DropGroup.AddMinNum(builder, min_num);
    DropGroup.AddGroupId(builder, group_id);
    DropGroup.AddUnitId(builder, unit_id);
    return DropGroup.EndDropGroup(builder);
  }

  public static void StartDropGroup(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddUnitId(FlatBufferBuilder builder, int unitId) { builder.AddInt(0, unitId, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, int groupId) { builder.AddInt(1, groupId, 0); }
  public static void AddMinNum(FlatBufferBuilder builder, int minNum) { builder.AddInt(2, minNum, 0); }
  public static void AddMaxNum(FlatBufferBuilder builder, int maxNum) { builder.AddInt(3, maxNum, 0); }
  public static void AddInterval(FlatBufferBuilder builder, int interval) { builder.AddInt(4, interval, 0); }
  public static void AddDropShowPlan(FlatBufferBuilder builder, int dropShowPlan) { builder.AddInt(5, dropShowPlan, 1); }
  public static Offset<WWParser.Defs.DropGroup> EndDropGroup(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DropGroup>(o);
  }
  public DropGroupT UnPack() {
    var _o = new DropGroupT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DropGroupT _o) {
    _o.UnitId = this.UnitId;
    _o.GroupId = this.GroupId;
    _o.MinNum = this.MinNum;
    _o.MaxNum = this.MaxNum;
    _o.Interval = this.Interval;
    _o.DropShowPlan = this.DropShowPlan;
  }
  public static Offset<WWParser.Defs.DropGroup> Pack(FlatBufferBuilder builder, DropGroupT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DropGroup>);
    return CreateDropGroup(
      builder,
      _o.UnitId,
      _o.GroupId,
      _o.MinNum,
      _o.MaxNum,
      _o.Interval,
      _o.DropShowPlan);
  }
}

public class DropGroupT
{
  [Newtonsoft.Json.JsonProperty("unit_id")]
  public int UnitId { get; set; }
  [Newtonsoft.Json.JsonProperty("group_id")]
  public int GroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("min_num")]
  public int MinNum { get; set; }
  [Newtonsoft.Json.JsonProperty("max_num")]
  public int MaxNum { get; set; }
  [Newtonsoft.Json.JsonProperty("interval")]
  public int Interval { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_show_plan")]
  public int DropShowPlan { get; set; }

  public DropGroupT() {
    this.UnitId = 0;
    this.GroupId = 0;
    this.MinNum = 0;
    this.MaxNum = 0;
    this.Interval = 0;
    this.DropShowPlan = 1;
  }
}


static public class DropGroupVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*UnitId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*GroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*MinNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*MaxNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Interval*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*DropShowPlan*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
