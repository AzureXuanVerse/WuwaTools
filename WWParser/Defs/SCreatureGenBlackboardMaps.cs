// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SCreatureGenBlackboardMaps : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SCreatureGenBlackboardMaps GetRootAsSCreatureGenBlackboardMaps(ByteBuffer _bb) { return GetRootAsSCreatureGenBlackboardMaps(_bb, new SCreatureGenBlackboardMaps()); }
  public static SCreatureGenBlackboardMaps GetRootAsSCreatureGenBlackboardMaps(ByteBuffer _bb, SCreatureGenBlackboardMaps obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SCreatureGenBlackboardMaps __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public WWParser.Defs.DicStringString? MapString(int j) { int o = __p.__offset(4); return o != 0 ? (WWParser.Defs.DicStringString?)(new WWParser.Defs.DicStringString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MapStringLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicStringInt? MapInt(int j) { int o = __p.__offset(6); return o != 0 ? (WWParser.Defs.DicStringInt?)(new WWParser.Defs.DicStringInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MapIntLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicStringBool? MapBool(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicStringBool?)(new WWParser.Defs.DicStringBool()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MapBoolLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.SCreatureGenBlackboardMaps> CreateSCreatureGenBlackboardMaps(FlatBufferBuilder builder,
      VectorOffset map_stringOffset = default(VectorOffset),
      VectorOffset map_intOffset = default(VectorOffset),
      VectorOffset map_boolOffset = default(VectorOffset)) {
    builder.StartTable(3);
    SCreatureGenBlackboardMaps.AddMapBool(builder, map_boolOffset);
    SCreatureGenBlackboardMaps.AddMapInt(builder, map_intOffset);
    SCreatureGenBlackboardMaps.AddMapString(builder, map_stringOffset);
    return SCreatureGenBlackboardMaps.EndSCreatureGenBlackboardMaps(builder);
  }

  public static void StartSCreatureGenBlackboardMaps(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMapString(FlatBufferBuilder builder, VectorOffset mapStringOffset) { builder.AddOffset(0, mapStringOffset.Value, 0); }
  public static VectorOffset CreateMapStringVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMapStringVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapStringVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapStringVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMapStringVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMapInt(FlatBufferBuilder builder, VectorOffset mapIntOffset) { builder.AddOffset(1, mapIntOffset.Value, 0); }
  public static VectorOffset CreateMapIntVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMapIntVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapIntVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapIntVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMapIntVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMapBool(FlatBufferBuilder builder, VectorOffset mapBoolOffset) { builder.AddOffset(2, mapBoolOffset.Value, 0); }
  public static VectorOffset CreateMapBoolVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringBool>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMapBoolVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringBool>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapBoolVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringBool>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMapBoolVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringBool>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMapBoolVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.SCreatureGenBlackboardMaps> EndSCreatureGenBlackboardMaps(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SCreatureGenBlackboardMaps>(o);
  }
  public SCreatureGenBlackboardMapsT UnPack() {
    var _o = new SCreatureGenBlackboardMapsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SCreatureGenBlackboardMapsT _o) {
    _o.MapString = new List<WWParser.Defs.DicStringStringT>();
    for (var _j = 0; _j < this.MapStringLength; ++_j) {_o.MapString.Add(this.MapString(_j).HasValue ? this.MapString(_j).Value.UnPack() : null);}
    _o.MapInt = new List<WWParser.Defs.DicStringIntT>();
    for (var _j = 0; _j < this.MapIntLength; ++_j) {_o.MapInt.Add(this.MapInt(_j).HasValue ? this.MapInt(_j).Value.UnPack() : null);}
    _o.MapBool = new List<WWParser.Defs.DicStringBoolT>();
    for (var _j = 0; _j < this.MapBoolLength; ++_j) {_o.MapBool.Add(this.MapBool(_j).HasValue ? this.MapBool(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.SCreatureGenBlackboardMaps> Pack(FlatBufferBuilder builder, SCreatureGenBlackboardMapsT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SCreatureGenBlackboardMaps>);
    var _map_string = default(VectorOffset);
    if (_o.MapString != null) {
      var __map_string = new Offset<WWParser.Defs.DicStringString>[_o.MapString.Count];
      for (var _j = 0; _j < __map_string.Length; ++_j) { __map_string[_j] = WWParser.Defs.DicStringString.Pack(builder, _o.MapString[_j]); }
      _map_string = CreateMapStringVector(builder, __map_string);
    }
    var _map_int = default(VectorOffset);
    if (_o.MapInt != null) {
      var __map_int = new Offset<WWParser.Defs.DicStringInt>[_o.MapInt.Count];
      for (var _j = 0; _j < __map_int.Length; ++_j) { __map_int[_j] = WWParser.Defs.DicStringInt.Pack(builder, _o.MapInt[_j]); }
      _map_int = CreateMapIntVector(builder, __map_int);
    }
    var _map_bool = default(VectorOffset);
    if (_o.MapBool != null) {
      var __map_bool = new Offset<WWParser.Defs.DicStringBool>[_o.MapBool.Count];
      for (var _j = 0; _j < __map_bool.Length; ++_j) { __map_bool[_j] = WWParser.Defs.DicStringBool.Pack(builder, _o.MapBool[_j]); }
      _map_bool = CreateMapBoolVector(builder, __map_bool);
    }
    return CreateSCreatureGenBlackboardMaps(
      builder,
      _map_string,
      _map_int,
      _map_bool);
  }
}

public class SCreatureGenBlackboardMapsT
{
  [Newtonsoft.Json.JsonProperty("map_string")]
  public List<WWParser.Defs.DicStringStringT> MapString { get; set; }
  [Newtonsoft.Json.JsonProperty("map_int")]
  public List<WWParser.Defs.DicStringIntT> MapInt { get; set; }
  [Newtonsoft.Json.JsonProperty("map_bool")]
  public List<WWParser.Defs.DicStringBoolT> MapBool { get; set; }

  public SCreatureGenBlackboardMapsT() {
    this.MapString = null;
    this.MapInt = null;
    this.MapBool = null;
  }
}


static public class SCreatureGenBlackboardMapsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*MapString*/, WWParser.Defs.DicStringStringVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*MapInt*/, WWParser.Defs.DicStringIntVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*MapBool*/, WWParser.Defs.DicStringBoolVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
