// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GenderText : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GenderText GetRootAsGenderText(ByteBuffer _bb) { return GetRootAsGenderText(_bb, new GenderText()); }
  public static GenderText GetRootAsGenderText(ByteBuffer _bb, GenderText obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GenderText __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string MaleText { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMaleTextBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetMaleTextBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetMaleTextArray() { return __p.__vector_as_array<byte>(4); }
  public string FemaleText { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFemaleTextBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetFemaleTextBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetFemaleTextArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.GenderText> CreateGenderText(FlatBufferBuilder builder,
      StringOffset male_textOffset = default(StringOffset),
      StringOffset female_textOffset = default(StringOffset)) {
    builder.StartTable(2);
    GenderText.AddFemaleText(builder, female_textOffset);
    GenderText.AddMaleText(builder, male_textOffset);
    return GenderText.EndGenderText(builder);
  }

  public static void StartGenderText(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMaleText(FlatBufferBuilder builder, StringOffset maleTextOffset) { builder.AddOffset(0, maleTextOffset.Value, 0); }
  public static void AddFemaleText(FlatBufferBuilder builder, StringOffset femaleTextOffset) { builder.AddOffset(1, femaleTextOffset.Value, 0); }
  public static Offset<WWParser.Defs.GenderText> EndGenderText(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GenderText>(o);
  }
  public GenderTextT UnPack() {
    var _o = new GenderTextT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GenderTextT _o) {
    _o.MaleText = this.MaleText;
    _o.FemaleText = this.FemaleText;
  }
  public static Offset<WWParser.Defs.GenderText> Pack(FlatBufferBuilder builder, GenderTextT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GenderText>);
    var _male_text = _o.MaleText == null ? default(StringOffset) : builder.CreateString(_o.MaleText);
    var _female_text = _o.FemaleText == null ? default(StringOffset) : builder.CreateString(_o.FemaleText);
    return CreateGenderText(
      builder,
      _male_text,
      _female_text);
  }
}

public class GenderTextT
{
  [Newtonsoft.Json.JsonProperty("male_text")]
  public string MaleText { get; set; }
  [Newtonsoft.Json.JsonProperty("female_text")]
  public string FemaleText { get; set; }

  public GenderTextT() {
    this.MaleText = null;
    this.FemaleText = null;
  }
}


static public class GenderTextVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*MaleText*/, false)
      && verifier.VerifyString(tablePos, 6 /*FemaleText*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
