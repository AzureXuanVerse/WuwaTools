// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Activity : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Activity GetRootAsActivity(ByteBuffer _bb) { return GetRootAsActivity(_bb, new Activity()); }
  public static Activity GetRootAsActivity(ByteBuffer _bb, Activity obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Activity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OpenType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Sort { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)10; } }
  public int TimeIsDisplay { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool ShowPermanentTips { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ShowTabTime { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ShowTabFinish { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool SinkTabFinish { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int PreConditionGroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PreOpenCondition { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string PreOpenText { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPreOpenTextBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetPreOpenTextBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPreOpenTextArray() { return __p.__vector_as_array<byte>(26); }
  public bool ShowUnlockTip { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int PreShowGuideQuest(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PreShowGuideQuestLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetPreShowGuideQuestBytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetPreShowGuideQuestBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetPreShowGuideQuestArray() { return __p.__vector_as_array<int>(30); }
  public bool IfShowQuestLeftTime { get { int o = __p.__offset(32); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool CloseGiveUpGuideQuest { get { int o = __p.__offset(34); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string TabResource { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTabResourceBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetTabResourceBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetTabResourceArray() { return __p.__vector_as_array<byte>(36); }
  public string TabResource2 { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTabResource2Bytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetTabResource2Bytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetTabResource2Array() { return __p.__vector_as_array<byte>(38); }
  public string TabTexture(int j) { int o = __p.__offset(40); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TabTextureLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Name { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(42); }
  public string Title { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(44); }
  public string DescTheme { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescThemeBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetDescThemeBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetDescThemeArray() { return __p.__vector_as_array<byte>(46); }
  public string Desc { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(48); }
  public string BgResource { get { int o = __p.__offset(50); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgResourceBytes() { return __p.__vector_as_span<byte>(50, 1); }
#else
  public ArraySegment<byte>? GetBgResourceBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public byte[] GetBgResourceArray() { return __p.__vector_as_array<byte>(50); }
  public int PreviewDrop { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HelpId { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string DescThemeIcon { get { int o = __p.__offset(56); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescThemeIconBytes() { return __p.__vector_as_span<byte>(56, 1); }
#else
  public ArraySegment<byte>? GetDescThemeIconBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public byte[] GetDescThemeIconArray() { return __p.__vector_as_array<byte>(56); }
  public string TabTagIcon { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTabTagIconBytes() { return __p.__vector_as_span<byte>(58, 1); }
#else
  public ArraySegment<byte>? GetTabTagIconBytes() { return __p.__vector_as_arraysegment(58); }
#endif
  public byte[] GetTabTagIconArray() { return __p.__vector_as_array<byte>(58); }

  public static Offset<WWParser.Defs.Activity> CreateActivity(FlatBufferBuilder builder,
      int id = 0,
      int type = 0,
      int open_type = 0,
      int sort = 10,
      int time_is_display = 0,
      bool show_permanent_tips = false,
      bool show_tab_time = false,
      bool show_tab_finish = false,
      bool sink_tab_finish = false,
      int pre_condition_group_id = 0,
      int pre_open_condition = 0,
      StringOffset pre_open_textOffset = default(StringOffset),
      bool show_unlock_tip = false,
      VectorOffset pre_show_guide_questOffset = default(VectorOffset),
      bool if_show_quest_left_time = false,
      bool close_give_up_guide_quest = false,
      StringOffset tab_resourceOffset = default(StringOffset),
      StringOffset tab_resource2Offset = default(StringOffset),
      VectorOffset tab_textureOffset = default(VectorOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset desc_themeOffset = default(StringOffset),
      StringOffset descOffset = default(StringOffset),
      StringOffset bg_resourceOffset = default(StringOffset),
      int preview_drop = 0,
      int help_id = 0,
      StringOffset desc_theme_iconOffset = default(StringOffset),
      StringOffset tab_tag_iconOffset = default(StringOffset)) {
    builder.StartTable(28);
    Activity.AddTabTagIcon(builder, tab_tag_iconOffset);
    Activity.AddDescThemeIcon(builder, desc_theme_iconOffset);
    Activity.AddHelpId(builder, help_id);
    Activity.AddPreviewDrop(builder, preview_drop);
    Activity.AddBgResource(builder, bg_resourceOffset);
    Activity.AddDesc(builder, descOffset);
    Activity.AddDescTheme(builder, desc_themeOffset);
    Activity.AddTitle(builder, titleOffset);
    Activity.AddName(builder, nameOffset);
    Activity.AddTabTexture(builder, tab_textureOffset);
    Activity.AddTabResource2(builder, tab_resource2Offset);
    Activity.AddTabResource(builder, tab_resourceOffset);
    Activity.AddPreShowGuideQuest(builder, pre_show_guide_questOffset);
    Activity.AddPreOpenText(builder, pre_open_textOffset);
    Activity.AddPreOpenCondition(builder, pre_open_condition);
    Activity.AddPreConditionGroupId(builder, pre_condition_group_id);
    Activity.AddTimeIsDisplay(builder, time_is_display);
    Activity.AddSort(builder, sort);
    Activity.AddOpenType(builder, open_type);
    Activity.AddType(builder, type);
    Activity.AddId(builder, id);
    Activity.AddCloseGiveUpGuideQuest(builder, close_give_up_guide_quest);
    Activity.AddIfShowQuestLeftTime(builder, if_show_quest_left_time);
    Activity.AddShowUnlockTip(builder, show_unlock_tip);
    Activity.AddSinkTabFinish(builder, sink_tab_finish);
    Activity.AddShowTabFinish(builder, show_tab_finish);
    Activity.AddShowTabTime(builder, show_tab_time);
    Activity.AddShowPermanentTips(builder, show_permanent_tips);
    return Activity.EndActivity(builder);
  }

  public static void StartActivity(FlatBufferBuilder builder) { builder.StartTable(28); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(1, type, 0); }
  public static void AddOpenType(FlatBufferBuilder builder, int openType) { builder.AddInt(2, openType, 0); }
  public static void AddSort(FlatBufferBuilder builder, int sort) { builder.AddInt(3, sort, 10); }
  public static void AddTimeIsDisplay(FlatBufferBuilder builder, int timeIsDisplay) { builder.AddInt(4, timeIsDisplay, 0); }
  public static void AddShowPermanentTips(FlatBufferBuilder builder, bool showPermanentTips) { builder.AddBool(5, showPermanentTips, false); }
  public static void AddShowTabTime(FlatBufferBuilder builder, bool showTabTime) { builder.AddBool(6, showTabTime, false); }
  public static void AddShowTabFinish(FlatBufferBuilder builder, bool showTabFinish) { builder.AddBool(7, showTabFinish, false); }
  public static void AddSinkTabFinish(FlatBufferBuilder builder, bool sinkTabFinish) { builder.AddBool(8, sinkTabFinish, false); }
  public static void AddPreConditionGroupId(FlatBufferBuilder builder, int preConditionGroupId) { builder.AddInt(9, preConditionGroupId, 0); }
  public static void AddPreOpenCondition(FlatBufferBuilder builder, int preOpenCondition) { builder.AddInt(10, preOpenCondition, 0); }
  public static void AddPreOpenText(FlatBufferBuilder builder, StringOffset preOpenTextOffset) { builder.AddOffset(11, preOpenTextOffset.Value, 0); }
  public static void AddShowUnlockTip(FlatBufferBuilder builder, bool showUnlockTip) { builder.AddBool(12, showUnlockTip, false); }
  public static void AddPreShowGuideQuest(FlatBufferBuilder builder, VectorOffset preShowGuideQuestOffset) { builder.AddOffset(13, preShowGuideQuestOffset.Value, 0); }
  public static VectorOffset CreatePreShowGuideQuestVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePreShowGuideQuestVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreShowGuideQuestVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreShowGuideQuestVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPreShowGuideQuestVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIfShowQuestLeftTime(FlatBufferBuilder builder, bool ifShowQuestLeftTime) { builder.AddBool(14, ifShowQuestLeftTime, false); }
  public static void AddCloseGiveUpGuideQuest(FlatBufferBuilder builder, bool closeGiveUpGuideQuest) { builder.AddBool(15, closeGiveUpGuideQuest, false); }
  public static void AddTabResource(FlatBufferBuilder builder, StringOffset tabResourceOffset) { builder.AddOffset(16, tabResourceOffset.Value, 0); }
  public static void AddTabResource2(FlatBufferBuilder builder, StringOffset tabResource2Offset) { builder.AddOffset(17, tabResource2Offset.Value, 0); }
  public static void AddTabTexture(FlatBufferBuilder builder, VectorOffset tabTextureOffset) { builder.AddOffset(18, tabTextureOffset.Value, 0); }
  public static VectorOffset CreateTabTextureVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTabTextureVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabTextureVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabTextureVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTabTextureVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(19, nameOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(20, titleOffset.Value, 0); }
  public static void AddDescTheme(FlatBufferBuilder builder, StringOffset descThemeOffset) { builder.AddOffset(21, descThemeOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(22, descOffset.Value, 0); }
  public static void AddBgResource(FlatBufferBuilder builder, StringOffset bgResourceOffset) { builder.AddOffset(23, bgResourceOffset.Value, 0); }
  public static void AddPreviewDrop(FlatBufferBuilder builder, int previewDrop) { builder.AddInt(24, previewDrop, 0); }
  public static void AddHelpId(FlatBufferBuilder builder, int helpId) { builder.AddInt(25, helpId, 0); }
  public static void AddDescThemeIcon(FlatBufferBuilder builder, StringOffset descThemeIconOffset) { builder.AddOffset(26, descThemeIconOffset.Value, 0); }
  public static void AddTabTagIcon(FlatBufferBuilder builder, StringOffset tabTagIconOffset) { builder.AddOffset(27, tabTagIconOffset.Value, 0); }
  public static Offset<WWParser.Defs.Activity> EndActivity(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Activity>(o);
  }
  public ActivityT UnPack() {
    var _o = new ActivityT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ActivityT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.OpenType = this.OpenType;
    _o.Sort = this.Sort;
    _o.TimeIsDisplay = this.TimeIsDisplay;
    _o.ShowPermanentTips = this.ShowPermanentTips;
    _o.ShowTabTime = this.ShowTabTime;
    _o.ShowTabFinish = this.ShowTabFinish;
    _o.SinkTabFinish = this.SinkTabFinish;
    _o.PreConditionGroupId = this.PreConditionGroupId;
    _o.PreOpenCondition = this.PreOpenCondition;
    _o.PreOpenText = this.PreOpenText;
    _o.ShowUnlockTip = this.ShowUnlockTip;
    _o.PreShowGuideQuest = new List<int>();
    for (var _j = 0; _j < this.PreShowGuideQuestLength; ++_j) {_o.PreShowGuideQuest.Add(this.PreShowGuideQuest(_j));}
    _o.IfShowQuestLeftTime = this.IfShowQuestLeftTime;
    _o.CloseGiveUpGuideQuest = this.CloseGiveUpGuideQuest;
    _o.TabResource = this.TabResource;
    _o.TabResource2 = this.TabResource2;
    _o.TabTexture = new List<string>();
    for (var _j = 0; _j < this.TabTextureLength; ++_j) {_o.TabTexture.Add(this.TabTexture(_j));}
    _o.Name = this.Name;
    _o.Title = this.Title;
    _o.DescTheme = this.DescTheme;
    _o.Desc = this.Desc;
    _o.BgResource = this.BgResource;
    _o.PreviewDrop = this.PreviewDrop;
    _o.HelpId = this.HelpId;
    _o.DescThemeIcon = this.DescThemeIcon;
    _o.TabTagIcon = this.TabTagIcon;
  }
  public static Offset<WWParser.Defs.Activity> Pack(FlatBufferBuilder builder, ActivityT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Activity>);
    var _pre_open_text = _o.PreOpenText == null ? default(StringOffset) : builder.CreateString(_o.PreOpenText);
    var _pre_show_guide_quest = default(VectorOffset);
    if (_o.PreShowGuideQuest != null) {
      var __pre_show_guide_quest = _o.PreShowGuideQuest.ToArray();
      _pre_show_guide_quest = CreatePreShowGuideQuestVector(builder, __pre_show_guide_quest);
    }
    var _tab_resource = _o.TabResource == null ? default(StringOffset) : builder.CreateString(_o.TabResource);
    var _tab_resource2 = _o.TabResource2 == null ? default(StringOffset) : builder.CreateString(_o.TabResource2);
    var _tab_texture = default(VectorOffset);
    if (_o.TabTexture != null) {
      var __tab_texture = new StringOffset[_o.TabTexture.Count];
      for (var _j = 0; _j < __tab_texture.Length; ++_j) { __tab_texture[_j] = builder.CreateString(_o.TabTexture[_j]); }
      _tab_texture = CreateTabTextureVector(builder, __tab_texture);
    }
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _desc_theme = _o.DescTheme == null ? default(StringOffset) : builder.CreateString(_o.DescTheme);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _bg_resource = _o.BgResource == null ? default(StringOffset) : builder.CreateString(_o.BgResource);
    var _desc_theme_icon = _o.DescThemeIcon == null ? default(StringOffset) : builder.CreateString(_o.DescThemeIcon);
    var _tab_tag_icon = _o.TabTagIcon == null ? default(StringOffset) : builder.CreateString(_o.TabTagIcon);
    return CreateActivity(
      builder,
      _o.Id,
      _o.Type,
      _o.OpenType,
      _o.Sort,
      _o.TimeIsDisplay,
      _o.ShowPermanentTips,
      _o.ShowTabTime,
      _o.ShowTabFinish,
      _o.SinkTabFinish,
      _o.PreConditionGroupId,
      _o.PreOpenCondition,
      _pre_open_text,
      _o.ShowUnlockTip,
      _pre_show_guide_quest,
      _o.IfShowQuestLeftTime,
      _o.CloseGiveUpGuideQuest,
      _tab_resource,
      _tab_resource2,
      _tab_texture,
      _name,
      _title,
      _desc_theme,
      _desc,
      _bg_resource,
      _o.PreviewDrop,
      _o.HelpId,
      _desc_theme_icon,
      _tab_tag_icon);
  }
}

public class ActivityT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("open_type")]
  public int OpenType { get; set; }
  [Newtonsoft.Json.JsonProperty("sort")]
  public int Sort { get; set; }
  [Newtonsoft.Json.JsonProperty("time_is_display")]
  public int TimeIsDisplay { get; set; }
  [Newtonsoft.Json.JsonProperty("show_permanent_tips")]
  public bool ShowPermanentTips { get; set; }
  [Newtonsoft.Json.JsonProperty("show_tab_time")]
  public bool ShowTabTime { get; set; }
  [Newtonsoft.Json.JsonProperty("show_tab_finish")]
  public bool ShowTabFinish { get; set; }
  [Newtonsoft.Json.JsonProperty("sink_tab_finish")]
  public bool SinkTabFinish { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_condition_group_id")]
  public int PreConditionGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_open_condition")]
  public int PreOpenCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_open_text")]
  public string PreOpenText { get; set; }
  [Newtonsoft.Json.JsonProperty("show_unlock_tip")]
  public bool ShowUnlockTip { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_show_guide_quest")]
  public List<int> PreShowGuideQuest { get; set; }
  [Newtonsoft.Json.JsonProperty("if_show_quest_left_time")]
  public bool IfShowQuestLeftTime { get; set; }
  [Newtonsoft.Json.JsonProperty("close_give_up_guide_quest")]
  public bool CloseGiveUpGuideQuest { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_resource")]
  public string TabResource { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_resource2")]
  public string TabResource2 { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_texture")]
  public List<string> TabTexture { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("desc_theme")]
  public string DescTheme { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_resource")]
  public string BgResource { get; set; }
  [Newtonsoft.Json.JsonProperty("preview_drop")]
  public int PreviewDrop { get; set; }
  [Newtonsoft.Json.JsonProperty("help_id")]
  public int HelpId { get; set; }
  [Newtonsoft.Json.JsonProperty("desc_theme_icon")]
  public string DescThemeIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_tag_icon")]
  public string TabTagIcon { get; set; }

  public ActivityT() {
    this.Id = 0;
    this.Type = 0;
    this.OpenType = 0;
    this.Sort = 10;
    this.TimeIsDisplay = 0;
    this.ShowPermanentTips = false;
    this.ShowTabTime = false;
    this.ShowTabFinish = false;
    this.SinkTabFinish = false;
    this.PreConditionGroupId = 0;
    this.PreOpenCondition = 0;
    this.PreOpenText = null;
    this.ShowUnlockTip = false;
    this.PreShowGuideQuest = null;
    this.IfShowQuestLeftTime = false;
    this.CloseGiveUpGuideQuest = false;
    this.TabResource = null;
    this.TabResource2 = null;
    this.TabTexture = null;
    this.Name = null;
    this.Title = null;
    this.DescTheme = null;
    this.Desc = null;
    this.BgResource = null;
    this.PreviewDrop = 0;
    this.HelpId = 0;
    this.DescThemeIcon = null;
    this.TabTagIcon = null;
  }
}


static public class ActivityVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*OpenType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Sort*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*TimeIsDisplay*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ShowPermanentTips*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*ShowTabTime*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*ShowTabFinish*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*SinkTabFinish*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 22 /*PreConditionGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*PreOpenCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*PreOpenText*/, false)
      && verifier.VerifyField(tablePos, 28 /*ShowUnlockTip*/, 1 /*bool*/, 1, false)
      && verifier.VerifyVectorOfData(tablePos, 30 /*PreShowGuideQuest*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 32 /*IfShowQuestLeftTime*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 34 /*CloseGiveUpGuideQuest*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 36 /*TabResource*/, false)
      && verifier.VerifyString(tablePos, 38 /*TabResource2*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 40 /*TabTexture*/, false)
      && verifier.VerifyString(tablePos, 42 /*Name*/, false)
      && verifier.VerifyString(tablePos, 44 /*Title*/, false)
      && verifier.VerifyString(tablePos, 46 /*DescTheme*/, false)
      && verifier.VerifyString(tablePos, 48 /*Desc*/, false)
      && verifier.VerifyString(tablePos, 50 /*BgResource*/, false)
      && verifier.VerifyField(tablePos, 52 /*PreviewDrop*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 54 /*HelpId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 56 /*DescThemeIcon*/, false)
      && verifier.VerifyString(tablePos, 58 /*TabTagIcon*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
