// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct InfoDisplay : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static InfoDisplay GetRootAsInfoDisplay(ByteBuffer _bb) { return GetRootAsInfoDisplay(_bb, new InfoDisplay()); }
  public static InfoDisplay GetRootAsInfoDisplay(ByteBuffer _bb, InfoDisplay obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public InfoDisplay __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(10); }
  public string Text { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetTextArray() { return __p.__vector_as_array<byte>(12); }
  public string Picture { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPictureBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetPictureBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPictureArray() { return __p.__vector_as_array<byte>(14); }
  public string Audio { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAudioBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetAudioBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetAudioArray() { return __p.__vector_as_array<byte>(16); }
  public string Background { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBackgroundBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetBackgroundBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetBackgroundArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<WWParser.Defs.InfoDisplay> CreateInfoDisplay(FlatBufferBuilder builder,
      int id = 0,
      int item_id = 0,
      int type = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset textOffset = default(StringOffset),
      StringOffset pictureOffset = default(StringOffset),
      StringOffset audioOffset = default(StringOffset),
      StringOffset backgroundOffset = default(StringOffset)) {
    builder.StartTable(8);
    InfoDisplay.AddBackground(builder, backgroundOffset);
    InfoDisplay.AddAudio(builder, audioOffset);
    InfoDisplay.AddPicture(builder, pictureOffset);
    InfoDisplay.AddText(builder, textOffset);
    InfoDisplay.AddTitle(builder, titleOffset);
    InfoDisplay.AddType(builder, type);
    InfoDisplay.AddItemId(builder, item_id);
    InfoDisplay.AddId(builder, id);
    return InfoDisplay.EndInfoDisplay(builder);
  }

  public static void StartInfoDisplay(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(1, itemId, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(2, type, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(3, titleOffset.Value, 0); }
  public static void AddText(FlatBufferBuilder builder, StringOffset textOffset) { builder.AddOffset(4, textOffset.Value, 0); }
  public static void AddPicture(FlatBufferBuilder builder, StringOffset pictureOffset) { builder.AddOffset(5, pictureOffset.Value, 0); }
  public static void AddAudio(FlatBufferBuilder builder, StringOffset audioOffset) { builder.AddOffset(6, audioOffset.Value, 0); }
  public static void AddBackground(FlatBufferBuilder builder, StringOffset backgroundOffset) { builder.AddOffset(7, backgroundOffset.Value, 0); }
  public static Offset<WWParser.Defs.InfoDisplay> EndInfoDisplay(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.InfoDisplay>(o);
  }
  public InfoDisplayT UnPack() {
    var _o = new InfoDisplayT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(InfoDisplayT _o) {
    _o.Id = this.Id;
    _o.ItemId = this.ItemId;
    _o.Type = this.Type;
    _o.Title = this.Title;
    _o.Text = this.Text;
    _o.Picture = this.Picture;
    _o.Audio = this.Audio;
    _o.Background = this.Background;
  }
  public static Offset<WWParser.Defs.InfoDisplay> Pack(FlatBufferBuilder builder, InfoDisplayT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.InfoDisplay>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _text = _o.Text == null ? default(StringOffset) : builder.CreateString(_o.Text);
    var _picture = _o.Picture == null ? default(StringOffset) : builder.CreateString(_o.Picture);
    var _audio = _o.Audio == null ? default(StringOffset) : builder.CreateString(_o.Audio);
    var _background = _o.Background == null ? default(StringOffset) : builder.CreateString(_o.Background);
    return CreateInfoDisplay(
      builder,
      _o.Id,
      _o.ItemId,
      _o.Type,
      _title,
      _text,
      _picture,
      _audio,
      _background);
  }
}

public class InfoDisplayT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("text")]
  public string Text { get; set; }
  [Newtonsoft.Json.JsonProperty("picture")]
  public string Picture { get; set; }
  [Newtonsoft.Json.JsonProperty("audio")]
  public string Audio { get; set; }
  [Newtonsoft.Json.JsonProperty("background")]
  public string Background { get; set; }

  public InfoDisplayT() {
    this.Id = 0;
    this.ItemId = 0;
    this.Type = 0;
    this.Title = null;
    this.Text = null;
    this.Picture = null;
    this.Audio = null;
    this.Background = null;
  }
}


static public class InfoDisplayVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Title*/, false)
      && verifier.VerifyString(tablePos, 12 /*Text*/, false)
      && verifier.VerifyString(tablePos, 14 /*Picture*/, false)
      && verifier.VerifyString(tablePos, 16 /*Audio*/, false)
      && verifier.VerifyString(tablePos, 18 /*Background*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
