// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct IntPair : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static IntPair GetRootAsIntPair(ByteBuffer _bb) { return GetRootAsIntPair(_bb, new IntPair()); }
  public static IntPair GetRootAsIntPair(ByteBuffer _bb, IntPair obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IntPair __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Item1 { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Item2 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.IntPair> CreateIntPair(FlatBufferBuilder builder,
      int item1 = 0,
      int item2 = 0) {
    builder.StartTable(2);
    IntPair.AddItem2(builder, item2);
    IntPair.AddItem1(builder, item1);
    return IntPair.EndIntPair(builder);
  }

  public static void StartIntPair(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddItem1(FlatBufferBuilder builder, int item1) { builder.AddInt(0, item1, 0); }
  public static void AddItem2(FlatBufferBuilder builder, int item2) { builder.AddInt(1, item2, 0); }
  public static Offset<WWParser.Defs.IntPair> EndIntPair(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.IntPair>(o);
  }
  public IntPairT UnPack() {
    var _o = new IntPairT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IntPairT _o) {
    _o.Item1 = this.Item1;
    _o.Item2 = this.Item2;
  }
  public static Offset<WWParser.Defs.IntPair> Pack(FlatBufferBuilder builder, IntPairT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.IntPair>);
    return CreateIntPair(
      builder,
      _o.Item1,
      _o.Item2);
  }
}

public class IntPairT
{
  [Newtonsoft.Json.JsonProperty("item1")]
  public int Item1 { get; set; }
  [Newtonsoft.Json.JsonProperty("item2")]
  public int Item2 { get; set; }

  public IntPairT() {
    this.Item1 = 0;
    this.Item2 = 0;
  }
}


static public class IntPairVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Item1*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Item2*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
