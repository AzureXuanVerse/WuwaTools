// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BrokenRockConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BrokenRockConfig GetRootAsBrokenRockConfig(ByteBuffer _bb) { return GetRootAsBrokenRockConfig(_bb, new BrokenRockConfig()); }
  public static BrokenRockConfig GetRootAsBrokenRockConfig(ByteBuffer _bb, BrokenRockConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BrokenRockConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string EntityUid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEntityUidBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetEntityUidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetEntityUidArray() { return __p.__vector_as_array<byte>(6); }
  public int Rings(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RingsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRingsBytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetRingsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetRingsArray() { return __p.__vector_as_array<int>(8); }
  public int ScoreMax { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)100; } }
  public int ScoreUp { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ScoreDown { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)20; } }
  public int GlobalTime { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NormalSkill { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FinishSkill { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.BrokenRockConfig> CreateBrokenRockConfig(FlatBufferBuilder builder,
      int id = 0,
      StringOffset entity_uidOffset = default(StringOffset),
      VectorOffset ringsOffset = default(VectorOffset),
      int score_max = 100,
      int score_up = 0,
      int score_down = 20,
      int global_time = 0,
      int normal_skill = 0,
      int finish_skill = 0) {
    builder.StartTable(9);
    BrokenRockConfig.AddFinishSkill(builder, finish_skill);
    BrokenRockConfig.AddNormalSkill(builder, normal_skill);
    BrokenRockConfig.AddGlobalTime(builder, global_time);
    BrokenRockConfig.AddScoreDown(builder, score_down);
    BrokenRockConfig.AddScoreUp(builder, score_up);
    BrokenRockConfig.AddScoreMax(builder, score_max);
    BrokenRockConfig.AddRings(builder, ringsOffset);
    BrokenRockConfig.AddEntityUid(builder, entity_uidOffset);
    BrokenRockConfig.AddId(builder, id);
    return BrokenRockConfig.EndBrokenRockConfig(builder);
  }

  public static void StartBrokenRockConfig(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddEntityUid(FlatBufferBuilder builder, StringOffset entityUidOffset) { builder.AddOffset(1, entityUidOffset.Value, 0); }
  public static void AddRings(FlatBufferBuilder builder, VectorOffset ringsOffset) { builder.AddOffset(2, ringsOffset.Value, 0); }
  public static VectorOffset CreateRingsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRingsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRingsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRingsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRingsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddScoreMax(FlatBufferBuilder builder, int scoreMax) { builder.AddInt(3, scoreMax, 100); }
  public static void AddScoreUp(FlatBufferBuilder builder, int scoreUp) { builder.AddInt(4, scoreUp, 0); }
  public static void AddScoreDown(FlatBufferBuilder builder, int scoreDown) { builder.AddInt(5, scoreDown, 20); }
  public static void AddGlobalTime(FlatBufferBuilder builder, int globalTime) { builder.AddInt(6, globalTime, 0); }
  public static void AddNormalSkill(FlatBufferBuilder builder, int normalSkill) { builder.AddInt(7, normalSkill, 0); }
  public static void AddFinishSkill(FlatBufferBuilder builder, int finishSkill) { builder.AddInt(8, finishSkill, 0); }
  public static Offset<WWParser.Defs.BrokenRockConfig> EndBrokenRockConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BrokenRockConfig>(o);
  }
  public BrokenRockConfigT UnPack() {
    var _o = new BrokenRockConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BrokenRockConfigT _o) {
    _o.Id = this.Id;
    _o.EntityUid = this.EntityUid;
    _o.Rings = new List<int>();
    for (var _j = 0; _j < this.RingsLength; ++_j) {_o.Rings.Add(this.Rings(_j));}
    _o.ScoreMax = this.ScoreMax;
    _o.ScoreUp = this.ScoreUp;
    _o.ScoreDown = this.ScoreDown;
    _o.GlobalTime = this.GlobalTime;
    _o.NormalSkill = this.NormalSkill;
    _o.FinishSkill = this.FinishSkill;
  }
  public static Offset<WWParser.Defs.BrokenRockConfig> Pack(FlatBufferBuilder builder, BrokenRockConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BrokenRockConfig>);
    var _entity_uid = _o.EntityUid == null ? default(StringOffset) : builder.CreateString(_o.EntityUid);
    var _rings = default(VectorOffset);
    if (_o.Rings != null) {
      var __rings = _o.Rings.ToArray();
      _rings = CreateRingsVector(builder, __rings);
    }
    return CreateBrokenRockConfig(
      builder,
      _o.Id,
      _entity_uid,
      _rings,
      _o.ScoreMax,
      _o.ScoreUp,
      _o.ScoreDown,
      _o.GlobalTime,
      _o.NormalSkill,
      _o.FinishSkill);
  }
}

public class BrokenRockConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("entity_uid")]
  public string EntityUid { get; set; }
  [Newtonsoft.Json.JsonProperty("rings")]
  public List<int> Rings { get; set; }
  [Newtonsoft.Json.JsonProperty("score_max")]
  public int ScoreMax { get; set; }
  [Newtonsoft.Json.JsonProperty("score_up")]
  public int ScoreUp { get; set; }
  [Newtonsoft.Json.JsonProperty("score_down")]
  public int ScoreDown { get; set; }
  [Newtonsoft.Json.JsonProperty("global_time")]
  public int GlobalTime { get; set; }
  [Newtonsoft.Json.JsonProperty("normal_skill")]
  public int NormalSkill { get; set; }
  [Newtonsoft.Json.JsonProperty("finish_skill")]
  public int FinishSkill { get; set; }

  public BrokenRockConfigT() {
    this.Id = 0;
    this.EntityUid = null;
    this.Rings = null;
    this.ScoreMax = 100;
    this.ScoreUp = 0;
    this.ScoreDown = 20;
    this.GlobalTime = 0;
    this.NormalSkill = 0;
    this.FinishSkill = 0;
  }
}


static public class BrokenRockConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*EntityUid*/, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*Rings*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 10 /*ScoreMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ScoreUp*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ScoreDown*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*GlobalTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*NormalSkill*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*FinishSkill*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
