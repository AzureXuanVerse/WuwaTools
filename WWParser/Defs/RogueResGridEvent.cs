// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResGridEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResGridEvent GetRootAsRogueResGridEvent(ByteBuffer _bb) { return GetRootAsRogueResGridEvent(_bb, new RogueResGridEvent()); }
  public static RogueResGridEvent GetRootAsRogueResGridEvent(ByteBuffer _bb, RogueResGridEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResGridEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Plot { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProgressType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string CondText { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCondTextBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCondTextBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCondTextArray() { return __p.__vector_as_array<byte>(10); }
  public int ShowType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Fx { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFxBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetFxBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetFxArray() { return __p.__vector_as_array<byte>(14); }
  public int Star { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(18); }
  public string Title { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(20); }
  public string Desc { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(22); }
  public int EventType { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RogueResGridEvent> CreateRogueResGridEvent(FlatBufferBuilder builder,
      int id = 0,
      int plot = 0,
      int progress_type = 0,
      StringOffset cond_textOffset = default(StringOffset),
      int show_type = 0,
      StringOffset fxOffset = default(StringOffset),
      int star = 0,
      StringOffset iconOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset descOffset = default(StringOffset),
      int event_type = 0) {
    builder.StartTable(11);
    RogueResGridEvent.AddEventType(builder, event_type);
    RogueResGridEvent.AddDesc(builder, descOffset);
    RogueResGridEvent.AddTitle(builder, titleOffset);
    RogueResGridEvent.AddIcon(builder, iconOffset);
    RogueResGridEvent.AddStar(builder, star);
    RogueResGridEvent.AddFx(builder, fxOffset);
    RogueResGridEvent.AddShowType(builder, show_type);
    RogueResGridEvent.AddCondText(builder, cond_textOffset);
    RogueResGridEvent.AddProgressType(builder, progress_type);
    RogueResGridEvent.AddPlot(builder, plot);
    RogueResGridEvent.AddId(builder, id);
    return RogueResGridEvent.EndRogueResGridEvent(builder);
  }

  public static void StartRogueResGridEvent(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddPlot(FlatBufferBuilder builder, int plot) { builder.AddInt(1, plot, 0); }
  public static void AddProgressType(FlatBufferBuilder builder, int progressType) { builder.AddInt(2, progressType, 0); }
  public static void AddCondText(FlatBufferBuilder builder, StringOffset condTextOffset) { builder.AddOffset(3, condTextOffset.Value, 0); }
  public static void AddShowType(FlatBufferBuilder builder, int showType) { builder.AddInt(4, showType, 0); }
  public static void AddFx(FlatBufferBuilder builder, StringOffset fxOffset) { builder.AddOffset(5, fxOffset.Value, 0); }
  public static void AddStar(FlatBufferBuilder builder, int star) { builder.AddInt(6, star, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(7, iconOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(8, titleOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(9, descOffset.Value, 0); }
  public static void AddEventType(FlatBufferBuilder builder, int eventType) { builder.AddInt(10, eventType, 0); }
  public static Offset<WWParser.Defs.RogueResGridEvent> EndRogueResGridEvent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResGridEvent>(o);
  }
  public RogueResGridEventT UnPack() {
    var _o = new RogueResGridEventT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResGridEventT _o) {
    _o.Id = this.Id;
    _o.Plot = this.Plot;
    _o.ProgressType = this.ProgressType;
    _o.CondText = this.CondText;
    _o.ShowType = this.ShowType;
    _o.Fx = this.Fx;
    _o.Star = this.Star;
    _o.Icon = this.Icon;
    _o.Title = this.Title;
    _o.Desc = this.Desc;
    _o.EventType = this.EventType;
  }
  public static Offset<WWParser.Defs.RogueResGridEvent> Pack(FlatBufferBuilder builder, RogueResGridEventT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResGridEvent>);
    var _cond_text = _o.CondText == null ? default(StringOffset) : builder.CreateString(_o.CondText);
    var _fx = _o.Fx == null ? default(StringOffset) : builder.CreateString(_o.Fx);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    return CreateRogueResGridEvent(
      builder,
      _o.Id,
      _o.Plot,
      _o.ProgressType,
      _cond_text,
      _o.ShowType,
      _fx,
      _o.Star,
      _icon,
      _title,
      _desc,
      _o.EventType);
  }
}

public class RogueResGridEventT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("plot")]
  public int Plot { get; set; }
  [Newtonsoft.Json.JsonProperty("progress_type")]
  public int ProgressType { get; set; }
  [Newtonsoft.Json.JsonProperty("cond_text")]
  public string CondText { get; set; }
  [Newtonsoft.Json.JsonProperty("show_type")]
  public int ShowType { get; set; }
  [Newtonsoft.Json.JsonProperty("fx")]
  public string Fx { get; set; }
  [Newtonsoft.Json.JsonProperty("star")]
  public int Star { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("event_type")]
  public int EventType { get; set; }

  public RogueResGridEventT() {
    this.Id = 0;
    this.Plot = 0;
    this.ProgressType = 0;
    this.CondText = null;
    this.ShowType = 0;
    this.Fx = null;
    this.Star = 0;
    this.Icon = null;
    this.Title = null;
    this.Desc = null;
    this.EventType = 0;
  }
}


static public class RogueResGridEventVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Plot*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ProgressType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*CondText*/, false)
      && verifier.VerifyField(tablePos, 12 /*ShowType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*Fx*/, false)
      && verifier.VerifyField(tablePos, 16 /*Star*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 18 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 20 /*Title*/, false)
      && verifier.VerifyString(tablePos, 22 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 24 /*EventType*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
