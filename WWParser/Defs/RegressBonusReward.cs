// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RegressBonusReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RegressBonusReward GetRootAsRegressBonusReward(ByteBuffer _bb) { return GetRootAsRegressBonusReward(_bb, new RegressBonusReward()); }
  public static RegressBonusReward GetRootAsRegressBonusReward(ByteBuffer _bb, RegressBonusReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RegressBonusReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Grade { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int NeedScore { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Drop { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RegressBonusReward> CreateRegressBonusReward(FlatBufferBuilder builder,
      int id = 0,
      int grade = 1,
      int need_score = 0,
      int drop = 0) {
    builder.StartTable(4);
    RegressBonusReward.AddDrop(builder, drop);
    RegressBonusReward.AddNeedScore(builder, need_score);
    RegressBonusReward.AddGrade(builder, grade);
    RegressBonusReward.AddId(builder, id);
    return RegressBonusReward.EndRegressBonusReward(builder);
  }

  public static void StartRegressBonusReward(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddGrade(FlatBufferBuilder builder, int grade) { builder.AddInt(1, grade, 1); }
  public static void AddNeedScore(FlatBufferBuilder builder, int needScore) { builder.AddInt(2, needScore, 0); }
  public static void AddDrop(FlatBufferBuilder builder, int drop) { builder.AddInt(3, drop, 0); }
  public static Offset<WWParser.Defs.RegressBonusReward> EndRegressBonusReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RegressBonusReward>(o);
  }
  public RegressBonusRewardT UnPack() {
    var _o = new RegressBonusRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RegressBonusRewardT _o) {
    _o.Id = this.Id;
    _o.Grade = this.Grade;
    _o.NeedScore = this.NeedScore;
    _o.Drop = this.Drop;
  }
  public static Offset<WWParser.Defs.RegressBonusReward> Pack(FlatBufferBuilder builder, RegressBonusRewardT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RegressBonusReward>);
    return CreateRegressBonusReward(
      builder,
      _o.Id,
      _o.Grade,
      _o.NeedScore,
      _o.Drop);
  }
}

public class RegressBonusRewardT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("grade")]
  public int Grade { get; set; }
  [Newtonsoft.Json.JsonProperty("need_score")]
  public int NeedScore { get; set; }
  [Newtonsoft.Json.JsonProperty("drop")]
  public int Drop { get; set; }

  public RegressBonusRewardT() {
    this.Id = 0;
    this.Grade = 1;
    this.NeedScore = 0;
    this.Drop = 0;
  }
}


static public class RegressBonusRewardVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Grade*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*NeedScore*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Drop*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
