// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EntityOwnerData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EntityOwnerData GetRootAsEntityOwnerData(ByteBuffer _bb) { return GetRootAsEntityOwnerData(_bb, new EntityOwnerData()); }
  public static EntityOwnerData GetRootAsEntityOwnerData(ByteBuffer _bb, EntityOwnerData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityOwnerData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Guid { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuidBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetGuidBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetGuidArray() { return __p.__vector_as_array<byte>(4); }
  public string Owner { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOwnerBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetOwnerBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetOwnerArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.EntityOwnerData> CreateEntityOwnerData(FlatBufferBuilder builder,
      StringOffset guidOffset = default(StringOffset),
      StringOffset ownerOffset = default(StringOffset)) {
    builder.StartTable(2);
    EntityOwnerData.AddOwner(builder, ownerOffset);
    EntityOwnerData.AddGuid(builder, guidOffset);
    return EntityOwnerData.EndEntityOwnerData(builder);
  }

  public static void StartEntityOwnerData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddGuid(FlatBufferBuilder builder, StringOffset guidOffset) { builder.AddOffset(0, guidOffset.Value, 0); }
  public static void AddOwner(FlatBufferBuilder builder, StringOffset ownerOffset) { builder.AddOffset(1, ownerOffset.Value, 0); }
  public static Offset<WWParser.Defs.EntityOwnerData> EndEntityOwnerData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.EntityOwnerData>(o);
  }
  public EntityOwnerDataT UnPack() {
    var _o = new EntityOwnerDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EntityOwnerDataT _o) {
    _o.Guid = this.Guid;
    _o.Owner = this.Owner;
  }
  public static Offset<WWParser.Defs.EntityOwnerData> Pack(FlatBufferBuilder builder, EntityOwnerDataT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.EntityOwnerData>);
    var _guid = _o.Guid == null ? default(StringOffset) : builder.CreateString(_o.Guid);
    var _owner = _o.Owner == null ? default(StringOffset) : builder.CreateString(_o.Owner);
    return CreateEntityOwnerData(
      builder,
      _guid,
      _owner);
  }
}

public class EntityOwnerDataT
{
  [Newtonsoft.Json.JsonProperty("guid")]
  public string Guid { get; set; }
  [Newtonsoft.Json.JsonProperty("owner")]
  public string Owner { get; set; }

  public EntityOwnerDataT() {
    this.Guid = null;
    this.Owner = null;
  }
}


static public class EntityOwnerDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Guid*/, false)
      && verifier.VerifyString(tablePos, 6 /*Owner*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
