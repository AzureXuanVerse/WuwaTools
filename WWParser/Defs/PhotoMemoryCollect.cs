// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhotoMemoryCollect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhotoMemoryCollect GetRootAsPhotoMemoryCollect(ByteBuffer _bb) { return GetRootAsPhotoMemoryCollect(_bb, new PhotoMemoryCollect()); }
  public static PhotoMemoryCollect GetRootAsPhotoMemoryCollect(ByteBuffer _bb, PhotoMemoryCollect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhotoMemoryCollect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TopicId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int Rank { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string ThemeBg { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetThemeBgBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetThemeBgBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetThemeBgArray() { return __p.__vector_as_array<byte>(12); }
  public string BgResourcem { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgResourcemBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetBgResourcemBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetBgResourcemArray() { return __p.__vector_as_array<byte>(14); }
  public string BgResourcef { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgResourcefBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetBgResourcefBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetBgResourcefArray() { return __p.__vector_as_array<byte>(16); }
  public string Title { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(18); }
  public string TipsDesc { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTipsDescBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetTipsDescBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetTipsDescArray() { return __p.__vector_as_array<byte>(20); }
  public int ClueId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(24); }
  public int DropId { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TraceEntityId { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TrackMapId { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TraceMarkId { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QuestId { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QuestIdList(int j) { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int QuestIdListLength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetQuestIdListBytes() { return __p.__vector_as_span<int>(36, 4); }
#else
  public ArraySegment<byte>? GetQuestIdListBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public int[] GetQuestIdListArray() { return __p.__vector_as_array<int>(36); }

  public static Offset<WWParser.Defs.PhotoMemoryCollect> CreatePhotoMemoryCollect(FlatBufferBuilder builder,
      int id = 0,
      int topic_id = 0,
      int type = 1,
      int rank = 0,
      StringOffset theme_bgOffset = default(StringOffset),
      StringOffset bg_resourcemOffset = default(StringOffset),
      StringOffset bg_resourcefOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset tips_descOffset = default(StringOffset),
      int clue_id = 0,
      StringOffset descOffset = default(StringOffset),
      int drop_id = 0,
      int trace_entity_id = 0,
      int track_map_id = 0,
      int trace_mark_id = 0,
      int quest_id = 0,
      VectorOffset quest_id_listOffset = default(VectorOffset)) {
    builder.StartTable(17);
    PhotoMemoryCollect.AddQuestIdList(builder, quest_id_listOffset);
    PhotoMemoryCollect.AddQuestId(builder, quest_id);
    PhotoMemoryCollect.AddTraceMarkId(builder, trace_mark_id);
    PhotoMemoryCollect.AddTrackMapId(builder, track_map_id);
    PhotoMemoryCollect.AddTraceEntityId(builder, trace_entity_id);
    PhotoMemoryCollect.AddDropId(builder, drop_id);
    PhotoMemoryCollect.AddDesc(builder, descOffset);
    PhotoMemoryCollect.AddClueId(builder, clue_id);
    PhotoMemoryCollect.AddTipsDesc(builder, tips_descOffset);
    PhotoMemoryCollect.AddTitle(builder, titleOffset);
    PhotoMemoryCollect.AddBgResourcef(builder, bg_resourcefOffset);
    PhotoMemoryCollect.AddBgResourcem(builder, bg_resourcemOffset);
    PhotoMemoryCollect.AddThemeBg(builder, theme_bgOffset);
    PhotoMemoryCollect.AddRank(builder, rank);
    PhotoMemoryCollect.AddType(builder, type);
    PhotoMemoryCollect.AddTopicId(builder, topic_id);
    PhotoMemoryCollect.AddId(builder, id);
    return PhotoMemoryCollect.EndPhotoMemoryCollect(builder);
  }

  public static void StartPhotoMemoryCollect(FlatBufferBuilder builder) { builder.StartTable(17); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTopicId(FlatBufferBuilder builder, int topicId) { builder.AddInt(1, topicId, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(2, type, 1); }
  public static void AddRank(FlatBufferBuilder builder, int rank) { builder.AddInt(3, rank, 0); }
  public static void AddThemeBg(FlatBufferBuilder builder, StringOffset themeBgOffset) { builder.AddOffset(4, themeBgOffset.Value, 0); }
  public static void AddBgResourcem(FlatBufferBuilder builder, StringOffset bgResourcemOffset) { builder.AddOffset(5, bgResourcemOffset.Value, 0); }
  public static void AddBgResourcef(FlatBufferBuilder builder, StringOffset bgResourcefOffset) { builder.AddOffset(6, bgResourcefOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(7, titleOffset.Value, 0); }
  public static void AddTipsDesc(FlatBufferBuilder builder, StringOffset tipsDescOffset) { builder.AddOffset(8, tipsDescOffset.Value, 0); }
  public static void AddClueId(FlatBufferBuilder builder, int clueId) { builder.AddInt(9, clueId, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(10, descOffset.Value, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(11, dropId, 0); }
  public static void AddTraceEntityId(FlatBufferBuilder builder, int traceEntityId) { builder.AddInt(12, traceEntityId, 0); }
  public static void AddTrackMapId(FlatBufferBuilder builder, int trackMapId) { builder.AddInt(13, trackMapId, 0); }
  public static void AddTraceMarkId(FlatBufferBuilder builder, int traceMarkId) { builder.AddInt(14, traceMarkId, 0); }
  public static void AddQuestId(FlatBufferBuilder builder, int questId) { builder.AddInt(15, questId, 0); }
  public static void AddQuestIdList(FlatBufferBuilder builder, VectorOffset questIdListOffset) { builder.AddOffset(16, questIdListOffset.Value, 0); }
  public static VectorOffset CreateQuestIdListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateQuestIdListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQuestIdListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQuestIdListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartQuestIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.PhotoMemoryCollect> EndPhotoMemoryCollect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhotoMemoryCollect>(o);
  }
  public PhotoMemoryCollectT UnPack() {
    var _o = new PhotoMemoryCollectT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhotoMemoryCollectT _o) {
    _o.Id = this.Id;
    _o.TopicId = this.TopicId;
    _o.Type = this.Type;
    _o.Rank = this.Rank;
    _o.ThemeBg = this.ThemeBg;
    _o.BgResourcem = this.BgResourcem;
    _o.BgResourcef = this.BgResourcef;
    _o.Title = this.Title;
    _o.TipsDesc = this.TipsDesc;
    _o.ClueId = this.ClueId;
    _o.Desc = this.Desc;
    _o.DropId = this.DropId;
    _o.TraceEntityId = this.TraceEntityId;
    _o.TrackMapId = this.TrackMapId;
    _o.TraceMarkId = this.TraceMarkId;
    _o.QuestId = this.QuestId;
    _o.QuestIdList = new List<int>();
    for (var _j = 0; _j < this.QuestIdListLength; ++_j) {_o.QuestIdList.Add(this.QuestIdList(_j));}
  }
  public static Offset<WWParser.Defs.PhotoMemoryCollect> Pack(FlatBufferBuilder builder, PhotoMemoryCollectT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhotoMemoryCollect>);
    var _theme_bg = _o.ThemeBg == null ? default(StringOffset) : builder.CreateString(_o.ThemeBg);
    var _bg_resourcem = _o.BgResourcem == null ? default(StringOffset) : builder.CreateString(_o.BgResourcem);
    var _bg_resourcef = _o.BgResourcef == null ? default(StringOffset) : builder.CreateString(_o.BgResourcef);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _tips_desc = _o.TipsDesc == null ? default(StringOffset) : builder.CreateString(_o.TipsDesc);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _quest_id_list = default(VectorOffset);
    if (_o.QuestIdList != null) {
      var __quest_id_list = _o.QuestIdList.ToArray();
      _quest_id_list = CreateQuestIdListVector(builder, __quest_id_list);
    }
    return CreatePhotoMemoryCollect(
      builder,
      _o.Id,
      _o.TopicId,
      _o.Type,
      _o.Rank,
      _theme_bg,
      _bg_resourcem,
      _bg_resourcef,
      _title,
      _tips_desc,
      _o.ClueId,
      _desc,
      _o.DropId,
      _o.TraceEntityId,
      _o.TrackMapId,
      _o.TraceMarkId,
      _o.QuestId,
      _quest_id_list);
  }
}

public class PhotoMemoryCollectT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("topic_id")]
  public int TopicId { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("rank")]
  public int Rank { get; set; }
  [Newtonsoft.Json.JsonProperty("theme_bg")]
  public string ThemeBg { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_resourcem")]
  public string BgResourcem { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_resourcef")]
  public string BgResourcef { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("tips_desc")]
  public string TipsDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("clue_id")]
  public int ClueId { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }
  [Newtonsoft.Json.JsonProperty("trace_entity_id")]
  public int TraceEntityId { get; set; }
  [Newtonsoft.Json.JsonProperty("track_map_id")]
  public int TrackMapId { get; set; }
  [Newtonsoft.Json.JsonProperty("trace_mark_id")]
  public int TraceMarkId { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_id")]
  public int QuestId { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_id_list")]
  public List<int> QuestIdList { get; set; }

  public PhotoMemoryCollectT() {
    this.Id = 0;
    this.TopicId = 0;
    this.Type = 1;
    this.Rank = 0;
    this.ThemeBg = null;
    this.BgResourcem = null;
    this.BgResourcef = null;
    this.Title = null;
    this.TipsDesc = null;
    this.ClueId = 0;
    this.Desc = null;
    this.DropId = 0;
    this.TraceEntityId = 0;
    this.TrackMapId = 0;
    this.TraceMarkId = 0;
    this.QuestId = 0;
    this.QuestIdList = null;
  }
}


static public class PhotoMemoryCollectVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*TopicId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Rank*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*ThemeBg*/, false)
      && verifier.VerifyString(tablePos, 14 /*BgResourcem*/, false)
      && verifier.VerifyString(tablePos, 16 /*BgResourcef*/, false)
      && verifier.VerifyString(tablePos, 18 /*Title*/, false)
      && verifier.VerifyString(tablePos, 20 /*TipsDesc*/, false)
      && verifier.VerifyField(tablePos, 22 /*ClueId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 24 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 26 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*TraceEntityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*TrackMapId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*TraceMarkId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*QuestId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 36 /*QuestIdList*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
