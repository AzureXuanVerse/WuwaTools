// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FishingEntrust : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FishingEntrust GetRootAsFishingEntrust(ByteBuffer _bb) { return GetRootAsFishingEntrust(_bb, new FishingEntrust()); }
  public static FishingEntrust GetRootAsFishingEntrust(ByteBuffer _bb, FishingEntrust obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FishingEntrust __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public bool IsNight { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(10); }
  public int PreviewItem { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Star { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntrustType { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntrustPool { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int UnlockCondition { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? EntrustTarget(int j) { int o = __p.__offset(22); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntrustTargetLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int EntrustDestination { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? EntrustReward(int j) { int o = __p.__offset(26); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntrustRewardLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int AccessPath { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntString? TargetDesText(int j) { int o = __p.__offset(30); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TargetDesTextLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.FishingEntrust> CreateFishingEntrust(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      bool is_night = false,
      StringOffset descOffset = default(StringOffset),
      int preview_item = 0,
      int star = 0,
      int entrust_type = 0,
      int entrust_pool = 0,
      int unlock_condition = 0,
      VectorOffset entrust_targetOffset = default(VectorOffset),
      int entrust_destination = 0,
      VectorOffset entrust_rewardOffset = default(VectorOffset),
      int access_path = 0,
      VectorOffset target_des_textOffset = default(VectorOffset)) {
    builder.StartTable(14);
    FishingEntrust.AddTargetDesText(builder, target_des_textOffset);
    FishingEntrust.AddAccessPath(builder, access_path);
    FishingEntrust.AddEntrustReward(builder, entrust_rewardOffset);
    FishingEntrust.AddEntrustDestination(builder, entrust_destination);
    FishingEntrust.AddEntrustTarget(builder, entrust_targetOffset);
    FishingEntrust.AddUnlockCondition(builder, unlock_condition);
    FishingEntrust.AddEntrustPool(builder, entrust_pool);
    FishingEntrust.AddEntrustType(builder, entrust_type);
    FishingEntrust.AddStar(builder, star);
    FishingEntrust.AddPreviewItem(builder, preview_item);
    FishingEntrust.AddDesc(builder, descOffset);
    FishingEntrust.AddName(builder, nameOffset);
    FishingEntrust.AddId(builder, id);
    FishingEntrust.AddIsNight(builder, is_night);
    return FishingEntrust.EndFishingEntrust(builder);
  }

  public static void StartFishingEntrust(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddIsNight(FlatBufferBuilder builder, bool isNight) { builder.AddBool(2, isNight, false); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(3, descOffset.Value, 0); }
  public static void AddPreviewItem(FlatBufferBuilder builder, int previewItem) { builder.AddInt(4, previewItem, 0); }
  public static void AddStar(FlatBufferBuilder builder, int star) { builder.AddInt(5, star, 0); }
  public static void AddEntrustType(FlatBufferBuilder builder, int entrustType) { builder.AddInt(6, entrustType, 0); }
  public static void AddEntrustPool(FlatBufferBuilder builder, int entrustPool) { builder.AddInt(7, entrustPool, 0); }
  public static void AddUnlockCondition(FlatBufferBuilder builder, int unlockCondition) { builder.AddInt(8, unlockCondition, 0); }
  public static void AddEntrustTarget(FlatBufferBuilder builder, VectorOffset entrustTargetOffset) { builder.AddOffset(9, entrustTargetOffset.Value, 0); }
  public static VectorOffset CreateEntrustTargetVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntrustTargetVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntrustTargetVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntrustTargetVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEntrustTargetVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEntrustDestination(FlatBufferBuilder builder, int entrustDestination) { builder.AddInt(10, entrustDestination, 0); }
  public static void AddEntrustReward(FlatBufferBuilder builder, VectorOffset entrustRewardOffset) { builder.AddOffset(11, entrustRewardOffset.Value, 0); }
  public static VectorOffset CreateEntrustRewardVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntrustRewardVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntrustRewardVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntrustRewardVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEntrustRewardVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAccessPath(FlatBufferBuilder builder, int accessPath) { builder.AddInt(12, accessPath, 0); }
  public static void AddTargetDesText(FlatBufferBuilder builder, VectorOffset targetDesTextOffset) { builder.AddOffset(13, targetDesTextOffset.Value, 0); }
  public static VectorOffset CreateTargetDesTextVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTargetDesTextVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTargetDesTextVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTargetDesTextVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTargetDesTextVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.FishingEntrust> EndFishingEntrust(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FishingEntrust>(o);
  }
  public FishingEntrustT UnPack() {
    var _o = new FishingEntrustT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FishingEntrustT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.IsNight = this.IsNight;
    _o.Desc = this.Desc;
    _o.PreviewItem = this.PreviewItem;
    _o.Star = this.Star;
    _o.EntrustType = this.EntrustType;
    _o.EntrustPool = this.EntrustPool;
    _o.UnlockCondition = this.UnlockCondition;
    _o.EntrustTarget = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.EntrustTargetLength; ++_j) {_o.EntrustTarget.Add(this.EntrustTarget(_j).HasValue ? this.EntrustTarget(_j).Value.UnPack() : null);}
    _o.EntrustDestination = this.EntrustDestination;
    _o.EntrustReward = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.EntrustRewardLength; ++_j) {_o.EntrustReward.Add(this.EntrustReward(_j).HasValue ? this.EntrustReward(_j).Value.UnPack() : null);}
    _o.AccessPath = this.AccessPath;
    _o.TargetDesText = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.TargetDesTextLength; ++_j) {_o.TargetDesText.Add(this.TargetDesText(_j).HasValue ? this.TargetDesText(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.FishingEntrust> Pack(FlatBufferBuilder builder, FishingEntrustT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FishingEntrust>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _entrust_target = default(VectorOffset);
    if (_o.EntrustTarget != null) {
      var __entrust_target = new Offset<WWParser.Defs.DicIntInt>[_o.EntrustTarget.Count];
      for (var _j = 0; _j < __entrust_target.Length; ++_j) { __entrust_target[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.EntrustTarget[_j]); }
      _entrust_target = CreateEntrustTargetVector(builder, __entrust_target);
    }
    var _entrust_reward = default(VectorOffset);
    if (_o.EntrustReward != null) {
      var __entrust_reward = new Offset<WWParser.Defs.DicIntInt>[_o.EntrustReward.Count];
      for (var _j = 0; _j < __entrust_reward.Length; ++_j) { __entrust_reward[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.EntrustReward[_j]); }
      _entrust_reward = CreateEntrustRewardVector(builder, __entrust_reward);
    }
    var _target_des_text = default(VectorOffset);
    if (_o.TargetDesText != null) {
      var __target_des_text = new Offset<WWParser.Defs.DicIntString>[_o.TargetDesText.Count];
      for (var _j = 0; _j < __target_des_text.Length; ++_j) { __target_des_text[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.TargetDesText[_j]); }
      _target_des_text = CreateTargetDesTextVector(builder, __target_des_text);
    }
    return CreateFishingEntrust(
      builder,
      _o.Id,
      _name,
      _o.IsNight,
      _desc,
      _o.PreviewItem,
      _o.Star,
      _o.EntrustType,
      _o.EntrustPool,
      _o.UnlockCondition,
      _entrust_target,
      _o.EntrustDestination,
      _entrust_reward,
      _o.AccessPath,
      _target_des_text);
  }
}

public class FishingEntrustT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("is_night")]
  public bool IsNight { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("preview_item")]
  public int PreviewItem { get; set; }
  [Newtonsoft.Json.JsonProperty("star")]
  public int Star { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_type")]
  public int EntrustType { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_pool")]
  public int EntrustPool { get; set; }
  [Newtonsoft.Json.JsonProperty("unlock_condition")]
  public int UnlockCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_target")]
  public List<WWParser.Defs.DicIntIntT> EntrustTarget { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_destination")]
  public int EntrustDestination { get; set; }
  [Newtonsoft.Json.JsonProperty("entrust_reward")]
  public List<WWParser.Defs.DicIntIntT> EntrustReward { get; set; }
  [Newtonsoft.Json.JsonProperty("access_path")]
  public int AccessPath { get; set; }
  [Newtonsoft.Json.JsonProperty("target_des_text")]
  public List<WWParser.Defs.DicIntStringT> TargetDesText { get; set; }

  public FishingEntrustT() {
    this.Id = 0;
    this.Name = null;
    this.IsNight = false;
    this.Desc = null;
    this.PreviewItem = 0;
    this.Star = 0;
    this.EntrustType = 0;
    this.EntrustPool = 0;
    this.UnlockCondition = 0;
    this.EntrustTarget = null;
    this.EntrustDestination = 0;
    this.EntrustReward = null;
    this.AccessPath = 0;
    this.TargetDesText = null;
  }
}


static public class FishingEntrustVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyField(tablePos, 8 /*IsNight*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*Desc*/, false)
      && verifier.VerifyField(tablePos, 12 /*PreviewItem*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*Star*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*EntrustType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*EntrustPool*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*UnlockCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 22 /*EntrustTarget*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 24 /*EntrustDestination*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 26 /*EntrustReward*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 28 /*AccessPath*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 30 /*TargetDesText*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
