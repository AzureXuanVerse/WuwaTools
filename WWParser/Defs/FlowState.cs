// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FlowState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FlowState GetRootAsFlowState(ByteBuffer _bb) { return GetRootAsFlowState(_bb, new FlowState()); }
  public static FlowState GetRootAsFlowState(ByteBuffer _bb, FlowState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FlowState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string StateKey { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStateKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetStateKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetStateKeyArray() { return __p.__vector_as_array<byte>(4); }
  public int Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool KeepBgm { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Pos { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPosBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPosBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPosArray() { return __p.__vector_as_array<byte>(10); }
  public string Actions { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActionsBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetActionsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetActionsArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<WWParser.Defs.FlowState> CreateFlowState(FlatBufferBuilder builder,
      StringOffset state_keyOffset = default(StringOffset),
      int id = 0,
      bool keep_bgm = false,
      StringOffset posOffset = default(StringOffset),
      StringOffset actionsOffset = default(StringOffset)) {
    builder.StartTable(5);
    FlowState.AddActions(builder, actionsOffset);
    FlowState.AddPos(builder, posOffset);
    FlowState.AddId(builder, id);
    FlowState.AddStateKey(builder, state_keyOffset);
    FlowState.AddKeepBgm(builder, keep_bgm);
    return FlowState.EndFlowState(builder);
  }

  public static void StartFlowState(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddStateKey(FlatBufferBuilder builder, StringOffset stateKeyOffset) { builder.AddOffset(0, stateKeyOffset.Value, 0); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(1, id, 0); }
  public static void AddKeepBgm(FlatBufferBuilder builder, bool keepBgm) { builder.AddBool(2, keepBgm, false); }
  public static void AddPos(FlatBufferBuilder builder, StringOffset posOffset) { builder.AddOffset(3, posOffset.Value, 0); }
  public static void AddActions(FlatBufferBuilder builder, StringOffset actionsOffset) { builder.AddOffset(4, actionsOffset.Value, 0); }
  public static Offset<WWParser.Defs.FlowState> EndFlowState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FlowState>(o);
  }
  public FlowStateT UnPack() {
    var _o = new FlowStateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FlowStateT _o) {
    _o.StateKey = this.StateKey;
    _o.Id = this.Id;
    _o.KeepBgm = this.KeepBgm;
    _o.Pos = this.Pos;
    _o.Actions = this.Actions;
  }
  public static Offset<WWParser.Defs.FlowState> Pack(FlatBufferBuilder builder, FlowStateT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FlowState>);
    var _state_key = _o.StateKey == null ? default(StringOffset) : builder.CreateString(_o.StateKey);
    var _pos = _o.Pos == null ? default(StringOffset) : builder.CreateString(_o.Pos);
    var _actions = _o.Actions == null ? default(StringOffset) : builder.CreateString(_o.Actions);
    return CreateFlowState(
      builder,
      _state_key,
      _o.Id,
      _o.KeepBgm,
      _pos,
      _actions);
  }
}

public class FlowStateT
{
  [Newtonsoft.Json.JsonProperty("state_key")]
  public string StateKey { get; set; }
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("keep_bgm")]
  public bool KeepBgm { get; set; }
  [Newtonsoft.Json.JsonProperty("pos")]
  public string Pos { get; set; }
  [Newtonsoft.Json.JsonProperty("actions")]
  public string Actions { get; set; }

  public FlowStateT() {
    this.StateKey = null;
    this.Id = 0;
    this.KeepBgm = false;
    this.Pos = null;
    this.Actions = null;
  }
}


static public class FlowStateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*StateKey*/, false)
      && verifier.VerifyField(tablePos, 6 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*KeepBgm*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*Pos*/, false)
      && verifier.VerifyString(tablePos, 12 /*Actions*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
