// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleBirthday : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleBirthday GetRootAsRoleBirthday(ByteBuffer _bb) { return GetRootAsRoleBirthday(_bb, new RoleBirthday()); }
  public static RoleBirthday GetRootAsRoleBirthday(ByteBuffer _bb, RoleBirthday obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleBirthday __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RoleId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Priority { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public string CardTextKey { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCardTextKeyBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCardTextKeyBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCardTextKeyArray() { return __p.__vector_as_array<byte>(10); }
  public string VoiceEvent { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVoiceEventBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetVoiceEventBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetVoiceEventArray() { return __p.__vector_as_array<byte>(12); }
  public string SceneCameraId { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSceneCameraIdBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetSceneCameraIdBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetSceneCameraIdArray() { return __p.__vector_as_array<byte>(14); }
  public string CardCameraId { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCardCameraIdBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetCardCameraIdBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetCardCameraIdArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<WWParser.Defs.RoleBirthday> CreateRoleBirthday(FlatBufferBuilder builder,
      int role_id = 0,
      int priority = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset card_text_keyOffset = default(StringOffset),
      StringOffset voice_eventOffset = default(StringOffset),
      StringOffset scene_camera_idOffset = default(StringOffset),
      StringOffset card_camera_idOffset = default(StringOffset)) {
    builder.StartTable(7);
    RoleBirthday.AddCardCameraId(builder, card_camera_idOffset);
    RoleBirthday.AddSceneCameraId(builder, scene_camera_idOffset);
    RoleBirthday.AddVoiceEvent(builder, voice_eventOffset);
    RoleBirthday.AddCardTextKey(builder, card_text_keyOffset);
    RoleBirthday.AddName(builder, nameOffset);
    RoleBirthday.AddPriority(builder, priority);
    RoleBirthday.AddRoleId(builder, role_id);
    return RoleBirthday.EndRoleBirthday(builder);
  }

  public static void StartRoleBirthday(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(0, roleId, 0); }
  public static void AddPriority(FlatBufferBuilder builder, int priority) { builder.AddInt(1, priority, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddCardTextKey(FlatBufferBuilder builder, StringOffset cardTextKeyOffset) { builder.AddOffset(3, cardTextKeyOffset.Value, 0); }
  public static void AddVoiceEvent(FlatBufferBuilder builder, StringOffset voiceEventOffset) { builder.AddOffset(4, voiceEventOffset.Value, 0); }
  public static void AddSceneCameraId(FlatBufferBuilder builder, StringOffset sceneCameraIdOffset) { builder.AddOffset(5, sceneCameraIdOffset.Value, 0); }
  public static void AddCardCameraId(FlatBufferBuilder builder, StringOffset cardCameraIdOffset) { builder.AddOffset(6, cardCameraIdOffset.Value, 0); }
  public static Offset<WWParser.Defs.RoleBirthday> EndRoleBirthday(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleBirthday>(o);
  }
  public RoleBirthdayT UnPack() {
    var _o = new RoleBirthdayT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleBirthdayT _o) {
    _o.RoleId = this.RoleId;
    _o.Priority = this.Priority;
    _o.Name = this.Name;
    _o.CardTextKey = this.CardTextKey;
    _o.VoiceEvent = this.VoiceEvent;
    _o.SceneCameraId = this.SceneCameraId;
    _o.CardCameraId = this.CardCameraId;
  }
  public static Offset<WWParser.Defs.RoleBirthday> Pack(FlatBufferBuilder builder, RoleBirthdayT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleBirthday>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _card_text_key = _o.CardTextKey == null ? default(StringOffset) : builder.CreateString(_o.CardTextKey);
    var _voice_event = _o.VoiceEvent == null ? default(StringOffset) : builder.CreateString(_o.VoiceEvent);
    var _scene_camera_id = _o.SceneCameraId == null ? default(StringOffset) : builder.CreateString(_o.SceneCameraId);
    var _card_camera_id = _o.CardCameraId == null ? default(StringOffset) : builder.CreateString(_o.CardCameraId);
    return CreateRoleBirthday(
      builder,
      _o.RoleId,
      _o.Priority,
      _name,
      _card_text_key,
      _voice_event,
      _scene_camera_id,
      _card_camera_id);
  }
}

public class RoleBirthdayT
{
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("priority")]
  public int Priority { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("card_text_key")]
  public string CardTextKey { get; set; }
  [Newtonsoft.Json.JsonProperty("voice_event")]
  public string VoiceEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("scene_camera_id")]
  public string SceneCameraId { get; set; }
  [Newtonsoft.Json.JsonProperty("card_camera_id")]
  public string CardCameraId { get; set; }

  public RoleBirthdayT() {
    this.RoleId = 0;
    this.Priority = 0;
    this.Name = null;
    this.CardTextKey = null;
    this.VoiceEvent = null;
    this.SceneCameraId = null;
    this.CardCameraId = null;
  }
}


static public class RoleBirthdayVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Priority*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyString(tablePos, 10 /*CardTextKey*/, false)
      && verifier.VerifyString(tablePos, 12 /*VoiceEvent*/, false)
      && verifier.VerifyString(tablePos, 14 /*SceneCameraId*/, false)
      && verifier.VerifyString(tablePos, 16 /*CardCameraId*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
