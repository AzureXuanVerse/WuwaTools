// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ExploreScore : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ExploreScore GetRootAsExploreScore(ByteBuffer _bb) { return GetRootAsExploreScore(_bb, new ExploreScore()); }
  public static ExploreScore GetRootAsExploreScore(ByteBuffer _bb, ExploreScore obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ExploreScore __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Area { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? ExploreScore_(int j) { int o = __p.__offset(6); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ExploreScore_Length { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.ExploreScore> CreateExploreScore(FlatBufferBuilder builder,
      int area = 0,
      VectorOffset explore_scoreOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ExploreScore.AddExploreScore(builder, explore_scoreOffset);
    ExploreScore.AddArea(builder, area);
    return ExploreScore.EndExploreScore(builder);
  }

  public static void StartExploreScore(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddArea(FlatBufferBuilder builder, int area) { builder.AddInt(0, area, 0); }
  public static void AddExploreScore(FlatBufferBuilder builder, VectorOffset exploreScoreOffset) { builder.AddOffset(1, exploreScoreOffset.Value, 0); }
  public static VectorOffset CreateExploreScoreVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateExploreScoreVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExploreScoreVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExploreScoreVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartExploreScoreVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.ExploreScore> EndExploreScore(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ExploreScore>(o);
  }
  public ExploreScoreT UnPack() {
    var _o = new ExploreScoreT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ExploreScoreT _o) {
    _o.Area = this.Area;
    _o.ExploreScore_ = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.ExploreScore_Length; ++_j) {_o.ExploreScore_.Add(this.ExploreScore_(_j).HasValue ? this.ExploreScore_(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.ExploreScore> Pack(FlatBufferBuilder builder, ExploreScoreT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ExploreScore>);
    var _explore_score = default(VectorOffset);
    if (_o.ExploreScore_ != null) {
      var __explore_score = new Offset<WWParser.Defs.DicIntInt>[_o.ExploreScore_.Count];
      for (var _j = 0; _j < __explore_score.Length; ++_j) { __explore_score[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.ExploreScore_[_j]); }
      _explore_score = CreateExploreScoreVector(builder, __explore_score);
    }
    return CreateExploreScore(
      builder,
      _o.Area,
      _explore_score);
  }
}

public class ExploreScoreT
{
  [Newtonsoft.Json.JsonProperty("area")]
  public int Area { get; set; }
  [Newtonsoft.Json.JsonProperty("explore_score")]
  public List<WWParser.Defs.DicIntIntT> ExploreScore_ { get; set; }

  public ExploreScoreT() {
    this.Area = 0;
    this.ExploreScore_ = null;
  }
}


static public class ExploreScoreVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Area*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*ExploreScore*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
