// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PlayerExp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PlayerExp GetRootAsPlayerExp(ByteBuffer _bb) { return GetRootAsPlayerExp(_bb, new PlayerExp()); }
  public static PlayerExp GetRootAsPlayerExp(ByteBuffer _bb, PlayerExp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerExp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int PlayerLevel { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayerExp_ { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Condition { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConditionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetConditionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetConditionArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<WWParser.Defs.PlayerExp> CreatePlayerExp(FlatBufferBuilder builder,
      int player_level = 0,
      int player_exp = 0,
      StringOffset conditionOffset = default(StringOffset)) {
    builder.StartTable(3);
    PlayerExp.AddCondition(builder, conditionOffset);
    PlayerExp.AddPlayerExp(builder, player_exp);
    PlayerExp.AddPlayerLevel(builder, player_level);
    return PlayerExp.EndPlayerExp(builder);
  }

  public static void StartPlayerExp(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPlayerLevel(FlatBufferBuilder builder, int playerLevel) { builder.AddInt(0, playerLevel, 0); }
  public static void AddPlayerExp(FlatBufferBuilder builder, int playerExp) { builder.AddInt(1, playerExp, 0); }
  public static void AddCondition(FlatBufferBuilder builder, StringOffset conditionOffset) { builder.AddOffset(2, conditionOffset.Value, 0); }
  public static Offset<WWParser.Defs.PlayerExp> EndPlayerExp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PlayerExp>(o);
  }
  public PlayerExpT UnPack() {
    var _o = new PlayerExpT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PlayerExpT _o) {
    _o.PlayerLevel = this.PlayerLevel;
    _o.PlayerExp_ = this.PlayerExp_;
    _o.Condition = this.Condition;
  }
  public static Offset<WWParser.Defs.PlayerExp> Pack(FlatBufferBuilder builder, PlayerExpT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PlayerExp>);
    var _condition = _o.Condition == null ? default(StringOffset) : builder.CreateString(_o.Condition);
    return CreatePlayerExp(
      builder,
      _o.PlayerLevel,
      _o.PlayerExp_,
      _condition);
  }
}

public class PlayerExpT
{
  [Newtonsoft.Json.JsonProperty("player_level")]
  public int PlayerLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("player_exp")]
  public int PlayerExp_ { get; set; }
  [Newtonsoft.Json.JsonProperty("condition")]
  public string Condition { get; set; }

  public PlayerExpT() {
    this.PlayerLevel = 0;
    this.PlayerExp_ = 0;
    this.Condition = null;
  }
}


static public class PlayerExpVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PlayerLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*PlayerExp*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Condition*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
