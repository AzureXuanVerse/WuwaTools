// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UiPlayItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static UiPlayItem GetRootAsUiPlayItem(ByteBuffer _bb) { return GetRootAsUiPlayItem(_bb, new UiPlayItem()); }
  public static UiPlayItem GetRootAsUiPlayItem(ByteBuffer _bb, UiPlayItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UiPlayItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Type { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(6); }
  public string UiPlayKey { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUiPlayKeyBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetUiPlayKeyBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetUiPlayKeyArray() { return __p.__vector_as_array<byte>(8); }
  public int FinishItem { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.UiPlayItem> CreateUiPlayItem(FlatBufferBuilder builder,
      int id = 0,
      StringOffset typeOffset = default(StringOffset),
      StringOffset ui_play_keyOffset = default(StringOffset),
      int finish_item = 0) {
    builder.StartTable(4);
    UiPlayItem.AddFinishItem(builder, finish_item);
    UiPlayItem.AddUiPlayKey(builder, ui_play_keyOffset);
    UiPlayItem.AddType(builder, typeOffset);
    UiPlayItem.AddId(builder, id);
    return UiPlayItem.EndUiPlayItem(builder);
  }

  public static void StartUiPlayItem(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(1, typeOffset.Value, 0); }
  public static void AddUiPlayKey(FlatBufferBuilder builder, StringOffset uiPlayKeyOffset) { builder.AddOffset(2, uiPlayKeyOffset.Value, 0); }
  public static void AddFinishItem(FlatBufferBuilder builder, int finishItem) { builder.AddInt(3, finishItem, 0); }
  public static Offset<WWParser.Defs.UiPlayItem> EndUiPlayItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.UiPlayItem>(o);
  }
  public UiPlayItemT UnPack() {
    var _o = new UiPlayItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(UiPlayItemT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.UiPlayKey = this.UiPlayKey;
    _o.FinishItem = this.FinishItem;
  }
  public static Offset<WWParser.Defs.UiPlayItem> Pack(FlatBufferBuilder builder, UiPlayItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.UiPlayItem>);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _ui_play_key = _o.UiPlayKey == null ? default(StringOffset) : builder.CreateString(_o.UiPlayKey);
    return CreateUiPlayItem(
      builder,
      _o.Id,
      _type,
      _ui_play_key,
      _o.FinishItem);
  }
}

public class UiPlayItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public string Type { get; set; }
  [Newtonsoft.Json.JsonProperty("ui_play_key")]
  public string UiPlayKey { get; set; }
  [Newtonsoft.Json.JsonProperty("finish_item")]
  public int FinishItem { get; set; }

  public UiPlayItemT() {
    this.Id = 0;
    this.Type = null;
    this.UiPlayKey = null;
    this.FinishItem = 0;
  }
}


static public class UiPlayItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Type*/, false)
      && verifier.VerifyString(tablePos, 8 /*UiPlayKey*/, false)
      && verifier.VerifyField(tablePos, 10 /*FinishItem*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
