// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResEnd GetRootAsRogueResEnd(ByteBuffer _bb) { return GetRootAsRogueResEnd(_bb, new RogueResEnd()); }
  public static RogueResEnd GetRootAsRogueResEnd(ByteBuffer _bb, RogueResEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SeasonId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InstId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Cgf { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCgfBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCgfBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCgfArray() { return __p.__vector_as_array<byte>(10); }
  public string Cgm { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCgmBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetCgmBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCgmArray() { return __p.__vector_as_array<byte>(12); }
  public string Title { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(14); }
  public string Desc { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(16); }
  public string WinTitle { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWinTitleBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetWinTitleBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetWinTitleArray() { return __p.__vector_as_array<byte>(18); }
  public string WinDesc { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWinDescBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetWinDescBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetWinDescArray() { return __p.__vector_as_array<byte>(20); }
  public string LoseTitle { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLoseTitleBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetLoseTitleBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetLoseTitleArray() { return __p.__vector_as_array<byte>(22); }
  public string LoseDesc { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLoseDescBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetLoseDescBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetLoseDescArray() { return __p.__vector_as_array<byte>(24); }

  public static Offset<WWParser.Defs.RogueResEnd> CreateRogueResEnd(FlatBufferBuilder builder,
      int id = 0,
      int season_id = 0,
      int inst_id = 0,
      StringOffset cgfOffset = default(StringOffset),
      StringOffset cgmOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset descOffset = default(StringOffset),
      StringOffset win_titleOffset = default(StringOffset),
      StringOffset win_descOffset = default(StringOffset),
      StringOffset lose_titleOffset = default(StringOffset),
      StringOffset lose_descOffset = default(StringOffset)) {
    builder.StartTable(11);
    RogueResEnd.AddLoseDesc(builder, lose_descOffset);
    RogueResEnd.AddLoseTitle(builder, lose_titleOffset);
    RogueResEnd.AddWinDesc(builder, win_descOffset);
    RogueResEnd.AddWinTitle(builder, win_titleOffset);
    RogueResEnd.AddDesc(builder, descOffset);
    RogueResEnd.AddTitle(builder, titleOffset);
    RogueResEnd.AddCgm(builder, cgmOffset);
    RogueResEnd.AddCgf(builder, cgfOffset);
    RogueResEnd.AddInstId(builder, inst_id);
    RogueResEnd.AddSeasonId(builder, season_id);
    RogueResEnd.AddId(builder, id);
    return RogueResEnd.EndRogueResEnd(builder);
  }

  public static void StartRogueResEnd(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddSeasonId(FlatBufferBuilder builder, int seasonId) { builder.AddInt(1, seasonId, 0); }
  public static void AddInstId(FlatBufferBuilder builder, int instId) { builder.AddInt(2, instId, 0); }
  public static void AddCgf(FlatBufferBuilder builder, StringOffset cgfOffset) { builder.AddOffset(3, cgfOffset.Value, 0); }
  public static void AddCgm(FlatBufferBuilder builder, StringOffset cgmOffset) { builder.AddOffset(4, cgmOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(5, titleOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(6, descOffset.Value, 0); }
  public static void AddWinTitle(FlatBufferBuilder builder, StringOffset winTitleOffset) { builder.AddOffset(7, winTitleOffset.Value, 0); }
  public static void AddWinDesc(FlatBufferBuilder builder, StringOffset winDescOffset) { builder.AddOffset(8, winDescOffset.Value, 0); }
  public static void AddLoseTitle(FlatBufferBuilder builder, StringOffset loseTitleOffset) { builder.AddOffset(9, loseTitleOffset.Value, 0); }
  public static void AddLoseDesc(FlatBufferBuilder builder, StringOffset loseDescOffset) { builder.AddOffset(10, loseDescOffset.Value, 0); }
  public static Offset<WWParser.Defs.RogueResEnd> EndRogueResEnd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResEnd>(o);
  }
  public RogueResEndT UnPack() {
    var _o = new RogueResEndT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResEndT _o) {
    _o.Id = this.Id;
    _o.SeasonId = this.SeasonId;
    _o.InstId = this.InstId;
    _o.Cgf = this.Cgf;
    _o.Cgm = this.Cgm;
    _o.Title = this.Title;
    _o.Desc = this.Desc;
    _o.WinTitle = this.WinTitle;
    _o.WinDesc = this.WinDesc;
    _o.LoseTitle = this.LoseTitle;
    _o.LoseDesc = this.LoseDesc;
  }
  public static Offset<WWParser.Defs.RogueResEnd> Pack(FlatBufferBuilder builder, RogueResEndT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResEnd>);
    var _cgf = _o.Cgf == null ? default(StringOffset) : builder.CreateString(_o.Cgf);
    var _cgm = _o.Cgm == null ? default(StringOffset) : builder.CreateString(_o.Cgm);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _win_title = _o.WinTitle == null ? default(StringOffset) : builder.CreateString(_o.WinTitle);
    var _win_desc = _o.WinDesc == null ? default(StringOffset) : builder.CreateString(_o.WinDesc);
    var _lose_title = _o.LoseTitle == null ? default(StringOffset) : builder.CreateString(_o.LoseTitle);
    var _lose_desc = _o.LoseDesc == null ? default(StringOffset) : builder.CreateString(_o.LoseDesc);
    return CreateRogueResEnd(
      builder,
      _o.Id,
      _o.SeasonId,
      _o.InstId,
      _cgf,
      _cgm,
      _title,
      _desc,
      _win_title,
      _win_desc,
      _lose_title,
      _lose_desc);
  }
}

public class RogueResEndT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("season_id")]
  public int SeasonId { get; set; }
  [Newtonsoft.Json.JsonProperty("inst_id")]
  public int InstId { get; set; }
  [Newtonsoft.Json.JsonProperty("cgf")]
  public string Cgf { get; set; }
  [Newtonsoft.Json.JsonProperty("cgm")]
  public string Cgm { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("win_title")]
  public string WinTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("win_desc")]
  public string WinDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("lose_title")]
  public string LoseTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("lose_desc")]
  public string LoseDesc { get; set; }

  public RogueResEndT() {
    this.Id = 0;
    this.SeasonId = 0;
    this.InstId = 0;
    this.Cgf = null;
    this.Cgm = null;
    this.Title = null;
    this.Desc = null;
    this.WinTitle = null;
    this.WinDesc = null;
    this.LoseTitle = null;
    this.LoseDesc = null;
  }
}


static public class RogueResEndVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*SeasonId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*InstId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Cgf*/, false)
      && verifier.VerifyString(tablePos, 12 /*Cgm*/, false)
      && verifier.VerifyString(tablePos, 14 /*Title*/, false)
      && verifier.VerifyString(tablePos, 16 /*Desc*/, false)
      && verifier.VerifyString(tablePos, 18 /*WinTitle*/, false)
      && verifier.VerifyString(tablePos, 20 /*WinDesc*/, false)
      && verifier.VerifyString(tablePos, 22 /*LoseTitle*/, false)
      && verifier.VerifyString(tablePos, 24 /*LoseDesc*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
