// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MapTravelConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static MapTravelConfig GetRootAsMapTravelConfig(ByteBuffer _bb) { return GetRootAsMapTravelConfig(_bb, new MapTravelConfig()); }
  public static MapTravelConfig GetRootAsMapTravelConfig(ByteBuffer _bb, MapTravelConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MapTravelConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ActivityId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExpItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FinalRewardId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntString? TabName(int j) { int o = __p.__offset(12); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TabNameLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntString? TabIcon(int j) { int o = __p.__offset(14); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TabIconLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.MapTravelConfig> CreateMapTravelConfig(FlatBufferBuilder builder,
      int activity_id = 0,
      int max_level = 0,
      int exp_item_id = 0,
      int final_reward_id = 0,
      VectorOffset tab_nameOffset = default(VectorOffset),
      VectorOffset tab_iconOffset = default(VectorOffset)) {
    builder.StartTable(6);
    MapTravelConfig.AddTabIcon(builder, tab_iconOffset);
    MapTravelConfig.AddTabName(builder, tab_nameOffset);
    MapTravelConfig.AddFinalRewardId(builder, final_reward_id);
    MapTravelConfig.AddExpItemId(builder, exp_item_id);
    MapTravelConfig.AddMaxLevel(builder, max_level);
    MapTravelConfig.AddActivityId(builder, activity_id);
    return MapTravelConfig.EndMapTravelConfig(builder);
  }

  public static void StartMapTravelConfig(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(0, activityId, 0); }
  public static void AddMaxLevel(FlatBufferBuilder builder, int maxLevel) { builder.AddInt(1, maxLevel, 0); }
  public static void AddExpItemId(FlatBufferBuilder builder, int expItemId) { builder.AddInt(2, expItemId, 0); }
  public static void AddFinalRewardId(FlatBufferBuilder builder, int finalRewardId) { builder.AddInt(3, finalRewardId, 0); }
  public static void AddTabName(FlatBufferBuilder builder, VectorOffset tabNameOffset) { builder.AddOffset(4, tabNameOffset.Value, 0); }
  public static VectorOffset CreateTabNameVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTabNameVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabNameVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabNameVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTabNameVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTabIcon(FlatBufferBuilder builder, VectorOffset tabIconOffset) { builder.AddOffset(5, tabIconOffset.Value, 0); }
  public static VectorOffset CreateTabIconVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTabIconVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabIconVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabIconVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTabIconVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.MapTravelConfig> EndMapTravelConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.MapTravelConfig>(o);
  }
  public MapTravelConfigT UnPack() {
    var _o = new MapTravelConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MapTravelConfigT _o) {
    _o.ActivityId = this.ActivityId;
    _o.MaxLevel = this.MaxLevel;
    _o.ExpItemId = this.ExpItemId;
    _o.FinalRewardId = this.FinalRewardId;
    _o.TabName = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.TabNameLength; ++_j) {_o.TabName.Add(this.TabName(_j).HasValue ? this.TabName(_j).Value.UnPack() : null);}
    _o.TabIcon = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.TabIconLength; ++_j) {_o.TabIcon.Add(this.TabIcon(_j).HasValue ? this.TabIcon(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.MapTravelConfig> Pack(FlatBufferBuilder builder, MapTravelConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.MapTravelConfig>);
    var _tab_name = default(VectorOffset);
    if (_o.TabName != null) {
      var __tab_name = new Offset<WWParser.Defs.DicIntString>[_o.TabName.Count];
      for (var _j = 0; _j < __tab_name.Length; ++_j) { __tab_name[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.TabName[_j]); }
      _tab_name = CreateTabNameVector(builder, __tab_name);
    }
    var _tab_icon = default(VectorOffset);
    if (_o.TabIcon != null) {
      var __tab_icon = new Offset<WWParser.Defs.DicIntString>[_o.TabIcon.Count];
      for (var _j = 0; _j < __tab_icon.Length; ++_j) { __tab_icon[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.TabIcon[_j]); }
      _tab_icon = CreateTabIconVector(builder, __tab_icon);
    }
    return CreateMapTravelConfig(
      builder,
      _o.ActivityId,
      _o.MaxLevel,
      _o.ExpItemId,
      _o.FinalRewardId,
      _tab_name,
      _tab_icon);
  }
}

public class MapTravelConfigT
{
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("max_level")]
  public int MaxLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("exp_item_id")]
  public int ExpItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("final_reward_id")]
  public int FinalRewardId { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_name")]
  public List<WWParser.Defs.DicIntStringT> TabName { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_icon")]
  public List<WWParser.Defs.DicIntStringT> TabIcon { get; set; }

  public MapTravelConfigT() {
    this.ActivityId = 0;
    this.MaxLevel = 0;
    this.ExpItemId = 0;
    this.FinalRewardId = 0;
    this.TabName = null;
    this.TabIcon = null;
  }
}


static public class MapTravelConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*MaxLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ExpItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*FinalRewardId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 12 /*TabName*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 14 /*TabIcon*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
