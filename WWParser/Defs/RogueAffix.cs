// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueAffix : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueAffix GetRootAsRogueAffix(ByteBuffer _bb) { return GetRootAsRogueAffix(_bb, new RogueAffix()); }
  public static RogueAffix GetRootAsRogueAffix(ByteBuffer _bb, RogueAffix obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueAffix __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public double BuffId(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int BuffIdLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetBuffIdBytes() { return __p.__vector_as_span<double>(6, 8); }
#else
  public ArraySegment<byte>? GetBuffIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public double[] GetBuffIdArray() { return __p.__vector_as_array<double>(6); }
  public string AffixDesc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAffixDescBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetAffixDescBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetAffixDescArray() { return __p.__vector_as_array<byte>(8); }
  public string AffixDescParam(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int AffixDescParamLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string AffixDescSimple { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAffixDescSimpleBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetAffixDescSimpleBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetAffixDescSimpleArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<WWParser.Defs.RogueAffix> CreateRogueAffix(FlatBufferBuilder builder,
      int id = 0,
      VectorOffset buff_idOffset = default(VectorOffset),
      StringOffset affix_descOffset = default(StringOffset),
      VectorOffset affix_desc_paramOffset = default(VectorOffset),
      StringOffset affix_desc_simpleOffset = default(StringOffset)) {
    builder.StartTable(5);
    RogueAffix.AddAffixDescSimple(builder, affix_desc_simpleOffset);
    RogueAffix.AddAffixDescParam(builder, affix_desc_paramOffset);
    RogueAffix.AddAffixDesc(builder, affix_descOffset);
    RogueAffix.AddBuffId(builder, buff_idOffset);
    RogueAffix.AddId(builder, id);
    return RogueAffix.EndRogueAffix(builder);
  }

  public static void StartRogueAffix(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, VectorOffset buffIdOffset) { builder.AddOffset(1, buffIdOffset.Value, 0); }
  public static VectorOffset CreateBuffIdVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBuffIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddAffixDesc(FlatBufferBuilder builder, StringOffset affixDescOffset) { builder.AddOffset(2, affixDescOffset.Value, 0); }
  public static void AddAffixDescParam(FlatBufferBuilder builder, VectorOffset affixDescParamOffset) { builder.AddOffset(3, affixDescParamOffset.Value, 0); }
  public static VectorOffset CreateAffixDescParamVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAffixDescParamVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAffixDescParamVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAffixDescParamVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAffixDescParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAffixDescSimple(FlatBufferBuilder builder, StringOffset affixDescSimpleOffset) { builder.AddOffset(4, affixDescSimpleOffset.Value, 0); }
  public static Offset<WWParser.Defs.RogueAffix> EndRogueAffix(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueAffix>(o);
  }
  public RogueAffixT UnPack() {
    var _o = new RogueAffixT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueAffixT _o) {
    _o.Id = this.Id;
    _o.BuffId = new List<double>();
    for (var _j = 0; _j < this.BuffIdLength; ++_j) {_o.BuffId.Add(this.BuffId(_j));}
    _o.AffixDesc = this.AffixDesc;
    _o.AffixDescParam = new List<string>();
    for (var _j = 0; _j < this.AffixDescParamLength; ++_j) {_o.AffixDescParam.Add(this.AffixDescParam(_j));}
    _o.AffixDescSimple = this.AffixDescSimple;
  }
  public static Offset<WWParser.Defs.RogueAffix> Pack(FlatBufferBuilder builder, RogueAffixT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueAffix>);
    var _buff_id = default(VectorOffset);
    if (_o.BuffId != null) {
      var __buff_id = _o.BuffId.ToArray();
      _buff_id = CreateBuffIdVector(builder, __buff_id);
    }
    var _affix_desc = _o.AffixDesc == null ? default(StringOffset) : builder.CreateString(_o.AffixDesc);
    var _affix_desc_param = default(VectorOffset);
    if (_o.AffixDescParam != null) {
      var __affix_desc_param = new StringOffset[_o.AffixDescParam.Count];
      for (var _j = 0; _j < __affix_desc_param.Length; ++_j) { __affix_desc_param[_j] = builder.CreateString(_o.AffixDescParam[_j]); }
      _affix_desc_param = CreateAffixDescParamVector(builder, __affix_desc_param);
    }
    var _affix_desc_simple = _o.AffixDescSimple == null ? default(StringOffset) : builder.CreateString(_o.AffixDescSimple);
    return CreateRogueAffix(
      builder,
      _o.Id,
      _buff_id,
      _affix_desc,
      _affix_desc_param,
      _affix_desc_simple);
  }
}

public class RogueAffixT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_id")]
  public List<double> BuffId { get; set; }
  [Newtonsoft.Json.JsonProperty("affix_desc")]
  public string AffixDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("affix_desc_param")]
  public List<string> AffixDescParam { get; set; }
  [Newtonsoft.Json.JsonProperty("affix_desc_simple")]
  public string AffixDescSimple { get; set; }

  public RogueAffixT() {
    this.Id = 0;
    this.BuffId = null;
    this.AffixDesc = null;
    this.AffixDescParam = null;
    this.AffixDescSimple = null;
  }
}


static public class RogueAffixVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*BuffId*/, 8 /*double*/, false)
      && verifier.VerifyString(tablePos, 8 /*AffixDesc*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 10 /*AffixDescParam*/, false)
      && verifier.VerifyString(tablePos, 12 /*AffixDescSimple*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
