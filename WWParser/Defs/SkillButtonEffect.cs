// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillButtonEffect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillButtonEffect GetRootAsSkillButtonEffect(ByteBuffer _bb) { return GetRootAsSkillButtonEffect(_bb, new SkillButtonEffect()); }
  public static SkillButtonEffect GetRootAsSkillButtonEffect(ByteBuffer _bb, SkillButtonEffect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillButtonEffect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string NiagaraPath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNiagaraPathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNiagaraPathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNiagaraPathArray() { return __p.__vector_as_array<byte>(8); }
  public int ElementId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Color { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetColorBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetColorBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetColorArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<WWParser.Defs.SkillButtonEffect> CreateSkillButtonEffect(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset niagara_pathOffset = default(StringOffset),
      int element_id = 0,
      StringOffset colorOffset = default(StringOffset)) {
    builder.StartTable(5);
    SkillButtonEffect.AddColor(builder, colorOffset);
    SkillButtonEffect.AddElementId(builder, element_id);
    SkillButtonEffect.AddNiagaraPath(builder, niagara_pathOffset);
    SkillButtonEffect.AddName(builder, nameOffset);
    SkillButtonEffect.AddId(builder, id);
    return SkillButtonEffect.EndSkillButtonEffect(builder);
  }

  public static void StartSkillButtonEffect(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddNiagaraPath(FlatBufferBuilder builder, StringOffset niagaraPathOffset) { builder.AddOffset(2, niagaraPathOffset.Value, 0); }
  public static void AddElementId(FlatBufferBuilder builder, int elementId) { builder.AddInt(3, elementId, 0); }
  public static void AddColor(FlatBufferBuilder builder, StringOffset colorOffset) { builder.AddOffset(4, colorOffset.Value, 0); }
  public static Offset<WWParser.Defs.SkillButtonEffect> EndSkillButtonEffect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillButtonEffect>(o);
  }
  public SkillButtonEffectT UnPack() {
    var _o = new SkillButtonEffectT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillButtonEffectT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.NiagaraPath = this.NiagaraPath;
    _o.ElementId = this.ElementId;
    _o.Color = this.Color;
  }
  public static Offset<WWParser.Defs.SkillButtonEffect> Pack(FlatBufferBuilder builder, SkillButtonEffectT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillButtonEffect>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _niagara_path = _o.NiagaraPath == null ? default(StringOffset) : builder.CreateString(_o.NiagaraPath);
    var _color = _o.Color == null ? default(StringOffset) : builder.CreateString(_o.Color);
    return CreateSkillButtonEffect(
      builder,
      _o.Id,
      _name,
      _niagara_path,
      _o.ElementId,
      _color);
  }
}

public class SkillButtonEffectT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("niagara_path")]
  public string NiagaraPath { get; set; }
  [Newtonsoft.Json.JsonProperty("element_id")]
  public int ElementId { get; set; }
  [Newtonsoft.Json.JsonProperty("color")]
  public string Color { get; set; }

  public SkillButtonEffectT() {
    this.Id = 0;
    this.Name = null;
    this.NiagaraPath = null;
    this.ElementId = 0;
    this.Color = null;
  }
}


static public class SkillButtonEffectVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyString(tablePos, 8 /*NiagaraPath*/, false)
      && verifier.VerifyField(tablePos, 10 /*ElementId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*Color*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
