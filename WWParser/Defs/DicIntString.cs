// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DicIntString : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DicIntString GetRootAsDicIntString(ByteBuffer _bb) { return GetRootAsDicIntString(_bb, new DicIntString()); }
  public static DicIntString GetRootAsDicIntString(ByteBuffer _bb, DicIntString obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DicIntString __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Key { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Value { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetValueBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetValueArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.DicIntString> CreateDicIntString(FlatBufferBuilder builder,
      int key = 0,
      StringOffset valueOffset = default(StringOffset)) {
    builder.StartTable(2);
    DicIntString.AddValue(builder, valueOffset);
    DicIntString.AddKey(builder, key);
    return DicIntString.EndDicIntString(builder);
  }

  public static void StartDicIntString(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKey(FlatBufferBuilder builder, int key) { builder.AddInt(0, key, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<WWParser.Defs.DicIntString> EndDicIntString(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DicIntString>(o);
  }
  public DicIntStringT UnPack() {
    var _o = new DicIntStringT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DicIntStringT _o) {
    _o.Key = this.Key;
    _o.Value = this.Value;
  }
  public static Offset<WWParser.Defs.DicIntString> Pack(FlatBufferBuilder builder, DicIntStringT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DicIntString>);
    var _value = _o.Value == null ? default(StringOffset) : builder.CreateString(_o.Value);
    return CreateDicIntString(
      builder,
      _o.Key,
      _value);
  }
}

public class DicIntStringT
{
  [Newtonsoft.Json.JsonProperty("key")]
  public int Key { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public string Value { get; set; }

  public DicIntStringT() {
    this.Key = 0;
    this.Value = null;
  }
}


static public class DicIntStringVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Key*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Value*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
