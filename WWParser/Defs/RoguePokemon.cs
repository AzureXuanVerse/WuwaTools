// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoguePokemon : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoguePokemon GetRootAsRoguePokemon(ByteBuffer _bb) { return GetRootAsRoguePokemon(_bb, new RoguePokemon()); }
  public static RoguePokemon GetRootAsRoguePokemon(ByteBuffer _bb, RoguePokemon obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoguePokemon __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PhantomItem { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Quality { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string PokemonIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPokemonIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPokemonIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPokemonIconArray() { return __p.__vector_as_array<byte>(10); }
  public string PokemonName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPokemonNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetPokemonNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetPokemonNameArray() { return __p.__vector_as_array<byte>(12); }
  public string PokemonSettleIcon { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPokemonSettleIconBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetPokemonSettleIconBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPokemonSettleIconArray() { return __p.__vector_as_array<byte>(14); }
  public string PokemonSkillDesc { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPokemonSkillDescBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetPokemonSkillDescBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetPokemonSkillDescArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<WWParser.Defs.RoguePokemon> CreateRoguePokemon(FlatBufferBuilder builder,
      int id = 0,
      int phantom_item = 0,
      int quality = 1,
      StringOffset pokemon_iconOffset = default(StringOffset),
      StringOffset pokemon_nameOffset = default(StringOffset),
      StringOffset pokemon_settle_iconOffset = default(StringOffset),
      StringOffset pokemon_skill_descOffset = default(StringOffset)) {
    builder.StartTable(7);
    RoguePokemon.AddPokemonSkillDesc(builder, pokemon_skill_descOffset);
    RoguePokemon.AddPokemonSettleIcon(builder, pokemon_settle_iconOffset);
    RoguePokemon.AddPokemonName(builder, pokemon_nameOffset);
    RoguePokemon.AddPokemonIcon(builder, pokemon_iconOffset);
    RoguePokemon.AddQuality(builder, quality);
    RoguePokemon.AddPhantomItem(builder, phantom_item);
    RoguePokemon.AddId(builder, id);
    return RoguePokemon.EndRoguePokemon(builder);
  }

  public static void StartRoguePokemon(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddPhantomItem(FlatBufferBuilder builder, int phantomItem) { builder.AddInt(1, phantomItem, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int quality) { builder.AddInt(2, quality, 1); }
  public static void AddPokemonIcon(FlatBufferBuilder builder, StringOffset pokemonIconOffset) { builder.AddOffset(3, pokemonIconOffset.Value, 0); }
  public static void AddPokemonName(FlatBufferBuilder builder, StringOffset pokemonNameOffset) { builder.AddOffset(4, pokemonNameOffset.Value, 0); }
  public static void AddPokemonSettleIcon(FlatBufferBuilder builder, StringOffset pokemonSettleIconOffset) { builder.AddOffset(5, pokemonSettleIconOffset.Value, 0); }
  public static void AddPokemonSkillDesc(FlatBufferBuilder builder, StringOffset pokemonSkillDescOffset) { builder.AddOffset(6, pokemonSkillDescOffset.Value, 0); }
  public static Offset<WWParser.Defs.RoguePokemon> EndRoguePokemon(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoguePokemon>(o);
  }
  public RoguePokemonT UnPack() {
    var _o = new RoguePokemonT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoguePokemonT _o) {
    _o.Id = this.Id;
    _o.PhantomItem = this.PhantomItem;
    _o.Quality = this.Quality;
    _o.PokemonIcon = this.PokemonIcon;
    _o.PokemonName = this.PokemonName;
    _o.PokemonSettleIcon = this.PokemonSettleIcon;
    _o.PokemonSkillDesc = this.PokemonSkillDesc;
  }
  public static Offset<WWParser.Defs.RoguePokemon> Pack(FlatBufferBuilder builder, RoguePokemonT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoguePokemon>);
    var _pokemon_icon = _o.PokemonIcon == null ? default(StringOffset) : builder.CreateString(_o.PokemonIcon);
    var _pokemon_name = _o.PokemonName == null ? default(StringOffset) : builder.CreateString(_o.PokemonName);
    var _pokemon_settle_icon = _o.PokemonSettleIcon == null ? default(StringOffset) : builder.CreateString(_o.PokemonSettleIcon);
    var _pokemon_skill_desc = _o.PokemonSkillDesc == null ? default(StringOffset) : builder.CreateString(_o.PokemonSkillDesc);
    return CreateRoguePokemon(
      builder,
      _o.Id,
      _o.PhantomItem,
      _o.Quality,
      _pokemon_icon,
      _pokemon_name,
      _pokemon_settle_icon,
      _pokemon_skill_desc);
  }
}

public class RoguePokemonT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("phantom_item")]
  public int PhantomItem { get; set; }
  [Newtonsoft.Json.JsonProperty("quality")]
  public int Quality { get; set; }
  [Newtonsoft.Json.JsonProperty("pokemon_icon")]
  public string PokemonIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("pokemon_name")]
  public string PokemonName { get; set; }
  [Newtonsoft.Json.JsonProperty("pokemon_settle_icon")]
  public string PokemonSettleIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("pokemon_skill_desc")]
  public string PokemonSkillDesc { get; set; }

  public RoguePokemonT() {
    this.Id = 0;
    this.PhantomItem = 0;
    this.Quality = 1;
    this.PokemonIcon = null;
    this.PokemonName = null;
    this.PokemonSettleIcon = null;
    this.PokemonSkillDesc = null;
  }
}


static public class RoguePokemonVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*PhantomItem*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Quality*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*PokemonIcon*/, false)
      && verifier.VerifyString(tablePos, 12 /*PokemonName*/, false)
      && verifier.VerifyString(tablePos, 14 /*PokemonSettleIcon*/, false)
      && verifier.VerifyString(tablePos, 16 /*PokemonSkillDesc*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
