// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConsumptiveTask : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ConsumptiveTask GetRootAsConsumptiveTask(ByteBuffer _bb) { return GetRootAsConsumptiveTask(_bb, new ConsumptiveTask()); }
  public static ConsumptiveTask GetRootAsConsumptiveTask(ByteBuffer _bb, ConsumptiveTask obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConsumptiveTask __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxFinishCount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardScore { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TaskTab { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string DesString { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDesStringBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDesStringBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDesStringArray() { return __p.__vector_as_array<byte>(12); }
  public int SkipId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.ConsumptiveTask> CreateConsumptiveTask(FlatBufferBuilder builder,
      int id = 0,
      int max_finish_count = 0,
      int reward_score = 0,
      int task_tab = 0,
      StringOffset des_stringOffset = default(StringOffset),
      int skip_id = 0) {
    builder.StartTable(6);
    ConsumptiveTask.AddSkipId(builder, skip_id);
    ConsumptiveTask.AddDesString(builder, des_stringOffset);
    ConsumptiveTask.AddTaskTab(builder, task_tab);
    ConsumptiveTask.AddRewardScore(builder, reward_score);
    ConsumptiveTask.AddMaxFinishCount(builder, max_finish_count);
    ConsumptiveTask.AddId(builder, id);
    return ConsumptiveTask.EndConsumptiveTask(builder);
  }

  public static void StartConsumptiveTask(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddMaxFinishCount(FlatBufferBuilder builder, int maxFinishCount) { builder.AddInt(1, maxFinishCount, 0); }
  public static void AddRewardScore(FlatBufferBuilder builder, int rewardScore) { builder.AddInt(2, rewardScore, 0); }
  public static void AddTaskTab(FlatBufferBuilder builder, int taskTab) { builder.AddInt(3, taskTab, 0); }
  public static void AddDesString(FlatBufferBuilder builder, StringOffset desStringOffset) { builder.AddOffset(4, desStringOffset.Value, 0); }
  public static void AddSkipId(FlatBufferBuilder builder, int skipId) { builder.AddInt(5, skipId, 0); }
  public static Offset<WWParser.Defs.ConsumptiveTask> EndConsumptiveTask(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ConsumptiveTask>(o);
  }
  public ConsumptiveTaskT UnPack() {
    var _o = new ConsumptiveTaskT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ConsumptiveTaskT _o) {
    _o.Id = this.Id;
    _o.MaxFinishCount = this.MaxFinishCount;
    _o.RewardScore = this.RewardScore;
    _o.TaskTab = this.TaskTab;
    _o.DesString = this.DesString;
    _o.SkipId = this.SkipId;
  }
  public static Offset<WWParser.Defs.ConsumptiveTask> Pack(FlatBufferBuilder builder, ConsumptiveTaskT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ConsumptiveTask>);
    var _des_string = _o.DesString == null ? default(StringOffset) : builder.CreateString(_o.DesString);
    return CreateConsumptiveTask(
      builder,
      _o.Id,
      _o.MaxFinishCount,
      _o.RewardScore,
      _o.TaskTab,
      _des_string,
      _o.SkipId);
  }
}

public class ConsumptiveTaskT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("max_finish_count")]
  public int MaxFinishCount { get; set; }
  [Newtonsoft.Json.JsonProperty("reward_score")]
  public int RewardScore { get; set; }
  [Newtonsoft.Json.JsonProperty("task_tab")]
  public int TaskTab { get; set; }
  [Newtonsoft.Json.JsonProperty("des_string")]
  public string DesString { get; set; }
  [Newtonsoft.Json.JsonProperty("skip_id")]
  public int SkipId { get; set; }

  public ConsumptiveTaskT() {
    this.Id = 0;
    this.MaxFinishCount = 0;
    this.RewardScore = 0;
    this.TaskTab = 0;
    this.DesString = null;
    this.SkipId = 0;
  }
}


static public class ConsumptiveTaskVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*MaxFinishCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*RewardScore*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*TaskTab*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*DesString*/, false)
      && verifier.VerifyField(tablePos, 14 /*SkipId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
