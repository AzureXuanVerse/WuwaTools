// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TimePointRewardActivity : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TimePointRewardActivity GetRootAsTimePointRewardActivity(ByteBuffer _bb) { return GetRootAsTimePointRewardActivity(_bb, new TimePointRewardActivity()); }
  public static TimePointRewardActivity GetRootAsTimePointRewardActivity(ByteBuffer _bb, TimePointRewardActivity obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TimePointRewardActivity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? RewardItem(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RewardItemLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.TimePointRewardActivity> CreateTimePointRewardActivity(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      VectorOffset reward_itemOffset = default(VectorOffset)) {
    builder.StartTable(3);
    TimePointRewardActivity.AddRewardItem(builder, reward_itemOffset);
    TimePointRewardActivity.AddActivityId(builder, activity_id);
    TimePointRewardActivity.AddId(builder, id);
    return TimePointRewardActivity.EndTimePointRewardActivity(builder);
  }

  public static void StartTimePointRewardActivity(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddRewardItem(FlatBufferBuilder builder, VectorOffset rewardItemOffset) { builder.AddOffset(2, rewardItemOffset.Value, 0); }
  public static VectorOffset CreateRewardItemVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRewardItemVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRewardItemVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRewardItemVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRewardItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.TimePointRewardActivity> EndTimePointRewardActivity(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TimePointRewardActivity>(o);
  }
  public TimePointRewardActivityT UnPack() {
    var _o = new TimePointRewardActivityT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TimePointRewardActivityT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.RewardItem = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.RewardItemLength; ++_j) {_o.RewardItem.Add(this.RewardItem(_j).HasValue ? this.RewardItem(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.TimePointRewardActivity> Pack(FlatBufferBuilder builder, TimePointRewardActivityT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TimePointRewardActivity>);
    var _reward_item = default(VectorOffset);
    if (_o.RewardItem != null) {
      var __reward_item = new Offset<WWParser.Defs.DicIntInt>[_o.RewardItem.Count];
      for (var _j = 0; _j < __reward_item.Length; ++_j) { __reward_item[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.RewardItem[_j]); }
      _reward_item = CreateRewardItemVector(builder, __reward_item);
    }
    return CreateTimePointRewardActivity(
      builder,
      _o.Id,
      _o.ActivityId,
      _reward_item);
  }
}

public class TimePointRewardActivityT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("reward_item")]
  public List<WWParser.Defs.DicIntIntT> RewardItem { get; set; }

  public TimePointRewardActivityT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.RewardItem = null;
  }
}


static public class TimePointRewardActivityVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*RewardItem*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
