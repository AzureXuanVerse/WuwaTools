// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResTaskTheme : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResTaskTheme GetRootAsRogueResTaskTheme(ByteBuffer _bb) { return GetRootAsRogueResTaskTheme(_bb, new RogueResTaskTheme()); }
  public static RogueResTaskTheme GetRootAsRogueResTaskTheme(ByteBuffer _bb, RogueResTaskTheme obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResTaskTheme __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleImage(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RoleImageLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRoleImageBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetRoleImageBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetRoleImageArray() { return __p.__vector_as_array<int>(6); }
  public WWParser.Defs.DicIntString? TabNames(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TabNamesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.RogueResTaskTheme> CreateRogueResTaskTheme(FlatBufferBuilder builder,
      int id = 0,
      VectorOffset role_imageOffset = default(VectorOffset),
      VectorOffset tab_namesOffset = default(VectorOffset)) {
    builder.StartTable(3);
    RogueResTaskTheme.AddTabNames(builder, tab_namesOffset);
    RogueResTaskTheme.AddRoleImage(builder, role_imageOffset);
    RogueResTaskTheme.AddId(builder, id);
    return RogueResTaskTheme.EndRogueResTaskTheme(builder);
  }

  public static void StartRogueResTaskTheme(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleImage(FlatBufferBuilder builder, VectorOffset roleImageOffset) { builder.AddOffset(1, roleImageOffset.Value, 0); }
  public static VectorOffset CreateRoleImageVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRoleImageVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRoleImageVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRoleImageVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRoleImageVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTabNames(FlatBufferBuilder builder, VectorOffset tabNamesOffset) { builder.AddOffset(2, tabNamesOffset.Value, 0); }
  public static VectorOffset CreateTabNamesVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTabNamesVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabNamesVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTabNamesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTabNamesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.RogueResTaskTheme> EndRogueResTaskTheme(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResTaskTheme>(o);
  }
  public RogueResTaskThemeT UnPack() {
    var _o = new RogueResTaskThemeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResTaskThemeT _o) {
    _o.Id = this.Id;
    _o.RoleImage = new List<int>();
    for (var _j = 0; _j < this.RoleImageLength; ++_j) {_o.RoleImage.Add(this.RoleImage(_j));}
    _o.TabNames = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.TabNamesLength; ++_j) {_o.TabNames.Add(this.TabNames(_j).HasValue ? this.TabNames(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.RogueResTaskTheme> Pack(FlatBufferBuilder builder, RogueResTaskThemeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResTaskTheme>);
    var _role_image = default(VectorOffset);
    if (_o.RoleImage != null) {
      var __role_image = _o.RoleImage.ToArray();
      _role_image = CreateRoleImageVector(builder, __role_image);
    }
    var _tab_names = default(VectorOffset);
    if (_o.TabNames != null) {
      var __tab_names = new Offset<WWParser.Defs.DicIntString>[_o.TabNames.Count];
      for (var _j = 0; _j < __tab_names.Length; ++_j) { __tab_names[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.TabNames[_j]); }
      _tab_names = CreateTabNamesVector(builder, __tab_names);
    }
    return CreateRogueResTaskTheme(
      builder,
      _o.Id,
      _role_image,
      _tab_names);
  }
}

public class RogueResTaskThemeT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_image")]
  public List<int> RoleImage { get; set; }
  [Newtonsoft.Json.JsonProperty("tab_names")]
  public List<WWParser.Defs.DicIntStringT> TabNames { get; set; }

  public RogueResTaskThemeT() {
    this.Id = 0;
    this.RoleImage = null;
    this.TabNames = null;
  }
}


static public class RogueResTaskThemeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*RoleImage*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*TabNames*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
