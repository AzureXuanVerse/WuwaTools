// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GmOrderConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GmOrderConfig GetRootAsGmOrderConfig(ByteBuffer _bb) { return GetRootAsGmOrderConfig(_bb, new GmOrderConfig()); }
  public static GmOrderConfig GetRootAsGmOrderConfig(ByteBuffer _bb, GmOrderConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GmOrderConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string NameOverride { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameOverrideBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameOverrideBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameOverrideArray() { return __p.__vector_as_array<byte>(8); }
  public string Code { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCodeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCodeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCodeArray() { return __p.__vector_as_array<byte>(10); }
  public string CodeOverride { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCodeOverrideBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetCodeOverrideBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCodeOverrideArray() { return __p.__vector_as_array<byte>(12); }
  public int Sort { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Visible { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.GmOrderConfig> CreateGmOrderConfig(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset name_overrideOffset = default(StringOffset),
      StringOffset codeOffset = default(StringOffset),
      StringOffset code_overrideOffset = default(StringOffset),
      int sort = 0,
      bool visible = false) {
    builder.StartTable(7);
    GmOrderConfig.AddSort(builder, sort);
    GmOrderConfig.AddCodeOverride(builder, code_overrideOffset);
    GmOrderConfig.AddCode(builder, codeOffset);
    GmOrderConfig.AddNameOverride(builder, name_overrideOffset);
    GmOrderConfig.AddName(builder, nameOffset);
    GmOrderConfig.AddId(builder, id);
    GmOrderConfig.AddVisible(builder, visible);
    return GmOrderConfig.EndGmOrderConfig(builder);
  }

  public static void StartGmOrderConfig(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddNameOverride(FlatBufferBuilder builder, StringOffset nameOverrideOffset) { builder.AddOffset(2, nameOverrideOffset.Value, 0); }
  public static void AddCode(FlatBufferBuilder builder, StringOffset codeOffset) { builder.AddOffset(3, codeOffset.Value, 0); }
  public static void AddCodeOverride(FlatBufferBuilder builder, StringOffset codeOverrideOffset) { builder.AddOffset(4, codeOverrideOffset.Value, 0); }
  public static void AddSort(FlatBufferBuilder builder, int sort) { builder.AddInt(5, sort, 0); }
  public static void AddVisible(FlatBufferBuilder builder, bool visible) { builder.AddBool(6, visible, false); }
  public static Offset<WWParser.Defs.GmOrderConfig> EndGmOrderConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GmOrderConfig>(o);
  }
  public GmOrderConfigT UnPack() {
    var _o = new GmOrderConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GmOrderConfigT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.NameOverride = this.NameOverride;
    _o.Code = this.Code;
    _o.CodeOverride = this.CodeOverride;
    _o.Sort = this.Sort;
    _o.Visible = this.Visible;
  }
  public static Offset<WWParser.Defs.GmOrderConfig> Pack(FlatBufferBuilder builder, GmOrderConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GmOrderConfig>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _name_override = _o.NameOverride == null ? default(StringOffset) : builder.CreateString(_o.NameOverride);
    var _code = _o.Code == null ? default(StringOffset) : builder.CreateString(_o.Code);
    var _code_override = _o.CodeOverride == null ? default(StringOffset) : builder.CreateString(_o.CodeOverride);
    return CreateGmOrderConfig(
      builder,
      _o.Id,
      _name,
      _name_override,
      _code,
      _code_override,
      _o.Sort,
      _o.Visible);
  }
}

public class GmOrderConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("name_override")]
  public string NameOverride { get; set; }
  [Newtonsoft.Json.JsonProperty("code")]
  public string Code { get; set; }
  [Newtonsoft.Json.JsonProperty("code_override")]
  public string CodeOverride { get; set; }
  [Newtonsoft.Json.JsonProperty("sort")]
  public int Sort { get; set; }
  [Newtonsoft.Json.JsonProperty("visible")]
  public bool Visible { get; set; }

  public GmOrderConfigT() {
    this.Id = 0;
    this.Name = null;
    this.NameOverride = null;
    this.Code = null;
    this.CodeOverride = null;
    this.Sort = 0;
    this.Visible = false;
  }
}


static public class GmOrderConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyString(tablePos, 8 /*NameOverride*/, false)
      && verifier.VerifyString(tablePos, 10 /*Code*/, false)
      && verifier.VerifyString(tablePos, 12 /*CodeOverride*/, false)
      && verifier.VerifyField(tablePos, 14 /*Sort*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Visible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
