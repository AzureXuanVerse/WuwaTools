// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillPriorityButton : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillPriorityButton GetRootAsSkillPriorityButton(ByteBuffer _bb) { return GetRootAsSkillPriorityButton(_bb, new SkillPriorityButton()); }
  public static SkillPriorityButton GetRootAsSkillPriorityButton(ByteBuffer _bb, SkillPriorityButton obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillPriorityButton __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ButtonType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public WWParser.Defs.DicIntInt? SkillIdTagMap(int j) { int o = __p.__offset(10); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillIdTagMapLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int DisableTags(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int DisableTagsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetDisableTagsBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetDisableTagsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetDisableTagsArray() { return __p.__vector_as_array<int>(12); }
  public WWParser.Defs.DicIntIntArray? DisableSkillIdTags(int j) { int o = __p.__offset(14); return o != 0 ? (WWParser.Defs.DicIntIntArray?)(new WWParser.Defs.DicIntIntArray()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DisableSkillIdTagsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntInt? DynamicEffectTagMap(int j) { int o = __p.__offset(16); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DynamicEffectTagMapLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.SkillPriorityButton> CreateSkillPriorityButton(FlatBufferBuilder builder,
      int id = 0,
      int button_type = 0,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset skill_id_tag_mapOffset = default(VectorOffset),
      VectorOffset disable_tagsOffset = default(VectorOffset),
      VectorOffset disable_skill_id_tagsOffset = default(VectorOffset),
      VectorOffset dynamic_effect_tag_mapOffset = default(VectorOffset)) {
    builder.StartTable(7);
    SkillPriorityButton.AddDynamicEffectTagMap(builder, dynamic_effect_tag_mapOffset);
    SkillPriorityButton.AddDisableSkillIdTags(builder, disable_skill_id_tagsOffset);
    SkillPriorityButton.AddDisableTags(builder, disable_tagsOffset);
    SkillPriorityButton.AddSkillIdTagMap(builder, skill_id_tag_mapOffset);
    SkillPriorityButton.AddName(builder, nameOffset);
    SkillPriorityButton.AddButtonType(builder, button_type);
    SkillPriorityButton.AddId(builder, id);
    return SkillPriorityButton.EndSkillPriorityButton(builder);
  }

  public static void StartSkillPriorityButton(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddButtonType(FlatBufferBuilder builder, int buttonType) { builder.AddInt(1, buttonType, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddSkillIdTagMap(FlatBufferBuilder builder, VectorOffset skillIdTagMapOffset) { builder.AddOffset(3, skillIdTagMapOffset.Value, 0); }
  public static VectorOffset CreateSkillIdTagMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSkillIdTagMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSkillIdTagMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDisableTags(FlatBufferBuilder builder, VectorOffset disableTagsOffset) { builder.AddOffset(4, disableTagsOffset.Value, 0); }
  public static VectorOffset CreateDisableTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDisableTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDisableSkillIdTags(FlatBufferBuilder builder, VectorOffset disableSkillIdTagsOffset) { builder.AddOffset(5, disableSkillIdTagsOffset.Value, 0); }
  public static VectorOffset CreateDisableSkillIdTagsVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntIntArray>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntIntArray>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDisableSkillIdTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntIntArray>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDisableSkillIdTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDynamicEffectTagMap(FlatBufferBuilder builder, VectorOffset dynamicEffectTagMapOffset) { builder.AddOffset(6, dynamicEffectTagMapOffset.Value, 0); }
  public static VectorOffset CreateDynamicEffectTagMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDynamicEffectTagMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDynamicEffectTagMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.SkillPriorityButton> EndSkillPriorityButton(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillPriorityButton>(o);
  }
  public SkillPriorityButtonT UnPack() {
    var _o = new SkillPriorityButtonT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillPriorityButtonT _o) {
    _o.Id = this.Id;
    _o.ButtonType = this.ButtonType;
    _o.Name = this.Name;
    _o.SkillIdTagMap = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.SkillIdTagMapLength; ++_j) {_o.SkillIdTagMap.Add(this.SkillIdTagMap(_j).HasValue ? this.SkillIdTagMap(_j).Value.UnPack() : null);}
    _o.DisableTags = new List<int>();
    for (var _j = 0; _j < this.DisableTagsLength; ++_j) {_o.DisableTags.Add(this.DisableTags(_j));}
    _o.DisableSkillIdTags = new List<WWParser.Defs.DicIntIntArrayT>();
    for (var _j = 0; _j < this.DisableSkillIdTagsLength; ++_j) {_o.DisableSkillIdTags.Add(this.DisableSkillIdTags(_j).HasValue ? this.DisableSkillIdTags(_j).Value.UnPack() : null);}
    _o.DynamicEffectTagMap = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.DynamicEffectTagMapLength; ++_j) {_o.DynamicEffectTagMap.Add(this.DynamicEffectTagMap(_j).HasValue ? this.DynamicEffectTagMap(_j).Value.UnPack() : null);}
  }
  public static Offset<WWParser.Defs.SkillPriorityButton> Pack(FlatBufferBuilder builder, SkillPriorityButtonT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillPriorityButton>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _skill_id_tag_map = default(VectorOffset);
    if (_o.SkillIdTagMap != null) {
      var __skill_id_tag_map = new Offset<WWParser.Defs.DicIntInt>[_o.SkillIdTagMap.Count];
      for (var _j = 0; _j < __skill_id_tag_map.Length; ++_j) { __skill_id_tag_map[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.SkillIdTagMap[_j]); }
      _skill_id_tag_map = CreateSkillIdTagMapVector(builder, __skill_id_tag_map);
    }
    var _disable_tags = default(VectorOffset);
    if (_o.DisableTags != null) {
      var __disable_tags = _o.DisableTags.ToArray();
      _disable_tags = CreateDisableTagsVector(builder, __disable_tags);
    }
    var _disable_skill_id_tags = default(VectorOffset);
    if (_o.DisableSkillIdTags != null) {
      var __disable_skill_id_tags = new Offset<WWParser.Defs.DicIntIntArray>[_o.DisableSkillIdTags.Count];
      for (var _j = 0; _j < __disable_skill_id_tags.Length; ++_j) { __disable_skill_id_tags[_j] = WWParser.Defs.DicIntIntArray.Pack(builder, _o.DisableSkillIdTags[_j]); }
      _disable_skill_id_tags = CreateDisableSkillIdTagsVector(builder, __disable_skill_id_tags);
    }
    var _dynamic_effect_tag_map = default(VectorOffset);
    if (_o.DynamicEffectTagMap != null) {
      var __dynamic_effect_tag_map = new Offset<WWParser.Defs.DicIntInt>[_o.DynamicEffectTagMap.Count];
      for (var _j = 0; _j < __dynamic_effect_tag_map.Length; ++_j) { __dynamic_effect_tag_map[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.DynamicEffectTagMap[_j]); }
      _dynamic_effect_tag_map = CreateDynamicEffectTagMapVector(builder, __dynamic_effect_tag_map);
    }
    return CreateSkillPriorityButton(
      builder,
      _o.Id,
      _o.ButtonType,
      _name,
      _skill_id_tag_map,
      _disable_tags,
      _disable_skill_id_tags,
      _dynamic_effect_tag_map);
  }
}

public class SkillPriorityButtonT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("button_type")]
  public int ButtonType { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id_tag_map")]
  public List<WWParser.Defs.DicIntIntT> SkillIdTagMap { get; set; }
  [Newtonsoft.Json.JsonProperty("disable_tags")]
  public List<int> DisableTags { get; set; }
  [Newtonsoft.Json.JsonProperty("disable_skill_id_tags")]
  public List<WWParser.Defs.DicIntIntArrayT> DisableSkillIdTags { get; set; }
  [Newtonsoft.Json.JsonProperty("dynamic_effect_tag_map")]
  public List<WWParser.Defs.DicIntIntT> DynamicEffectTagMap { get; set; }

  public SkillPriorityButtonT() {
    this.Id = 0;
    this.ButtonType = 0;
    this.Name = null;
    this.SkillIdTagMap = null;
    this.DisableTags = null;
    this.DisableSkillIdTags = null;
    this.DynamicEffectTagMap = null;
  }
}


static public class SkillPriorityButtonVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ButtonType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 10 /*SkillIdTagMap*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*DisableTags*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 14 /*DisableSkillIdTags*/, WWParser.Defs.DicIntIntArrayVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 16 /*DynamicEffectTagMap*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
