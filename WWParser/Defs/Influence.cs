// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Influence : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Influence GetRootAsInfluence(ByteBuffer _bb) { return GetRootAsInfluence(_bb, new Influence()); }
  public static Influence GetRootAsInfluence(ByteBuffer _bb, Influence obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Influence __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string Introduction { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroductionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIntroductionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIntroductionArray() { return __p.__vector_as_array<byte>(8); }
  public string ExtraDesc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExtraDescBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetExtraDescBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetExtraDescArray() { return __p.__vector_as_array<byte>(10); }
  public int ShowIcon { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string Logo { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogoBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetLogoBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetLogoArray() { return __p.__vector_as_array<byte>(14); }
  public int DailyTaskShow { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int RawRelation { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RelationCondition { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LastRelation { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ReputationMax { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)10000; } }
  public WWParser.Defs.IntPair? ReputationItem(int j) { int o = __p.__offset(26); return o != 0 ? (WWParser.Defs.IntPair?)(new WWParser.Defs.IntPair()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ReputationItemLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.IntPair? ReputationReward(int j) { int o = __p.__offset(28); return o != 0 ? (WWParser.Defs.IntPair?)(new WWParser.Defs.IntPair()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ReputationRewardLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int PartyTags(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PartyTagsLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetPartyTagsBytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetPartyTagsBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetPartyTagsArray() { return __p.__vector_as_array<int>(30); }

  public static Offset<WWParser.Defs.Influence> CreateInfluence(FlatBufferBuilder builder,
      int id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset introductionOffset = default(StringOffset),
      StringOffset extra_descOffset = default(StringOffset),
      int show_icon = 1,
      StringOffset logoOffset = default(StringOffset),
      int daily_task_show = 1,
      int raw_relation = 0,
      int relation_condition = 0,
      int last_relation = 0,
      int reputation_max = 10000,
      VectorOffset reputation_itemOffset = default(VectorOffset),
      VectorOffset reputation_rewardOffset = default(VectorOffset),
      VectorOffset party_tagsOffset = default(VectorOffset)) {
    builder.StartTable(14);
    Influence.AddPartyTags(builder, party_tagsOffset);
    Influence.AddReputationReward(builder, reputation_rewardOffset);
    Influence.AddReputationItem(builder, reputation_itemOffset);
    Influence.AddReputationMax(builder, reputation_max);
    Influence.AddLastRelation(builder, last_relation);
    Influence.AddRelationCondition(builder, relation_condition);
    Influence.AddRawRelation(builder, raw_relation);
    Influence.AddDailyTaskShow(builder, daily_task_show);
    Influence.AddLogo(builder, logoOffset);
    Influence.AddShowIcon(builder, show_icon);
    Influence.AddExtraDesc(builder, extra_descOffset);
    Influence.AddIntroduction(builder, introductionOffset);
    Influence.AddTitle(builder, titleOffset);
    Influence.AddId(builder, id);
    return Influence.EndInfluence(builder);
  }

  public static void StartInfluence(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(1, titleOffset.Value, 0); }
  public static void AddIntroduction(FlatBufferBuilder builder, StringOffset introductionOffset) { builder.AddOffset(2, introductionOffset.Value, 0); }
  public static void AddExtraDesc(FlatBufferBuilder builder, StringOffset extraDescOffset) { builder.AddOffset(3, extraDescOffset.Value, 0); }
  public static void AddShowIcon(FlatBufferBuilder builder, int showIcon) { builder.AddInt(4, showIcon, 1); }
  public static void AddLogo(FlatBufferBuilder builder, StringOffset logoOffset) { builder.AddOffset(5, logoOffset.Value, 0); }
  public static void AddDailyTaskShow(FlatBufferBuilder builder, int dailyTaskShow) { builder.AddInt(6, dailyTaskShow, 1); }
  public static void AddRawRelation(FlatBufferBuilder builder, int rawRelation) { builder.AddInt(7, rawRelation, 0); }
  public static void AddRelationCondition(FlatBufferBuilder builder, int relationCondition) { builder.AddInt(8, relationCondition, 0); }
  public static void AddLastRelation(FlatBufferBuilder builder, int lastRelation) { builder.AddInt(9, lastRelation, 0); }
  public static void AddReputationMax(FlatBufferBuilder builder, int reputationMax) { builder.AddInt(10, reputationMax, 10000); }
  public static void AddReputationItem(FlatBufferBuilder builder, VectorOffset reputationItemOffset) { builder.AddOffset(11, reputationItemOffset.Value, 0); }
  public static VectorOffset CreateReputationItemVector(FlatBufferBuilder builder, Offset<WWParser.Defs.IntPair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateReputationItemVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.IntPair>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReputationItemVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.IntPair>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReputationItemVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.IntPair>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartReputationItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddReputationReward(FlatBufferBuilder builder, VectorOffset reputationRewardOffset) { builder.AddOffset(12, reputationRewardOffset.Value, 0); }
  public static VectorOffset CreateReputationRewardVector(FlatBufferBuilder builder, Offset<WWParser.Defs.IntPair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateReputationRewardVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.IntPair>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReputationRewardVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.IntPair>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReputationRewardVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.IntPair>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartReputationRewardVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPartyTags(FlatBufferBuilder builder, VectorOffset partyTagsOffset) { builder.AddOffset(13, partyTagsOffset.Value, 0); }
  public static VectorOffset CreatePartyTagsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePartyTagsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePartyTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePartyTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPartyTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.Influence> EndInfluence(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Influence>(o);
  }
  public InfluenceT UnPack() {
    var _o = new InfluenceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(InfluenceT _o) {
    _o.Id = this.Id;
    _o.Title = this.Title;
    _o.Introduction = this.Introduction;
    _o.ExtraDesc = this.ExtraDesc;
    _o.ShowIcon = this.ShowIcon;
    _o.Logo = this.Logo;
    _o.DailyTaskShow = this.DailyTaskShow;
    _o.RawRelation = this.RawRelation;
    _o.RelationCondition = this.RelationCondition;
    _o.LastRelation = this.LastRelation;
    _o.ReputationMax = this.ReputationMax;
    _o.ReputationItem = new List<WWParser.Defs.IntPairT>();
    for (var _j = 0; _j < this.ReputationItemLength; ++_j) {_o.ReputationItem.Add(this.ReputationItem(_j).HasValue ? this.ReputationItem(_j).Value.UnPack() : null);}
    _o.ReputationReward = new List<WWParser.Defs.IntPairT>();
    for (var _j = 0; _j < this.ReputationRewardLength; ++_j) {_o.ReputationReward.Add(this.ReputationReward(_j).HasValue ? this.ReputationReward(_j).Value.UnPack() : null);}
    _o.PartyTags = new List<int>();
    for (var _j = 0; _j < this.PartyTagsLength; ++_j) {_o.PartyTags.Add(this.PartyTags(_j));}
  }
  public static Offset<WWParser.Defs.Influence> Pack(FlatBufferBuilder builder, InfluenceT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Influence>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _introduction = _o.Introduction == null ? default(StringOffset) : builder.CreateString(_o.Introduction);
    var _extra_desc = _o.ExtraDesc == null ? default(StringOffset) : builder.CreateString(_o.ExtraDesc);
    var _logo = _o.Logo == null ? default(StringOffset) : builder.CreateString(_o.Logo);
    var _reputation_item = default(VectorOffset);
    if (_o.ReputationItem != null) {
      var __reputation_item = new Offset<WWParser.Defs.IntPair>[_o.ReputationItem.Count];
      for (var _j = 0; _j < __reputation_item.Length; ++_j) { __reputation_item[_j] = WWParser.Defs.IntPair.Pack(builder, _o.ReputationItem[_j]); }
      _reputation_item = CreateReputationItemVector(builder, __reputation_item);
    }
    var _reputation_reward = default(VectorOffset);
    if (_o.ReputationReward != null) {
      var __reputation_reward = new Offset<WWParser.Defs.IntPair>[_o.ReputationReward.Count];
      for (var _j = 0; _j < __reputation_reward.Length; ++_j) { __reputation_reward[_j] = WWParser.Defs.IntPair.Pack(builder, _o.ReputationReward[_j]); }
      _reputation_reward = CreateReputationRewardVector(builder, __reputation_reward);
    }
    var _party_tags = default(VectorOffset);
    if (_o.PartyTags != null) {
      var __party_tags = _o.PartyTags.ToArray();
      _party_tags = CreatePartyTagsVector(builder, __party_tags);
    }
    return CreateInfluence(
      builder,
      _o.Id,
      _title,
      _introduction,
      _extra_desc,
      _o.ShowIcon,
      _logo,
      _o.DailyTaskShow,
      _o.RawRelation,
      _o.RelationCondition,
      _o.LastRelation,
      _o.ReputationMax,
      _reputation_item,
      _reputation_reward,
      _party_tags);
  }
}

public class InfluenceT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("introduction")]
  public string Introduction { get; set; }
  [Newtonsoft.Json.JsonProperty("extra_desc")]
  public string ExtraDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("show_icon")]
  public int ShowIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("logo")]
  public string Logo { get; set; }
  [Newtonsoft.Json.JsonProperty("daily_task_show")]
  public int DailyTaskShow { get; set; }
  [Newtonsoft.Json.JsonProperty("raw_relation")]
  public int RawRelation { get; set; }
  [Newtonsoft.Json.JsonProperty("relation_condition")]
  public int RelationCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("last_relation")]
  public int LastRelation { get; set; }
  [Newtonsoft.Json.JsonProperty("reputation_max")]
  public int ReputationMax { get; set; }
  [Newtonsoft.Json.JsonProperty("reputation_item")]
  public List<WWParser.Defs.IntPairT> ReputationItem { get; set; }
  [Newtonsoft.Json.JsonProperty("reputation_reward")]
  public List<WWParser.Defs.IntPairT> ReputationReward { get; set; }
  [Newtonsoft.Json.JsonProperty("party_tags")]
  public List<int> PartyTags { get; set; }

  public InfluenceT() {
    this.Id = 0;
    this.Title = null;
    this.Introduction = null;
    this.ExtraDesc = null;
    this.ShowIcon = 1;
    this.Logo = null;
    this.DailyTaskShow = 1;
    this.RawRelation = 0;
    this.RelationCondition = 0;
    this.LastRelation = 0;
    this.ReputationMax = 10000;
    this.ReputationItem = null;
    this.ReputationReward = null;
    this.PartyTags = null;
  }
}


static public class InfluenceVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Title*/, false)
      && verifier.VerifyString(tablePos, 8 /*Introduction*/, false)
      && verifier.VerifyString(tablePos, 10 /*ExtraDesc*/, false)
      && verifier.VerifyField(tablePos, 12 /*ShowIcon*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*Logo*/, false)
      && verifier.VerifyField(tablePos, 16 /*DailyTaskShow*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*RawRelation*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*RelationCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*LastRelation*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*ReputationMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 26 /*ReputationItem*/, WWParser.Defs.IntPairVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 28 /*ReputationReward*/, WWParser.Defs.IntPairVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 30 /*PartyTags*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
