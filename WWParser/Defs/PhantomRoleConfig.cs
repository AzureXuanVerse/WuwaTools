// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhantomRoleConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhantomRoleConfig GetRootAsPhantomRoleConfig(ByteBuffer _bb) { return GetRootAsPhantomRoleConfig(_bb, new PhantomRoleConfig()); }
  public static PhantomRoleConfig GetRootAsPhantomRoleConfig(ByteBuffer _bb, PhantomRoleConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhantomRoleConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string GeDesc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGeDescBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetGeDescBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetGeDescArray() { return __p.__vector_as_array<byte>(6); }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public int MeshId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillTreeGroupId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CameraConfig { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float CameraFloatHeight { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int PropertyId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string RoleHeadIcon { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleHeadIconBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetRoleHeadIconBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetRoleHeadIconArray() { return __p.__vector_as_array<byte>(22); }
  public int CameraId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SearchId { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HudId { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.PhantomRoleConfig> CreatePhantomRoleConfig(FlatBufferBuilder builder,
      int id = 0,
      StringOffset ge_descOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      int mesh_id = 0,
      int skill_id = 0,
      int skill_tree_group_id = 0,
      int camera_config = 0,
      float camera_float_height = 0.0f,
      int property_id = 0,
      StringOffset role_head_iconOffset = default(StringOffset),
      int camera_id = 0,
      int search_id = 0,
      int hud_id = 0) {
    builder.StartTable(13);
    PhantomRoleConfig.AddHudId(builder, hud_id);
    PhantomRoleConfig.AddSearchId(builder, search_id);
    PhantomRoleConfig.AddCameraId(builder, camera_id);
    PhantomRoleConfig.AddRoleHeadIcon(builder, role_head_iconOffset);
    PhantomRoleConfig.AddPropertyId(builder, property_id);
    PhantomRoleConfig.AddCameraFloatHeight(builder, camera_float_height);
    PhantomRoleConfig.AddCameraConfig(builder, camera_config);
    PhantomRoleConfig.AddSkillTreeGroupId(builder, skill_tree_group_id);
    PhantomRoleConfig.AddSkillId(builder, skill_id);
    PhantomRoleConfig.AddMeshId(builder, mesh_id);
    PhantomRoleConfig.AddName(builder, nameOffset);
    PhantomRoleConfig.AddGeDesc(builder, ge_descOffset);
    PhantomRoleConfig.AddId(builder, id);
    return PhantomRoleConfig.EndPhantomRoleConfig(builder);
  }

  public static void StartPhantomRoleConfig(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddGeDesc(FlatBufferBuilder builder, StringOffset geDescOffset) { builder.AddOffset(1, geDescOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddMeshId(FlatBufferBuilder builder, int meshId) { builder.AddInt(3, meshId, 0); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(4, skillId, 0); }
  public static void AddSkillTreeGroupId(FlatBufferBuilder builder, int skillTreeGroupId) { builder.AddInt(5, skillTreeGroupId, 0); }
  public static void AddCameraConfig(FlatBufferBuilder builder, int cameraConfig) { builder.AddInt(6, cameraConfig, 0); }
  public static void AddCameraFloatHeight(FlatBufferBuilder builder, float cameraFloatHeight) { builder.AddFloat(7, cameraFloatHeight, 0.0f); }
  public static void AddPropertyId(FlatBufferBuilder builder, int propertyId) { builder.AddInt(8, propertyId, 0); }
  public static void AddRoleHeadIcon(FlatBufferBuilder builder, StringOffset roleHeadIconOffset) { builder.AddOffset(9, roleHeadIconOffset.Value, 0); }
  public static void AddCameraId(FlatBufferBuilder builder, int cameraId) { builder.AddInt(10, cameraId, 0); }
  public static void AddSearchId(FlatBufferBuilder builder, int searchId) { builder.AddInt(11, searchId, 0); }
  public static void AddHudId(FlatBufferBuilder builder, int hudId) { builder.AddInt(12, hudId, 0); }
  public static Offset<WWParser.Defs.PhantomRoleConfig> EndPhantomRoleConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhantomRoleConfig>(o);
  }
  public PhantomRoleConfigT UnPack() {
    var _o = new PhantomRoleConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhantomRoleConfigT _o) {
    _o.Id = this.Id;
    _o.GeDesc = this.GeDesc;
    _o.Name = this.Name;
    _o.MeshId = this.MeshId;
    _o.SkillId = this.SkillId;
    _o.SkillTreeGroupId = this.SkillTreeGroupId;
    _o.CameraConfig = this.CameraConfig;
    _o.CameraFloatHeight = this.CameraFloatHeight;
    _o.PropertyId = this.PropertyId;
    _o.RoleHeadIcon = this.RoleHeadIcon;
    _o.CameraId = this.CameraId;
    _o.SearchId = this.SearchId;
    _o.HudId = this.HudId;
  }
  public static Offset<WWParser.Defs.PhantomRoleConfig> Pack(FlatBufferBuilder builder, PhantomRoleConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhantomRoleConfig>);
    var _ge_desc = _o.GeDesc == null ? default(StringOffset) : builder.CreateString(_o.GeDesc);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _role_head_icon = _o.RoleHeadIcon == null ? default(StringOffset) : builder.CreateString(_o.RoleHeadIcon);
    return CreatePhantomRoleConfig(
      builder,
      _o.Id,
      _ge_desc,
      _name,
      _o.MeshId,
      _o.SkillId,
      _o.SkillTreeGroupId,
      _o.CameraConfig,
      _o.CameraFloatHeight,
      _o.PropertyId,
      _role_head_icon,
      _o.CameraId,
      _o.SearchId,
      _o.HudId);
  }
}

public class PhantomRoleConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("ge_desc")]
  public string GeDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("mesh_id")]
  public int MeshId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id")]
  public int SkillId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_tree_group_id")]
  public int SkillTreeGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("camera_config")]
  public int CameraConfig { get; set; }
  [Newtonsoft.Json.JsonProperty("camera_float_height")]
  public float CameraFloatHeight { get; set; }
  [Newtonsoft.Json.JsonProperty("property_id")]
  public int PropertyId { get; set; }
  [Newtonsoft.Json.JsonProperty("role_head_icon")]
  public string RoleHeadIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("camera_id")]
  public int CameraId { get; set; }
  [Newtonsoft.Json.JsonProperty("search_id")]
  public int SearchId { get; set; }
  [Newtonsoft.Json.JsonProperty("hud_id")]
  public int HudId { get; set; }

  public PhantomRoleConfigT() {
    this.Id = 0;
    this.GeDesc = null;
    this.Name = null;
    this.MeshId = 0;
    this.SkillId = 0;
    this.SkillTreeGroupId = 0;
    this.CameraConfig = 0;
    this.CameraFloatHeight = 0.0f;
    this.PropertyId = 0;
    this.RoleHeadIcon = null;
    this.CameraId = 0;
    this.SearchId = 0;
    this.HudId = 0;
  }
}


static public class PhantomRoleConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*GeDesc*/, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyField(tablePos, 10 /*MeshId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SkillId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*SkillTreeGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*CameraConfig*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*CameraFloatHeight*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*PropertyId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 22 /*RoleHeadIcon*/, false)
      && verifier.VerifyField(tablePos, 24 /*CameraId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*SearchId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*HudId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
