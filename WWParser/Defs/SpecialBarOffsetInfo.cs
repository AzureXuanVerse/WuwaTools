// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SpecialBarOffsetInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SpecialBarOffsetInfo GetRootAsSpecialBarOffsetInfo(ByteBuffer _bb) { return GetRootAsSpecialBarOffsetInfo(_bb, new SpecialBarOffsetInfo()); }
  public static SpecialBarOffsetInfo GetRootAsSpecialBarOffsetInfo(ByteBuffer _bb, SpecialBarOffsetInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SpecialBarOffsetInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MinPercent { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxPercent { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MinOffsetx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MinOffsety { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxOffsetx { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxOffsety { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.SpecialBarOffsetInfo> CreateSpecialBarOffsetInfo(FlatBufferBuilder builder,
      int min_percent = 0,
      int max_percent = 0,
      int min_offsetx = 0,
      int min_offsety = 0,
      int max_offsetx = 0,
      int max_offsety = 0) {
    builder.StartTable(6);
    SpecialBarOffsetInfo.AddMaxOffsety(builder, max_offsety);
    SpecialBarOffsetInfo.AddMaxOffsetx(builder, max_offsetx);
    SpecialBarOffsetInfo.AddMinOffsety(builder, min_offsety);
    SpecialBarOffsetInfo.AddMinOffsetx(builder, min_offsetx);
    SpecialBarOffsetInfo.AddMaxPercent(builder, max_percent);
    SpecialBarOffsetInfo.AddMinPercent(builder, min_percent);
    return SpecialBarOffsetInfo.EndSpecialBarOffsetInfo(builder);
  }

  public static void StartSpecialBarOffsetInfo(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddMinPercent(FlatBufferBuilder builder, int minPercent) { builder.AddInt(0, minPercent, 0); }
  public static void AddMaxPercent(FlatBufferBuilder builder, int maxPercent) { builder.AddInt(1, maxPercent, 0); }
  public static void AddMinOffsetx(FlatBufferBuilder builder, int minOffsetx) { builder.AddInt(2, minOffsetx, 0); }
  public static void AddMinOffsety(FlatBufferBuilder builder, int minOffsety) { builder.AddInt(3, minOffsety, 0); }
  public static void AddMaxOffsetx(FlatBufferBuilder builder, int maxOffsetx) { builder.AddInt(4, maxOffsetx, 0); }
  public static void AddMaxOffsety(FlatBufferBuilder builder, int maxOffsety) { builder.AddInt(5, maxOffsety, 0); }
  public static Offset<WWParser.Defs.SpecialBarOffsetInfo> EndSpecialBarOffsetInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SpecialBarOffsetInfo>(o);
  }
  public SpecialBarOffsetInfoT UnPack() {
    var _o = new SpecialBarOffsetInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SpecialBarOffsetInfoT _o) {
    _o.MinPercent = this.MinPercent;
    _o.MaxPercent = this.MaxPercent;
    _o.MinOffsetx = this.MinOffsetx;
    _o.MinOffsety = this.MinOffsety;
    _o.MaxOffsetx = this.MaxOffsetx;
    _o.MaxOffsety = this.MaxOffsety;
  }
  public static Offset<WWParser.Defs.SpecialBarOffsetInfo> Pack(FlatBufferBuilder builder, SpecialBarOffsetInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SpecialBarOffsetInfo>);
    return CreateSpecialBarOffsetInfo(
      builder,
      _o.MinPercent,
      _o.MaxPercent,
      _o.MinOffsetx,
      _o.MinOffsety,
      _o.MaxOffsetx,
      _o.MaxOffsety);
  }
}

public class SpecialBarOffsetInfoT
{
  [Newtonsoft.Json.JsonProperty("min_percent")]
  public int MinPercent { get; set; }
  [Newtonsoft.Json.JsonProperty("max_percent")]
  public int MaxPercent { get; set; }
  [Newtonsoft.Json.JsonProperty("min_offsetx")]
  public int MinOffsetx { get; set; }
  [Newtonsoft.Json.JsonProperty("min_offsety")]
  public int MinOffsety { get; set; }
  [Newtonsoft.Json.JsonProperty("max_offsetx")]
  public int MaxOffsetx { get; set; }
  [Newtonsoft.Json.JsonProperty("max_offsety")]
  public int MaxOffsety { get; set; }

  public SpecialBarOffsetInfoT() {
    this.MinPercent = 0;
    this.MaxPercent = 0;
    this.MinOffsetx = 0;
    this.MinOffsety = 0;
    this.MaxOffsetx = 0;
    this.MaxOffsety = 0;
  }
}


static public class SpecialBarOffsetInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MinPercent*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*MaxPercent*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*MinOffsetx*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*MinOffsety*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*MaxOffsetx*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*MaxOffsety*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
