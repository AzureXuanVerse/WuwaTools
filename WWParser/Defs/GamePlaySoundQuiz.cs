// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GamePlaySoundQuiz : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GamePlaySoundQuiz GetRootAsGamePlaySoundQuiz(ByteBuffer _bb) { return GetRootAsGamePlaySoundQuiz(_bb, new GamePlaySoundQuiz()); }
  public static GamePlaySoundQuiz GetRootAsGamePlaySoundQuiz(ByteBuffer _bb, GamePlaySoundQuiz obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GamePlaySoundQuiz __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SoundNum { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string Type { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(8); }
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(10); }
  public string InteractId { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInteractIdBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetInteractIdBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetInteractIdArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<WWParser.Defs.GamePlaySoundQuiz> CreateGamePlaySoundQuiz(FlatBufferBuilder builder,
      int id = 0,
      int sound_num = 1,
      StringOffset typeOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset interact_idOffset = default(StringOffset)) {
    builder.StartTable(5);
    GamePlaySoundQuiz.AddInteractId(builder, interact_idOffset);
    GamePlaySoundQuiz.AddName(builder, nameOffset);
    GamePlaySoundQuiz.AddType(builder, typeOffset);
    GamePlaySoundQuiz.AddSoundNum(builder, sound_num);
    GamePlaySoundQuiz.AddId(builder, id);
    return GamePlaySoundQuiz.EndGamePlaySoundQuiz(builder);
  }

  public static void StartGamePlaySoundQuiz(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddSoundNum(FlatBufferBuilder builder, int soundNum) { builder.AddInt(1, soundNum, 1); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(2, typeOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(3, nameOffset.Value, 0); }
  public static void AddInteractId(FlatBufferBuilder builder, StringOffset interactIdOffset) { builder.AddOffset(4, interactIdOffset.Value, 0); }
  public static Offset<WWParser.Defs.GamePlaySoundQuiz> EndGamePlaySoundQuiz(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GamePlaySoundQuiz>(o);
  }
  public GamePlaySoundQuizT UnPack() {
    var _o = new GamePlaySoundQuizT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GamePlaySoundQuizT _o) {
    _o.Id = this.Id;
    _o.SoundNum = this.SoundNum;
    _o.Type = this.Type;
    _o.Name = this.Name;
    _o.InteractId = this.InteractId;
  }
  public static Offset<WWParser.Defs.GamePlaySoundQuiz> Pack(FlatBufferBuilder builder, GamePlaySoundQuizT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GamePlaySoundQuiz>);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _interact_id = _o.InteractId == null ? default(StringOffset) : builder.CreateString(_o.InteractId);
    return CreateGamePlaySoundQuiz(
      builder,
      _o.Id,
      _o.SoundNum,
      _type,
      _name,
      _interact_id);
  }
}

public class GamePlaySoundQuizT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("sound_num")]
  public int SoundNum { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public string Type { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("interact_id")]
  public string InteractId { get; set; }

  public GamePlaySoundQuizT() {
    this.Id = 0;
    this.SoundNum = 1;
    this.Type = null;
    this.Name = null;
    this.InteractId = null;
  }
}


static public class GamePlaySoundQuizVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*SoundNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Type*/, false)
      && verifier.VerifyString(tablePos, 10 /*Name*/, false)
      && verifier.VerifyString(tablePos, 12 /*InteractId*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
