// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AiAlert : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AiAlert GetRootAsAiAlert(ByteBuffer _bb) { return GetRootAsAiAlert(_bb, new AiAlert()); }
  public static AiAlert GetRootAsAiAlert(ByteBuffer _bb, AiAlert obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AiAlert __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float BaseIncrease { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)500.0f; } }
  public float DecreaseByDist { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.25f; } }
  public float MaxDist { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)-1.0f; } }
  public float ForwardAngle { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)45.0f; } }
  public float BackwardRate { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.25f; } }
  public float BaseDecrease { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)25.0f; } }
  public int AlertnessType { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowDist { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)3000; } }

  public static Offset<WWParser.Defs.AiAlert> CreateAiAlert(FlatBufferBuilder builder,
      int id = 0,
      float base_increase = 500.0f,
      float decrease_by_dist = 0.25f,
      float max_dist = -1.0f,
      float forward_angle = 45.0f,
      float backward_rate = 0.25f,
      float base_decrease = 25.0f,
      int alertness_type = 0,
      int show_dist = 3000) {
    builder.StartTable(9);
    AiAlert.AddShowDist(builder, show_dist);
    AiAlert.AddAlertnessType(builder, alertness_type);
    AiAlert.AddBaseDecrease(builder, base_decrease);
    AiAlert.AddBackwardRate(builder, backward_rate);
    AiAlert.AddForwardAngle(builder, forward_angle);
    AiAlert.AddMaxDist(builder, max_dist);
    AiAlert.AddDecreaseByDist(builder, decrease_by_dist);
    AiAlert.AddBaseIncrease(builder, base_increase);
    AiAlert.AddId(builder, id);
    return AiAlert.EndAiAlert(builder);
  }

  public static void StartAiAlert(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBaseIncrease(FlatBufferBuilder builder, float baseIncrease) { builder.AddFloat(1, baseIncrease, 500.0f); }
  public static void AddDecreaseByDist(FlatBufferBuilder builder, float decreaseByDist) { builder.AddFloat(2, decreaseByDist, 0.25f); }
  public static void AddMaxDist(FlatBufferBuilder builder, float maxDist) { builder.AddFloat(3, maxDist, -1.0f); }
  public static void AddForwardAngle(FlatBufferBuilder builder, float forwardAngle) { builder.AddFloat(4, forwardAngle, 45.0f); }
  public static void AddBackwardRate(FlatBufferBuilder builder, float backwardRate) { builder.AddFloat(5, backwardRate, 0.25f); }
  public static void AddBaseDecrease(FlatBufferBuilder builder, float baseDecrease) { builder.AddFloat(6, baseDecrease, 25.0f); }
  public static void AddAlertnessType(FlatBufferBuilder builder, int alertnessType) { builder.AddInt(7, alertnessType, 0); }
  public static void AddShowDist(FlatBufferBuilder builder, int showDist) { builder.AddInt(8, showDist, 3000); }
  public static Offset<WWParser.Defs.AiAlert> EndAiAlert(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AiAlert>(o);
  }
  public AiAlertT UnPack() {
    var _o = new AiAlertT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AiAlertT _o) {
    _o.Id = this.Id;
    _o.BaseIncrease = this.BaseIncrease;
    _o.DecreaseByDist = this.DecreaseByDist;
    _o.MaxDist = this.MaxDist;
    _o.ForwardAngle = this.ForwardAngle;
    _o.BackwardRate = this.BackwardRate;
    _o.BaseDecrease = this.BaseDecrease;
    _o.AlertnessType = this.AlertnessType;
    _o.ShowDist = this.ShowDist;
  }
  public static Offset<WWParser.Defs.AiAlert> Pack(FlatBufferBuilder builder, AiAlertT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AiAlert>);
    return CreateAiAlert(
      builder,
      _o.Id,
      _o.BaseIncrease,
      _o.DecreaseByDist,
      _o.MaxDist,
      _o.ForwardAngle,
      _o.BackwardRate,
      _o.BaseDecrease,
      _o.AlertnessType,
      _o.ShowDist);
  }
}

public class AiAlertT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("base_increase")]
  public float BaseIncrease { get; set; }
  [Newtonsoft.Json.JsonProperty("decrease_by_dist")]
  public float DecreaseByDist { get; set; }
  [Newtonsoft.Json.JsonProperty("max_dist")]
  public float MaxDist { get; set; }
  [Newtonsoft.Json.JsonProperty("forward_angle")]
  public float ForwardAngle { get; set; }
  [Newtonsoft.Json.JsonProperty("backward_rate")]
  public float BackwardRate { get; set; }
  [Newtonsoft.Json.JsonProperty("base_decrease")]
  public float BaseDecrease { get; set; }
  [Newtonsoft.Json.JsonProperty("alertness_type")]
  public int AlertnessType { get; set; }
  [Newtonsoft.Json.JsonProperty("show_dist")]
  public int ShowDist { get; set; }

  public AiAlertT() {
    this.Id = 0;
    this.BaseIncrease = 500.0f;
    this.DecreaseByDist = 0.25f;
    this.MaxDist = -1.0f;
    this.ForwardAngle = 45.0f;
    this.BackwardRate = 0.25f;
    this.BaseDecrease = 25.0f;
    this.AlertnessType = 0;
    this.ShowDist = 3000;
  }
}


static public class AiAlertVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*BaseIncrease*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*DecreaseByDist*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*MaxDist*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ForwardAngle*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*BackwardRate*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*BaseDecrease*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*AlertnessType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*ShowDist*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
