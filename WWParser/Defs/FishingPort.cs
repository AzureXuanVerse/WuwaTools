// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FishingPort : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FishingPort GetRootAsFishingPort(ByteBuffer _bb) { return GetRootAsFishingPort(_bb, new FishingPort()); }
  public static FishingPort GetRootAsFishingPort(ByteBuffer _bb, FishingPort obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FishingPort __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntityConfigId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NpcEntityConfigId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int UnlockCondition { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SceneConfigId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)8; } }
  public int SailingPoint { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AshorePoint { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MarkId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShopId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EnterRange { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LeaveRange { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RangeCenter { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.FishingPort> CreateFishingPort(FlatBufferBuilder builder,
      int id = 0,
      int entity_config_id = 0,
      int npc_entity_config_id = 0,
      int unlock_condition = 0,
      int scene_config_id = 8,
      int sailing_point = 0,
      int ashore_point = 0,
      int mark_id = 0,
      int shop_id = 0,
      int enter_range = 0,
      int leave_range = 0,
      int range_center = 0) {
    builder.StartTable(12);
    FishingPort.AddRangeCenter(builder, range_center);
    FishingPort.AddLeaveRange(builder, leave_range);
    FishingPort.AddEnterRange(builder, enter_range);
    FishingPort.AddShopId(builder, shop_id);
    FishingPort.AddMarkId(builder, mark_id);
    FishingPort.AddAshorePoint(builder, ashore_point);
    FishingPort.AddSailingPoint(builder, sailing_point);
    FishingPort.AddSceneConfigId(builder, scene_config_id);
    FishingPort.AddUnlockCondition(builder, unlock_condition);
    FishingPort.AddNpcEntityConfigId(builder, npc_entity_config_id);
    FishingPort.AddEntityConfigId(builder, entity_config_id);
    FishingPort.AddId(builder, id);
    return FishingPort.EndFishingPort(builder);
  }

  public static void StartFishingPort(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddEntityConfigId(FlatBufferBuilder builder, int entityConfigId) { builder.AddInt(1, entityConfigId, 0); }
  public static void AddNpcEntityConfigId(FlatBufferBuilder builder, int npcEntityConfigId) { builder.AddInt(2, npcEntityConfigId, 0); }
  public static void AddUnlockCondition(FlatBufferBuilder builder, int unlockCondition) { builder.AddInt(3, unlockCondition, 0); }
  public static void AddSceneConfigId(FlatBufferBuilder builder, int sceneConfigId) { builder.AddInt(4, sceneConfigId, 8); }
  public static void AddSailingPoint(FlatBufferBuilder builder, int sailingPoint) { builder.AddInt(5, sailingPoint, 0); }
  public static void AddAshorePoint(FlatBufferBuilder builder, int ashorePoint) { builder.AddInt(6, ashorePoint, 0); }
  public static void AddMarkId(FlatBufferBuilder builder, int markId) { builder.AddInt(7, markId, 0); }
  public static void AddShopId(FlatBufferBuilder builder, int shopId) { builder.AddInt(8, shopId, 0); }
  public static void AddEnterRange(FlatBufferBuilder builder, int enterRange) { builder.AddInt(9, enterRange, 0); }
  public static void AddLeaveRange(FlatBufferBuilder builder, int leaveRange) { builder.AddInt(10, leaveRange, 0); }
  public static void AddRangeCenter(FlatBufferBuilder builder, int rangeCenter) { builder.AddInt(11, rangeCenter, 0); }
  public static Offset<WWParser.Defs.FishingPort> EndFishingPort(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FishingPort>(o);
  }
  public FishingPortT UnPack() {
    var _o = new FishingPortT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FishingPortT _o) {
    _o.Id = this.Id;
    _o.EntityConfigId = this.EntityConfigId;
    _o.NpcEntityConfigId = this.NpcEntityConfigId;
    _o.UnlockCondition = this.UnlockCondition;
    _o.SceneConfigId = this.SceneConfigId;
    _o.SailingPoint = this.SailingPoint;
    _o.AshorePoint = this.AshorePoint;
    _o.MarkId = this.MarkId;
    _o.ShopId = this.ShopId;
    _o.EnterRange = this.EnterRange;
    _o.LeaveRange = this.LeaveRange;
    _o.RangeCenter = this.RangeCenter;
  }
  public static Offset<WWParser.Defs.FishingPort> Pack(FlatBufferBuilder builder, FishingPortT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FishingPort>);
    return CreateFishingPort(
      builder,
      _o.Id,
      _o.EntityConfigId,
      _o.NpcEntityConfigId,
      _o.UnlockCondition,
      _o.SceneConfigId,
      _o.SailingPoint,
      _o.AshorePoint,
      _o.MarkId,
      _o.ShopId,
      _o.EnterRange,
      _o.LeaveRange,
      _o.RangeCenter);
  }
}

public class FishingPortT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("entity_config_id")]
  public int EntityConfigId { get; set; }
  [Newtonsoft.Json.JsonProperty("npc_entity_config_id")]
  public int NpcEntityConfigId { get; set; }
  [Newtonsoft.Json.JsonProperty("unlock_condition")]
  public int UnlockCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("scene_config_id")]
  public int SceneConfigId { get; set; }
  [Newtonsoft.Json.JsonProperty("sailing_point")]
  public int SailingPoint { get; set; }
  [Newtonsoft.Json.JsonProperty("ashore_point")]
  public int AshorePoint { get; set; }
  [Newtonsoft.Json.JsonProperty("mark_id")]
  public int MarkId { get; set; }
  [Newtonsoft.Json.JsonProperty("shop_id")]
  public int ShopId { get; set; }
  [Newtonsoft.Json.JsonProperty("enter_range")]
  public int EnterRange { get; set; }
  [Newtonsoft.Json.JsonProperty("leave_range")]
  public int LeaveRange { get; set; }
  [Newtonsoft.Json.JsonProperty("range_center")]
  public int RangeCenter { get; set; }

  public FishingPortT() {
    this.Id = 0;
    this.EntityConfigId = 0;
    this.NpcEntityConfigId = 0;
    this.UnlockCondition = 0;
    this.SceneConfigId = 8;
    this.SailingPoint = 0;
    this.AshorePoint = 0;
    this.MarkId = 0;
    this.ShopId = 0;
    this.EnterRange = 0;
    this.LeaveRange = 0;
    this.RangeCenter = 0;
  }
}


static public class FishingPortVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*EntityConfigId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*NpcEntityConfigId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*UnlockCondition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SceneConfigId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*SailingPoint*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*AshorePoint*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*MarkId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*ShopId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*EnterRange*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*LeaveRange*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*RangeCenter*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
