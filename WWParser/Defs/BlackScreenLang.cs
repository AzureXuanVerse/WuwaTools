// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BlackScreenLang : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BlackScreenLang GetRootAsBlackScreenLang(ByteBuffer _bb) { return GetRootAsBlackScreenLang(_bb, new BlackScreenLang()); }
  public static BlackScreenLang GetRootAsBlackScreenLang(ByteBuffer _bb, BlackScreenLang obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BlackScreenLang __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ShowAnimName { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HideAnimName { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.BlackScreenLang> CreateBlackScreenLang(FlatBufferBuilder builder,
      int show_anim_name = 0,
      int hide_anim_name = 0) {
    builder.StartTable(2);
    BlackScreenLang.AddHideAnimName(builder, hide_anim_name);
    BlackScreenLang.AddShowAnimName(builder, show_anim_name);
    return BlackScreenLang.EndBlackScreenLang(builder);
  }

  public static void StartBlackScreenLang(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddShowAnimName(FlatBufferBuilder builder, int showAnimName) { builder.AddInt(0, showAnimName, 0); }
  public static void AddHideAnimName(FlatBufferBuilder builder, int hideAnimName) { builder.AddInt(1, hideAnimName, 0); }
  public static Offset<WWParser.Defs.BlackScreenLang> EndBlackScreenLang(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BlackScreenLang>(o);
  }
  public BlackScreenLangT UnPack() {
    var _o = new BlackScreenLangT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BlackScreenLangT _o) {
    _o.ShowAnimName = this.ShowAnimName;
    _o.HideAnimName = this.HideAnimName;
  }
  public static Offset<WWParser.Defs.BlackScreenLang> Pack(FlatBufferBuilder builder, BlackScreenLangT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BlackScreenLang>);
    return CreateBlackScreenLang(
      builder,
      _o.ShowAnimName,
      _o.HideAnimName);
  }
}

public class BlackScreenLangT
{
  [Newtonsoft.Json.JsonProperty("show_anim_name")]
  public int ShowAnimName { get; set; }
  [Newtonsoft.Json.JsonProperty("hide_anim_name")]
  public int HideAnimName { get; set; }

  public BlackScreenLangT() {
    this.ShowAnimName = 0;
    this.HideAnimName = 0;
  }
}


static public class BlackScreenLangVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ShowAnimName*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*HideAnimName*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
