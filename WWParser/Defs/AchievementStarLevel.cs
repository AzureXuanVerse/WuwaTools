// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AchievementStarLevel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AchievementStarLevel GetRootAsAchievementStarLevel(ByteBuffer _bb) { return GetRootAsAchievementStarLevel(_bb, new AchievementStarLevel()); }
  public static AchievementStarLevel GetRootAsAchievementStarLevel(ByteBuffer _bb, AchievementStarLevel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AchievementStarLevel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Level { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.AchievementStarLevel> CreateAchievementStarLevel(FlatBufferBuilder builder,
      int level = 0,
      int drop_id = 0) {
    builder.StartTable(2);
    AchievementStarLevel.AddDropId(builder, drop_id);
    AchievementStarLevel.AddLevel(builder, level);
    return AchievementStarLevel.EndAchievementStarLevel(builder);
  }

  public static void StartAchievementStarLevel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(0, level, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(1, dropId, 0); }
  public static Offset<WWParser.Defs.AchievementStarLevel> EndAchievementStarLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AchievementStarLevel>(o);
  }
  public AchievementStarLevelT UnPack() {
    var _o = new AchievementStarLevelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AchievementStarLevelT _o) {
    _o.Level = this.Level;
    _o.DropId = this.DropId;
  }
  public static Offset<WWParser.Defs.AchievementStarLevel> Pack(FlatBufferBuilder builder, AchievementStarLevelT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AchievementStarLevel>);
    return CreateAchievementStarLevel(
      builder,
      _o.Level,
      _o.DropId);
  }
}

public class AchievementStarLevelT
{
  [Newtonsoft.Json.JsonProperty("level")]
  public int Level { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }

  public AchievementStarLevelT() {
    this.Level = 0;
    this.DropId = 0;
  }
}


static public class AchievementStarLevelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
