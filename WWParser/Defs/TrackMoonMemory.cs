// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TrackMoonMemory : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TrackMoonMemory GetRootAsTrackMoonMemory(ByteBuffer _bb) { return GetRootAsTrackMoonMemory(_bb, new TrackMoonMemory()); }
  public static TrackMoonMemory GetRootAsTrackMoonMemory(ByteBuffer _bb, TrackMoonMemory obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TrackMoonMemory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Classify { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(8); }
  public string IconPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIconPathArray() { return __p.__vector_as_array<byte>(10); }
  public int Sort { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TrackMoonMemory> CreateTrackMoonMemory(FlatBufferBuilder builder,
      int id = 0,
      int classify = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset icon_pathOffset = default(StringOffset),
      int sort = 0) {
    builder.StartTable(5);
    TrackMoonMemory.AddSort(builder, sort);
    TrackMoonMemory.AddIconPath(builder, icon_pathOffset);
    TrackMoonMemory.AddTitle(builder, titleOffset);
    TrackMoonMemory.AddClassify(builder, classify);
    TrackMoonMemory.AddId(builder, id);
    return TrackMoonMemory.EndTrackMoonMemory(builder);
  }

  public static void StartTrackMoonMemory(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddClassify(FlatBufferBuilder builder, int classify) { builder.AddInt(1, classify, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(2, titleOffset.Value, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset iconPathOffset) { builder.AddOffset(3, iconPathOffset.Value, 0); }
  public static void AddSort(FlatBufferBuilder builder, int sort) { builder.AddInt(4, sort, 0); }
  public static Offset<WWParser.Defs.TrackMoonMemory> EndTrackMoonMemory(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TrackMoonMemory>(o);
  }
  public TrackMoonMemoryT UnPack() {
    var _o = new TrackMoonMemoryT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TrackMoonMemoryT _o) {
    _o.Id = this.Id;
    _o.Classify = this.Classify;
    _o.Title = this.Title;
    _o.IconPath = this.IconPath;
    _o.Sort = this.Sort;
  }
  public static Offset<WWParser.Defs.TrackMoonMemory> Pack(FlatBufferBuilder builder, TrackMoonMemoryT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TrackMoonMemory>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _icon_path = _o.IconPath == null ? default(StringOffset) : builder.CreateString(_o.IconPath);
    return CreateTrackMoonMemory(
      builder,
      _o.Id,
      _o.Classify,
      _title,
      _icon_path,
      _o.Sort);
  }
}

public class TrackMoonMemoryT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("classify")]
  public int Classify { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_path")]
  public string IconPath { get; set; }
  [Newtonsoft.Json.JsonProperty("sort")]
  public int Sort { get; set; }

  public TrackMoonMemoryT() {
    this.Id = 0;
    this.Classify = 0;
    this.Title = null;
    this.IconPath = null;
    this.Sort = 0;
  }
}


static public class TrackMoonMemoryVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Classify*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Title*/, false)
      && verifier.VerifyString(tablePos, 10 /*IconPath*/, false)
      && verifier.VerifyField(tablePos, 12 /*Sort*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
