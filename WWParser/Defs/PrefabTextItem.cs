// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PrefabTextItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PrefabTextItem GetRootAsPrefabTextItem(ByteBuffer _bb) { return GetRootAsPrefabTextItem(_bb, new PrefabTextItem()); }
  public static PrefabTextItem GetRootAsPrefabTextItem(ByteBuffer _bb, PrefabTextItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PrefabTextItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PrefabPathHash { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string ItemPath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemPathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetItemPathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetItemPathArray() { return __p.__vector_as_array<byte>(8); }
  public string Text { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTextArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.PrefabTextItem> CreatePrefabTextItem(FlatBufferBuilder builder,
      long item_id = 0,
      long prefab_path_hash = 0,
      StringOffset item_pathOffset = default(StringOffset),
      StringOffset textOffset = default(StringOffset)) {
    builder.StartTable(4);
    PrefabTextItem.AddPrefabPathHash(builder, prefab_path_hash);
    PrefabTextItem.AddItemId(builder, item_id);
    PrefabTextItem.AddText(builder, textOffset);
    PrefabTextItem.AddItemPath(builder, item_pathOffset);
    return PrefabTextItem.EndPrefabTextItem(builder);
  }

  public static void StartPrefabTextItem(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddItemId(FlatBufferBuilder builder, long itemId) { builder.AddLong(0, itemId, 0); }
  public static void AddPrefabPathHash(FlatBufferBuilder builder, long prefabPathHash) { builder.AddLong(1, prefabPathHash, 0); }
  public static void AddItemPath(FlatBufferBuilder builder, StringOffset itemPathOffset) { builder.AddOffset(2, itemPathOffset.Value, 0); }
  public static void AddText(FlatBufferBuilder builder, StringOffset textOffset) { builder.AddOffset(3, textOffset.Value, 0); }
  public static Offset<WWParser.Defs.PrefabTextItem> EndPrefabTextItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PrefabTextItem>(o);
  }
  public PrefabTextItemT UnPack() {
    var _o = new PrefabTextItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PrefabTextItemT _o) {
    _o.ItemId = this.ItemId;
    _o.PrefabPathHash = this.PrefabPathHash;
    _o.ItemPath = this.ItemPath;
    _o.Text = this.Text;
  }
  public static Offset<WWParser.Defs.PrefabTextItem> Pack(FlatBufferBuilder builder, PrefabTextItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PrefabTextItem>);
    var _item_path = _o.ItemPath == null ? default(StringOffset) : builder.CreateString(_o.ItemPath);
    var _text = _o.Text == null ? default(StringOffset) : builder.CreateString(_o.Text);
    return CreatePrefabTextItem(
      builder,
      _o.ItemId,
      _o.PrefabPathHash,
      _item_path,
      _text);
  }
}

public class PrefabTextItemT
{
  [Newtonsoft.Json.JsonProperty("item_id")]
  public long ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("prefab_path_hash")]
  public long PrefabPathHash { get; set; }
  [Newtonsoft.Json.JsonProperty("item_path")]
  public string ItemPath { get; set; }
  [Newtonsoft.Json.JsonProperty("text")]
  public string Text { get; set; }

  public PrefabTextItemT() {
    this.ItemId = 0;
    this.PrefabPathHash = 0;
    this.ItemPath = null;
    this.Text = null;
  }
}


static public class PrefabTextItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ItemId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*PrefabPathHash*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 8 /*ItemPath*/, false)
      && verifier.VerifyString(tablePos, 10 /*Text*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
