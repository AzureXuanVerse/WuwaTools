// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EnrichmentAreaConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EnrichmentAreaConfig GetRootAsEnrichmentAreaConfig(ByteBuffer _bb) { return GetRootAsEnrichmentAreaConfig(_bb, new EnrichmentAreaConfig()); }
  public static EnrichmentAreaConfig GetRootAsEnrichmentAreaConfig(ByteBuffer _bb, EnrichmentAreaConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EnrichmentAreaConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EnrichmentId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LevelId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntityIds(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EntityIdsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetEntityIdsBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetEntityIdsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetEntityIdsArray() { return __p.__vector_as_array<int>(12); }

  public static Offset<WWParser.Defs.EnrichmentAreaConfig> CreateEnrichmentAreaConfig(FlatBufferBuilder builder,
      int id = 0,
      int enrichment_id = 0,
      int item_id = 0,
      int level_id = 0,
      VectorOffset entity_idsOffset = default(VectorOffset)) {
    builder.StartTable(5);
    EnrichmentAreaConfig.AddEntityIds(builder, entity_idsOffset);
    EnrichmentAreaConfig.AddLevelId(builder, level_id);
    EnrichmentAreaConfig.AddItemId(builder, item_id);
    EnrichmentAreaConfig.AddEnrichmentId(builder, enrichment_id);
    EnrichmentAreaConfig.AddId(builder, id);
    return EnrichmentAreaConfig.EndEnrichmentAreaConfig(builder);
  }

  public static void StartEnrichmentAreaConfig(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddEnrichmentId(FlatBufferBuilder builder, int enrichmentId) { builder.AddInt(1, enrichmentId, 0); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(2, itemId, 0); }
  public static void AddLevelId(FlatBufferBuilder builder, int levelId) { builder.AddInt(3, levelId, 0); }
  public static void AddEntityIds(FlatBufferBuilder builder, VectorOffset entityIdsOffset) { builder.AddOffset(4, entityIdsOffset.Value, 0); }
  public static VectorOffset CreateEntityIdsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityIdsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntityIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEntityIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEntityIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.EnrichmentAreaConfig> EndEnrichmentAreaConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.EnrichmentAreaConfig>(o);
  }
  public EnrichmentAreaConfigT UnPack() {
    var _o = new EnrichmentAreaConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EnrichmentAreaConfigT _o) {
    _o.Id = this.Id;
    _o.EnrichmentId = this.EnrichmentId;
    _o.ItemId = this.ItemId;
    _o.LevelId = this.LevelId;
    _o.EntityIds = new List<int>();
    for (var _j = 0; _j < this.EntityIdsLength; ++_j) {_o.EntityIds.Add(this.EntityIds(_j));}
  }
  public static Offset<WWParser.Defs.EnrichmentAreaConfig> Pack(FlatBufferBuilder builder, EnrichmentAreaConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.EnrichmentAreaConfig>);
    var _entity_ids = default(VectorOffset);
    if (_o.EntityIds != null) {
      var __entity_ids = _o.EntityIds.ToArray();
      _entity_ids = CreateEntityIdsVector(builder, __entity_ids);
    }
    return CreateEnrichmentAreaConfig(
      builder,
      _o.Id,
      _o.EnrichmentId,
      _o.ItemId,
      _o.LevelId,
      _entity_ids);
  }
}

public class EnrichmentAreaConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("enrichment_id")]
  public int EnrichmentId { get; set; }
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("level_id")]
  public int LevelId { get; set; }
  [Newtonsoft.Json.JsonProperty("entity_ids")]
  public List<int> EntityIds { get; set; }

  public EnrichmentAreaConfigT() {
    this.Id = 0;
    this.EnrichmentId = 0;
    this.ItemId = 0;
    this.LevelId = 0;
    this.EntityIds = null;
  }
}


static public class EnrichmentAreaConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*EnrichmentId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*LevelId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*EntityIds*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
