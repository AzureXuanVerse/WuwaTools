// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PreviewItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PreviewItem GetRootAsPreviewItem(ByteBuffer _bb) { return GetRootAsPreviewItem(_bb, new PreviewItem()); }
  public static PreviewItem GetRootAsPreviewItem(ByteBuffer _bb, PreviewItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PreviewItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public int ShowTypes(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ShowTypesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetShowTypesBytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetShowTypesBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetShowTypesArray() { return __p.__vector_as_array<int>(8); }
  public string AttributesDescription { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttributesDescriptionBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAttributesDescriptionBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAttributesDescriptionArray() { return __p.__vector_as_array<byte>(10); }
  public string BgDescription { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgDescriptionBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetBgDescriptionBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetBgDescriptionArray() { return __p.__vector_as_array<byte>(12); }
  public string Icon { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(14); }
  public string IconMiddle { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconMiddleBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetIconMiddleBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetIconMiddleArray() { return __p.__vector_as_array<byte>(16); }
  public string IconSmall { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSmallBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIconSmallBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIconSmallArray() { return __p.__vector_as_array<byte>(18); }
  public string PreviewCornerMarker { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPreviewCornerMarkerBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetPreviewCornerMarkerBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetPreviewCornerMarkerArray() { return __p.__vector_as_array<byte>(20); }
  public int QualityId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PreviewItemAccess(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PreviewItemAccessLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetPreviewItemAccessBytes() { return __p.__vector_as_span<int>(24, 4); }
#else
  public ArraySegment<byte>? GetPreviewItemAccessBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public int[] GetPreviewItemAccessArray() { return __p.__vector_as_array<int>(24); }

  public static Offset<WWParser.Defs.PreviewItem> CreatePreviewItem(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset show_typesOffset = default(VectorOffset),
      StringOffset attributes_descriptionOffset = default(StringOffset),
      StringOffset bg_descriptionOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      StringOffset icon_middleOffset = default(StringOffset),
      StringOffset icon_smallOffset = default(StringOffset),
      StringOffset preview_corner_markerOffset = default(StringOffset),
      int quality_id = 0,
      VectorOffset preview_item_accessOffset = default(VectorOffset)) {
    builder.StartTable(11);
    PreviewItem.AddPreviewItemAccess(builder, preview_item_accessOffset);
    PreviewItem.AddQualityId(builder, quality_id);
    PreviewItem.AddPreviewCornerMarker(builder, preview_corner_markerOffset);
    PreviewItem.AddIconSmall(builder, icon_smallOffset);
    PreviewItem.AddIconMiddle(builder, icon_middleOffset);
    PreviewItem.AddIcon(builder, iconOffset);
    PreviewItem.AddBgDescription(builder, bg_descriptionOffset);
    PreviewItem.AddAttributesDescription(builder, attributes_descriptionOffset);
    PreviewItem.AddShowTypes(builder, show_typesOffset);
    PreviewItem.AddName(builder, nameOffset);
    PreviewItem.AddId(builder, id);
    return PreviewItem.EndPreviewItem(builder);
  }

  public static void StartPreviewItem(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddShowTypes(FlatBufferBuilder builder, VectorOffset showTypesOffset) { builder.AddOffset(2, showTypesOffset.Value, 0); }
  public static VectorOffset CreateShowTypesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShowTypesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowTypesVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShowTypesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartShowTypesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttributesDescription(FlatBufferBuilder builder, StringOffset attributesDescriptionOffset) { builder.AddOffset(3, attributesDescriptionOffset.Value, 0); }
  public static void AddBgDescription(FlatBufferBuilder builder, StringOffset bgDescriptionOffset) { builder.AddOffset(4, bgDescriptionOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(5, iconOffset.Value, 0); }
  public static void AddIconMiddle(FlatBufferBuilder builder, StringOffset iconMiddleOffset) { builder.AddOffset(6, iconMiddleOffset.Value, 0); }
  public static void AddIconSmall(FlatBufferBuilder builder, StringOffset iconSmallOffset) { builder.AddOffset(7, iconSmallOffset.Value, 0); }
  public static void AddPreviewCornerMarker(FlatBufferBuilder builder, StringOffset previewCornerMarkerOffset) { builder.AddOffset(8, previewCornerMarkerOffset.Value, 0); }
  public static void AddQualityId(FlatBufferBuilder builder, int qualityId) { builder.AddInt(9, qualityId, 0); }
  public static void AddPreviewItemAccess(FlatBufferBuilder builder, VectorOffset previewItemAccessOffset) { builder.AddOffset(10, previewItemAccessOffset.Value, 0); }
  public static VectorOffset CreatePreviewItemAccessVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePreviewItemAccessVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreviewItemAccessVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePreviewItemAccessVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPreviewItemAccessVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.PreviewItem> EndPreviewItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PreviewItem>(o);
  }
  public PreviewItemT UnPack() {
    var _o = new PreviewItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PreviewItemT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.ShowTypes = new List<int>();
    for (var _j = 0; _j < this.ShowTypesLength; ++_j) {_o.ShowTypes.Add(this.ShowTypes(_j));}
    _o.AttributesDescription = this.AttributesDescription;
    _o.BgDescription = this.BgDescription;
    _o.Icon = this.Icon;
    _o.IconMiddle = this.IconMiddle;
    _o.IconSmall = this.IconSmall;
    _o.PreviewCornerMarker = this.PreviewCornerMarker;
    _o.QualityId = this.QualityId;
    _o.PreviewItemAccess = new List<int>();
    for (var _j = 0; _j < this.PreviewItemAccessLength; ++_j) {_o.PreviewItemAccess.Add(this.PreviewItemAccess(_j));}
  }
  public static Offset<WWParser.Defs.PreviewItem> Pack(FlatBufferBuilder builder, PreviewItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PreviewItem>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _show_types = default(VectorOffset);
    if (_o.ShowTypes != null) {
      var __show_types = _o.ShowTypes.ToArray();
      _show_types = CreateShowTypesVector(builder, __show_types);
    }
    var _attributes_description = _o.AttributesDescription == null ? default(StringOffset) : builder.CreateString(_o.AttributesDescription);
    var _bg_description = _o.BgDescription == null ? default(StringOffset) : builder.CreateString(_o.BgDescription);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _icon_middle = _o.IconMiddle == null ? default(StringOffset) : builder.CreateString(_o.IconMiddle);
    var _icon_small = _o.IconSmall == null ? default(StringOffset) : builder.CreateString(_o.IconSmall);
    var _preview_corner_marker = _o.PreviewCornerMarker == null ? default(StringOffset) : builder.CreateString(_o.PreviewCornerMarker);
    var _preview_item_access = default(VectorOffset);
    if (_o.PreviewItemAccess != null) {
      var __preview_item_access = _o.PreviewItemAccess.ToArray();
      _preview_item_access = CreatePreviewItemAccessVector(builder, __preview_item_access);
    }
    return CreatePreviewItem(
      builder,
      _o.Id,
      _name,
      _show_types,
      _attributes_description,
      _bg_description,
      _icon,
      _icon_middle,
      _icon_small,
      _preview_corner_marker,
      _o.QualityId,
      _preview_item_access);
  }
}

public class PreviewItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("show_types")]
  public List<int> ShowTypes { get; set; }
  [Newtonsoft.Json.JsonProperty("attributes_description")]
  public string AttributesDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_description")]
  public string BgDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_middle")]
  public string IconMiddle { get; set; }
  [Newtonsoft.Json.JsonProperty("icon_small")]
  public string IconSmall { get; set; }
  [Newtonsoft.Json.JsonProperty("preview_corner_marker")]
  public string PreviewCornerMarker { get; set; }
  [Newtonsoft.Json.JsonProperty("quality_id")]
  public int QualityId { get; set; }
  [Newtonsoft.Json.JsonProperty("preview_item_access")]
  public List<int> PreviewItemAccess { get; set; }

  public PreviewItemT() {
    this.Id = 0;
    this.Name = null;
    this.ShowTypes = null;
    this.AttributesDescription = null;
    this.BgDescription = null;
    this.Icon = null;
    this.IconMiddle = null;
    this.IconSmall = null;
    this.PreviewCornerMarker = null;
    this.QualityId = 0;
    this.PreviewItemAccess = null;
  }
}


static public class PreviewItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*ShowTypes*/, 4 /*int*/, false)
      && verifier.VerifyString(tablePos, 10 /*AttributesDescription*/, false)
      && verifier.VerifyString(tablePos, 12 /*BgDescription*/, false)
      && verifier.VerifyString(tablePos, 14 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 16 /*IconMiddle*/, false)
      && verifier.VerifyString(tablePos, 18 /*IconSmall*/, false)
      && verifier.VerifyString(tablePos, 20 /*PreviewCornerMarker*/, false)
      && verifier.VerifyField(tablePos, 22 /*QualityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 24 /*PreviewItemAccess*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
