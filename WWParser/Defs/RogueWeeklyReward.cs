// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueWeeklyReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueWeeklyReward GetRootAsRogueWeeklyReward(ByteBuffer _bb) { return GetRootAsRogueWeeklyReward(_bb, new RogueWeeklyReward()); }
  public static RogueWeeklyReward GetRootAsRogueWeeklyReward(ByteBuffer _bb, RogueWeeklyReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueWeeklyReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CycleId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string TargetName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTargetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTargetNameArray() { return __p.__vector_as_array<byte>(8); }
  public int TargetReward { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Score { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RogueWeeklyReward> CreateRogueWeeklyReward(FlatBufferBuilder builder,
      int id = 0,
      int cycle_id = 0,
      StringOffset target_nameOffset = default(StringOffset),
      int target_reward = 0,
      int score = 0) {
    builder.StartTable(5);
    RogueWeeklyReward.AddScore(builder, score);
    RogueWeeklyReward.AddTargetReward(builder, target_reward);
    RogueWeeklyReward.AddTargetName(builder, target_nameOffset);
    RogueWeeklyReward.AddCycleId(builder, cycle_id);
    RogueWeeklyReward.AddId(builder, id);
    return RogueWeeklyReward.EndRogueWeeklyReward(builder);
  }

  public static void StartRogueWeeklyReward(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddCycleId(FlatBufferBuilder builder, int cycleId) { builder.AddInt(1, cycleId, 0); }
  public static void AddTargetName(FlatBufferBuilder builder, StringOffset targetNameOffset) { builder.AddOffset(2, targetNameOffset.Value, 0); }
  public static void AddTargetReward(FlatBufferBuilder builder, int targetReward) { builder.AddInt(3, targetReward, 0); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(4, score, 0); }
  public static Offset<WWParser.Defs.RogueWeeklyReward> EndRogueWeeklyReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueWeeklyReward>(o);
  }
  public RogueWeeklyRewardT UnPack() {
    var _o = new RogueWeeklyRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueWeeklyRewardT _o) {
    _o.Id = this.Id;
    _o.CycleId = this.CycleId;
    _o.TargetName = this.TargetName;
    _o.TargetReward = this.TargetReward;
    _o.Score = this.Score;
  }
  public static Offset<WWParser.Defs.RogueWeeklyReward> Pack(FlatBufferBuilder builder, RogueWeeklyRewardT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueWeeklyReward>);
    var _target_name = _o.TargetName == null ? default(StringOffset) : builder.CreateString(_o.TargetName);
    return CreateRogueWeeklyReward(
      builder,
      _o.Id,
      _o.CycleId,
      _target_name,
      _o.TargetReward,
      _o.Score);
  }
}

public class RogueWeeklyRewardT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("cycle_id")]
  public int CycleId { get; set; }
  [Newtonsoft.Json.JsonProperty("target_name")]
  public string TargetName { get; set; }
  [Newtonsoft.Json.JsonProperty("target_reward")]
  public int TargetReward { get; set; }
  [Newtonsoft.Json.JsonProperty("score")]
  public int Score { get; set; }

  public RogueWeeklyRewardT() {
    this.Id = 0;
    this.CycleId = 0;
    this.TargetName = null;
    this.TargetReward = 0;
    this.Score = 0;
  }
}


static public class RogueWeeklyRewardVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*CycleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*TargetName*/, false)
      && verifier.VerifyField(tablePos, 10 /*TargetReward*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Score*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
