// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AreaQuestTracking : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AreaQuestTracking GetRootAsAreaQuestTracking(ByteBuffer _bb) { return GetRootAsAreaQuestTracking(_bb, new AreaQuestTracking()); }
  public static AreaQuestTracking GetRootAsAreaQuestTracking(ByteBuffer _bb, AreaQuestTracking obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AreaQuestTracking __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public int AreaList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AreaListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetAreaListBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetAreaListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetAreaListArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<WWParser.Defs.AreaQuestTracking> CreateAreaQuestTracking(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      VectorOffset area_listOffset = default(VectorOffset)) {
    builder.StartTable(2);
    AreaQuestTracking.AddAreaList(builder, area_listOffset);
    AreaQuestTracking.AddId(builder, idOffset);
    return AreaQuestTracking.EndAreaQuestTracking(builder);
  }

  public static void StartAreaQuestTracking(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddAreaList(FlatBufferBuilder builder, VectorOffset areaListOffset) { builder.AddOffset(1, areaListOffset.Value, 0); }
  public static VectorOffset CreateAreaListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAreaListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAreaListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAreaListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAreaListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.AreaQuestTracking> EndAreaQuestTracking(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.AreaQuestTracking>(o);
  }
  public AreaQuestTrackingT UnPack() {
    var _o = new AreaQuestTrackingT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AreaQuestTrackingT _o) {
    _o.Id = this.Id;
    _o.AreaList = new List<int>();
    for (var _j = 0; _j < this.AreaListLength; ++_j) {_o.AreaList.Add(this.AreaList(_j));}
  }
  public static Offset<WWParser.Defs.AreaQuestTracking> Pack(FlatBufferBuilder builder, AreaQuestTrackingT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.AreaQuestTracking>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _area_list = default(VectorOffset);
    if (_o.AreaList != null) {
      var __area_list = _o.AreaList.ToArray();
      _area_list = CreateAreaListVector(builder, __area_list);
    }
    return CreateAreaQuestTracking(
      builder,
      _id,
      _area_list);
  }
}

public class AreaQuestTrackingT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public string Id { get; set; }
  [Newtonsoft.Json.JsonProperty("area_list")]
  public List<int> AreaList { get; set; }

  public AreaQuestTrackingT() {
    this.Id = null;
    this.AreaList = null;
  }
}


static public class AreaQuestTrackingVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*AreaList*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
