// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillButtonCustom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillButtonCustom GetRootAsSkillButtonCustom(ByteBuffer _bb) { return GetRootAsSkillButtonCustom(_bb, new SkillButtonCustom()); }
  public static SkillButtonCustom GetRootAsSkillButtonCustom(ByteBuffer _bb, SkillButtonCustom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillButtonCustom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TagIds(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int TagIdsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetTagIdsBytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetTagIdsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetTagIdsArray() { return __p.__vector_as_array<int>(8); }
  public double BuffIds(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int BuffIdsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetBuffIdsBytes() { return __p.__vector_as_span<double>(10, 8); }
#else
  public ArraySegment<byte>? GetBuffIdsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public double[] GetBuffIdsArray() { return __p.__vector_as_array<double>(10); }

  public static Offset<WWParser.Defs.SkillButtonCustom> CreateSkillButtonCustom(FlatBufferBuilder builder,
      int id = 0,
      int type = 0,
      VectorOffset tag_idsOffset = default(VectorOffset),
      VectorOffset buff_idsOffset = default(VectorOffset)) {
    builder.StartTable(4);
    SkillButtonCustom.AddBuffIds(builder, buff_idsOffset);
    SkillButtonCustom.AddTagIds(builder, tag_idsOffset);
    SkillButtonCustom.AddType(builder, type);
    SkillButtonCustom.AddId(builder, id);
    return SkillButtonCustom.EndSkillButtonCustom(builder);
  }

  public static void StartSkillButtonCustom(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(1, type, 0); }
  public static void AddTagIds(FlatBufferBuilder builder, VectorOffset tagIdsOffset) { builder.AddOffset(2, tagIdsOffset.Value, 0); }
  public static VectorOffset CreateTagIdsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTagIdsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTagIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuffIds(FlatBufferBuilder builder, VectorOffset buffIdsOffset) { builder.AddOffset(3, buffIdsOffset.Value, 0); }
  public static VectorOffset CreateBuffIdsVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBuffIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<WWParser.Defs.SkillButtonCustom> EndSkillButtonCustom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillButtonCustom>(o);
  }
  public SkillButtonCustomT UnPack() {
    var _o = new SkillButtonCustomT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillButtonCustomT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.TagIds = new List<int>();
    for (var _j = 0; _j < this.TagIdsLength; ++_j) {_o.TagIds.Add(this.TagIds(_j));}
    _o.BuffIds = new List<double>();
    for (var _j = 0; _j < this.BuffIdsLength; ++_j) {_o.BuffIds.Add(this.BuffIds(_j));}
  }
  public static Offset<WWParser.Defs.SkillButtonCustom> Pack(FlatBufferBuilder builder, SkillButtonCustomT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillButtonCustom>);
    var _tag_ids = default(VectorOffset);
    if (_o.TagIds != null) {
      var __tag_ids = _o.TagIds.ToArray();
      _tag_ids = CreateTagIdsVector(builder, __tag_ids);
    }
    var _buff_ids = default(VectorOffset);
    if (_o.BuffIds != null) {
      var __buff_ids = _o.BuffIds.ToArray();
      _buff_ids = CreateBuffIdsVector(builder, __buff_ids);
    }
    return CreateSkillButtonCustom(
      builder,
      _o.Id,
      _o.Type,
      _tag_ids,
      _buff_ids);
  }
}

public class SkillButtonCustomT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("tag_ids")]
  public List<int> TagIds { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_ids")]
  public List<double> BuffIds { get; set; }

  public SkillButtonCustomT() {
    this.Id = 0;
    this.Type = 0;
    this.TagIds = null;
    this.BuffIds = null;
  }
}


static public class SkillButtonCustomVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*TagIds*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*BuffIds*/, 8 /*double*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
