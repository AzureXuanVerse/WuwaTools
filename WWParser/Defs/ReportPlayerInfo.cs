// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ReportPlayerInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ReportPlayerInfo GetRootAsReportPlayerInfo(ByteBuffer _bb) { return GetRootAsReportPlayerInfo(_bb, new ReportPlayerInfo()); }
  public static ReportPlayerInfo GetRootAsReportPlayerInfo(ByteBuffer _bb, ReportPlayerInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ReportPlayerInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Reason { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReasonBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetReasonBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetReasonArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.ReportPlayerInfo> CreateReportPlayerInfo(FlatBufferBuilder builder,
      int id = 0,
      StringOffset reasonOffset = default(StringOffset)) {
    builder.StartTable(2);
    ReportPlayerInfo.AddReason(builder, reasonOffset);
    ReportPlayerInfo.AddId(builder, id);
    return ReportPlayerInfo.EndReportPlayerInfo(builder);
  }

  public static void StartReportPlayerInfo(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddReason(FlatBufferBuilder builder, StringOffset reasonOffset) { builder.AddOffset(1, reasonOffset.Value, 0); }
  public static Offset<WWParser.Defs.ReportPlayerInfo> EndReportPlayerInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ReportPlayerInfo>(o);
  }
  public ReportPlayerInfoT UnPack() {
    var _o = new ReportPlayerInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ReportPlayerInfoT _o) {
    _o.Id = this.Id;
    _o.Reason = this.Reason;
  }
  public static Offset<WWParser.Defs.ReportPlayerInfo> Pack(FlatBufferBuilder builder, ReportPlayerInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ReportPlayerInfo>);
    var _reason = _o.Reason == null ? default(StringOffset) : builder.CreateString(_o.Reason);
    return CreateReportPlayerInfo(
      builder,
      _o.Id,
      _reason);
  }
}

public class ReportPlayerInfoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("reason")]
  public string Reason { get; set; }

  public ReportPlayerInfoT() {
    this.Id = 0;
    this.Reason = null;
  }
}


static public class ReportPlayerInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Reason*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
