// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleAudio : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleAudio GetRootAsRoleAudio(ByteBuffer _bb) { return GetRootAsRoleAudio(_bb, new RoleAudio()); }
  public static RoleAudio GetRootAsRoleAudio(ByteBuffer _bb, RoleAudio obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleAudio __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string FootstepEvent { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFootstepEventBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetFootstepEventBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetFootstepEventArray() { return __p.__vector_as_array<byte>(8); }
  public string FoleyEvent { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFoleyEventBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetFoleyEventBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetFoleyEventArray() { return __p.__vector_as_array<byte>(10); }
  public string FastClimbEvent { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFastClimbEventBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetFastClimbEventBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetFastClimbEventArray() { return __p.__vector_as_array<byte>(12); }
  public string VisionMorphEvent { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVisionMorphEventBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetVisionMorphEventBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetVisionMorphEventArray() { return __p.__vector_as_array<byte>(14); }
  public string VisionSummonEvent { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVisionSummonEventBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetVisionSummonEventBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetVisionSummonEventArray() { return __p.__vector_as_array<byte>(16); }
  public string OpenTreasureBoxEvent { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOpenTreasureBoxEventBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetOpenTreasureBoxEventBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetOpenTreasureBoxEventArray() { return __p.__vector_as_array<byte>(18); }
  public string ScanTreasureBoxEvent { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetScanTreasureBoxEventBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetScanTreasureBoxEventBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetScanTreasureBoxEventArray() { return __p.__vector_as_array<byte>(20); }
  public string JoinTeamEvent { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinTeamEventBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetJoinTeamEventBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetJoinTeamEventArray() { return __p.__vector_as_array<byte>(22); }
  public WWParser.Defs.DicIntString? LostHealthEventMap(int j) { int o = __p.__offset(24); return o != 0 ? (WWParser.Defs.DicIntString?)(new WWParser.Defs.DicIntString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int LostHealthEventMapLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string DeathEvent { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeathEventBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetDeathEventBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetDeathEventArray() { return __p.__vector_as_array<byte>(26); }
  public string LowStrengthEventList(int j) { int o = __p.__offset(28); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int LowStrengthEventListLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string LowStrengthEvent { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLowStrengthEventBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetLowStrengthEventBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetLowStrengthEventArray() { return __p.__vector_as_array<byte>(30); }
  public string BreakUpEventList(int j) { int o = __p.__offset(32); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int BreakUpEventListLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string ExtremeDodgeEvent { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExtremeDodgeEventBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetExtremeDodgeEventBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetExtremeDodgeEventArray() { return __p.__vector_as_array<byte>(34); }
  public string ParryEvent { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParryEventBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetParryEventBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetParryEventArray() { return __p.__vector_as_array<byte>(36); }
  public string EnterBattleEvent { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEnterBattleEventBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetEnterBattleEventBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetEnterBattleEventArray() { return __p.__vector_as_array<byte>(38); }
  public string UnderAttackEvent { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUnderAttackEventBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetUnderAttackEventBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetUnderAttackEventArray() { return __p.__vector_as_array<byte>(40); }
  public string KnockUpEvent { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKnockUpEventBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetKnockUpEventBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetKnockUpEventArray() { return __p.__vector_as_array<byte>(42); }
  public string EnterGlideEvent { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEnterGlideEventBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetEnterGlideEventBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetEnterGlideEventArray() { return __p.__vector_as_array<byte>(44); }
  public string UseExploreHookEvent { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUseExploreHookEventBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetUseExploreHookEventBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetUseExploreHookEventArray() { return __p.__vector_as_array<byte>(46); }
  public string ClimbLeapEvent { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClimbLeapEventBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetClimbLeapEventBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetClimbLeapEventArray() { return __p.__vector_as_array<byte>(48); }

  public static Offset<WWParser.Defs.RoleAudio> CreateRoleAudio(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset footstep_eventOffset = default(StringOffset),
      StringOffset foley_eventOffset = default(StringOffset),
      StringOffset fast_climb_eventOffset = default(StringOffset),
      StringOffset vision_morph_eventOffset = default(StringOffset),
      StringOffset vision_summon_eventOffset = default(StringOffset),
      StringOffset open_treasure_box_eventOffset = default(StringOffset),
      StringOffset scan_treasure_box_eventOffset = default(StringOffset),
      StringOffset join_team_eventOffset = default(StringOffset),
      VectorOffset lost_health_event_mapOffset = default(VectorOffset),
      StringOffset death_eventOffset = default(StringOffset),
      VectorOffset low_strength_event_listOffset = default(VectorOffset),
      StringOffset low_strength_eventOffset = default(StringOffset),
      VectorOffset break_up_event_listOffset = default(VectorOffset),
      StringOffset extreme_dodge_eventOffset = default(StringOffset),
      StringOffset parry_eventOffset = default(StringOffset),
      StringOffset enter_battle_eventOffset = default(StringOffset),
      StringOffset under_attack_eventOffset = default(StringOffset),
      StringOffset knock_up_eventOffset = default(StringOffset),
      StringOffset enter_glide_eventOffset = default(StringOffset),
      StringOffset use_explore_hook_eventOffset = default(StringOffset),
      StringOffset climb_leap_eventOffset = default(StringOffset)) {
    builder.StartTable(23);
    RoleAudio.AddClimbLeapEvent(builder, climb_leap_eventOffset);
    RoleAudio.AddUseExploreHookEvent(builder, use_explore_hook_eventOffset);
    RoleAudio.AddEnterGlideEvent(builder, enter_glide_eventOffset);
    RoleAudio.AddKnockUpEvent(builder, knock_up_eventOffset);
    RoleAudio.AddUnderAttackEvent(builder, under_attack_eventOffset);
    RoleAudio.AddEnterBattleEvent(builder, enter_battle_eventOffset);
    RoleAudio.AddParryEvent(builder, parry_eventOffset);
    RoleAudio.AddExtremeDodgeEvent(builder, extreme_dodge_eventOffset);
    RoleAudio.AddBreakUpEventList(builder, break_up_event_listOffset);
    RoleAudio.AddLowStrengthEvent(builder, low_strength_eventOffset);
    RoleAudio.AddLowStrengthEventList(builder, low_strength_event_listOffset);
    RoleAudio.AddDeathEvent(builder, death_eventOffset);
    RoleAudio.AddLostHealthEventMap(builder, lost_health_event_mapOffset);
    RoleAudio.AddJoinTeamEvent(builder, join_team_eventOffset);
    RoleAudio.AddScanTreasureBoxEvent(builder, scan_treasure_box_eventOffset);
    RoleAudio.AddOpenTreasureBoxEvent(builder, open_treasure_box_eventOffset);
    RoleAudio.AddVisionSummonEvent(builder, vision_summon_eventOffset);
    RoleAudio.AddVisionMorphEvent(builder, vision_morph_eventOffset);
    RoleAudio.AddFastClimbEvent(builder, fast_climb_eventOffset);
    RoleAudio.AddFoleyEvent(builder, foley_eventOffset);
    RoleAudio.AddFootstepEvent(builder, footstep_eventOffset);
    RoleAudio.AddName(builder, nameOffset);
    RoleAudio.AddId(builder, id);
    return RoleAudio.EndRoleAudio(builder);
  }

  public static void StartRoleAudio(FlatBufferBuilder builder) { builder.StartTable(23); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddFootstepEvent(FlatBufferBuilder builder, StringOffset footstepEventOffset) { builder.AddOffset(2, footstepEventOffset.Value, 0); }
  public static void AddFoleyEvent(FlatBufferBuilder builder, StringOffset foleyEventOffset) { builder.AddOffset(3, foleyEventOffset.Value, 0); }
  public static void AddFastClimbEvent(FlatBufferBuilder builder, StringOffset fastClimbEventOffset) { builder.AddOffset(4, fastClimbEventOffset.Value, 0); }
  public static void AddVisionMorphEvent(FlatBufferBuilder builder, StringOffset visionMorphEventOffset) { builder.AddOffset(5, visionMorphEventOffset.Value, 0); }
  public static void AddVisionSummonEvent(FlatBufferBuilder builder, StringOffset visionSummonEventOffset) { builder.AddOffset(6, visionSummonEventOffset.Value, 0); }
  public static void AddOpenTreasureBoxEvent(FlatBufferBuilder builder, StringOffset openTreasureBoxEventOffset) { builder.AddOffset(7, openTreasureBoxEventOffset.Value, 0); }
  public static void AddScanTreasureBoxEvent(FlatBufferBuilder builder, StringOffset scanTreasureBoxEventOffset) { builder.AddOffset(8, scanTreasureBoxEventOffset.Value, 0); }
  public static void AddJoinTeamEvent(FlatBufferBuilder builder, StringOffset joinTeamEventOffset) { builder.AddOffset(9, joinTeamEventOffset.Value, 0); }
  public static void AddLostHealthEventMap(FlatBufferBuilder builder, VectorOffset lostHealthEventMapOffset) { builder.AddOffset(10, lostHealthEventMapOffset.Value, 0); }
  public static VectorOffset CreateLostHealthEventMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLostHealthEventMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLostHealthEventMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLostHealthEventMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLostHealthEventMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDeathEvent(FlatBufferBuilder builder, StringOffset deathEventOffset) { builder.AddOffset(11, deathEventOffset.Value, 0); }
  public static void AddLowStrengthEventList(FlatBufferBuilder builder, VectorOffset lowStrengthEventListOffset) { builder.AddOffset(12, lowStrengthEventListOffset.Value, 0); }
  public static VectorOffset CreateLowStrengthEventListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLowStrengthEventListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLowStrengthEventListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLowStrengthEventListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLowStrengthEventListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLowStrengthEvent(FlatBufferBuilder builder, StringOffset lowStrengthEventOffset) { builder.AddOffset(13, lowStrengthEventOffset.Value, 0); }
  public static void AddBreakUpEventList(FlatBufferBuilder builder, VectorOffset breakUpEventListOffset) { builder.AddOffset(14, breakUpEventListOffset.Value, 0); }
  public static VectorOffset CreateBreakUpEventListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBreakUpEventListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBreakUpEventListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBreakUpEventListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBreakUpEventListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExtremeDodgeEvent(FlatBufferBuilder builder, StringOffset extremeDodgeEventOffset) { builder.AddOffset(15, extremeDodgeEventOffset.Value, 0); }
  public static void AddParryEvent(FlatBufferBuilder builder, StringOffset parryEventOffset) { builder.AddOffset(16, parryEventOffset.Value, 0); }
  public static void AddEnterBattleEvent(FlatBufferBuilder builder, StringOffset enterBattleEventOffset) { builder.AddOffset(17, enterBattleEventOffset.Value, 0); }
  public static void AddUnderAttackEvent(FlatBufferBuilder builder, StringOffset underAttackEventOffset) { builder.AddOffset(18, underAttackEventOffset.Value, 0); }
  public static void AddKnockUpEvent(FlatBufferBuilder builder, StringOffset knockUpEventOffset) { builder.AddOffset(19, knockUpEventOffset.Value, 0); }
  public static void AddEnterGlideEvent(FlatBufferBuilder builder, StringOffset enterGlideEventOffset) { builder.AddOffset(20, enterGlideEventOffset.Value, 0); }
  public static void AddUseExploreHookEvent(FlatBufferBuilder builder, StringOffset useExploreHookEventOffset) { builder.AddOffset(21, useExploreHookEventOffset.Value, 0); }
  public static void AddClimbLeapEvent(FlatBufferBuilder builder, StringOffset climbLeapEventOffset) { builder.AddOffset(22, climbLeapEventOffset.Value, 0); }
  public static Offset<WWParser.Defs.RoleAudio> EndRoleAudio(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleAudio>(o);
  }
  public RoleAudioT UnPack() {
    var _o = new RoleAudioT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleAudioT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.FootstepEvent = this.FootstepEvent;
    _o.FoleyEvent = this.FoleyEvent;
    _o.FastClimbEvent = this.FastClimbEvent;
    _o.VisionMorphEvent = this.VisionMorphEvent;
    _o.VisionSummonEvent = this.VisionSummonEvent;
    _o.OpenTreasureBoxEvent = this.OpenTreasureBoxEvent;
    _o.ScanTreasureBoxEvent = this.ScanTreasureBoxEvent;
    _o.JoinTeamEvent = this.JoinTeamEvent;
    _o.LostHealthEventMap = new List<WWParser.Defs.DicIntStringT>();
    for (var _j = 0; _j < this.LostHealthEventMapLength; ++_j) {_o.LostHealthEventMap.Add(this.LostHealthEventMap(_j).HasValue ? this.LostHealthEventMap(_j).Value.UnPack() : null);}
    _o.DeathEvent = this.DeathEvent;
    _o.LowStrengthEventList = new List<string>();
    for (var _j = 0; _j < this.LowStrengthEventListLength; ++_j) {_o.LowStrengthEventList.Add(this.LowStrengthEventList(_j));}
    _o.LowStrengthEvent = this.LowStrengthEvent;
    _o.BreakUpEventList = new List<string>();
    for (var _j = 0; _j < this.BreakUpEventListLength; ++_j) {_o.BreakUpEventList.Add(this.BreakUpEventList(_j));}
    _o.ExtremeDodgeEvent = this.ExtremeDodgeEvent;
    _o.ParryEvent = this.ParryEvent;
    _o.EnterBattleEvent = this.EnterBattleEvent;
    _o.UnderAttackEvent = this.UnderAttackEvent;
    _o.KnockUpEvent = this.KnockUpEvent;
    _o.EnterGlideEvent = this.EnterGlideEvent;
    _o.UseExploreHookEvent = this.UseExploreHookEvent;
    _o.ClimbLeapEvent = this.ClimbLeapEvent;
  }
  public static Offset<WWParser.Defs.RoleAudio> Pack(FlatBufferBuilder builder, RoleAudioT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleAudio>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _footstep_event = _o.FootstepEvent == null ? default(StringOffset) : builder.CreateString(_o.FootstepEvent);
    var _foley_event = _o.FoleyEvent == null ? default(StringOffset) : builder.CreateString(_o.FoleyEvent);
    var _fast_climb_event = _o.FastClimbEvent == null ? default(StringOffset) : builder.CreateString(_o.FastClimbEvent);
    var _vision_morph_event = _o.VisionMorphEvent == null ? default(StringOffset) : builder.CreateString(_o.VisionMorphEvent);
    var _vision_summon_event = _o.VisionSummonEvent == null ? default(StringOffset) : builder.CreateString(_o.VisionSummonEvent);
    var _open_treasure_box_event = _o.OpenTreasureBoxEvent == null ? default(StringOffset) : builder.CreateString(_o.OpenTreasureBoxEvent);
    var _scan_treasure_box_event = _o.ScanTreasureBoxEvent == null ? default(StringOffset) : builder.CreateString(_o.ScanTreasureBoxEvent);
    var _join_team_event = _o.JoinTeamEvent == null ? default(StringOffset) : builder.CreateString(_o.JoinTeamEvent);
    var _lost_health_event_map = default(VectorOffset);
    if (_o.LostHealthEventMap != null) {
      var __lost_health_event_map = new Offset<WWParser.Defs.DicIntString>[_o.LostHealthEventMap.Count];
      for (var _j = 0; _j < __lost_health_event_map.Length; ++_j) { __lost_health_event_map[_j] = WWParser.Defs.DicIntString.Pack(builder, _o.LostHealthEventMap[_j]); }
      _lost_health_event_map = CreateLostHealthEventMapVector(builder, __lost_health_event_map);
    }
    var _death_event = _o.DeathEvent == null ? default(StringOffset) : builder.CreateString(_o.DeathEvent);
    var _low_strength_event_list = default(VectorOffset);
    if (_o.LowStrengthEventList != null) {
      var __low_strength_event_list = new StringOffset[_o.LowStrengthEventList.Count];
      for (var _j = 0; _j < __low_strength_event_list.Length; ++_j) { __low_strength_event_list[_j] = builder.CreateString(_o.LowStrengthEventList[_j]); }
      _low_strength_event_list = CreateLowStrengthEventListVector(builder, __low_strength_event_list);
    }
    var _low_strength_event = _o.LowStrengthEvent == null ? default(StringOffset) : builder.CreateString(_o.LowStrengthEvent);
    var _break_up_event_list = default(VectorOffset);
    if (_o.BreakUpEventList != null) {
      var __break_up_event_list = new StringOffset[_o.BreakUpEventList.Count];
      for (var _j = 0; _j < __break_up_event_list.Length; ++_j) { __break_up_event_list[_j] = builder.CreateString(_o.BreakUpEventList[_j]); }
      _break_up_event_list = CreateBreakUpEventListVector(builder, __break_up_event_list);
    }
    var _extreme_dodge_event = _o.ExtremeDodgeEvent == null ? default(StringOffset) : builder.CreateString(_o.ExtremeDodgeEvent);
    var _parry_event = _o.ParryEvent == null ? default(StringOffset) : builder.CreateString(_o.ParryEvent);
    var _enter_battle_event = _o.EnterBattleEvent == null ? default(StringOffset) : builder.CreateString(_o.EnterBattleEvent);
    var _under_attack_event = _o.UnderAttackEvent == null ? default(StringOffset) : builder.CreateString(_o.UnderAttackEvent);
    var _knock_up_event = _o.KnockUpEvent == null ? default(StringOffset) : builder.CreateString(_o.KnockUpEvent);
    var _enter_glide_event = _o.EnterGlideEvent == null ? default(StringOffset) : builder.CreateString(_o.EnterGlideEvent);
    var _use_explore_hook_event = _o.UseExploreHookEvent == null ? default(StringOffset) : builder.CreateString(_o.UseExploreHookEvent);
    var _climb_leap_event = _o.ClimbLeapEvent == null ? default(StringOffset) : builder.CreateString(_o.ClimbLeapEvent);
    return CreateRoleAudio(
      builder,
      _o.Id,
      _name,
      _footstep_event,
      _foley_event,
      _fast_climb_event,
      _vision_morph_event,
      _vision_summon_event,
      _open_treasure_box_event,
      _scan_treasure_box_event,
      _join_team_event,
      _lost_health_event_map,
      _death_event,
      _low_strength_event_list,
      _low_strength_event,
      _break_up_event_list,
      _extreme_dodge_event,
      _parry_event,
      _enter_battle_event,
      _under_attack_event,
      _knock_up_event,
      _enter_glide_event,
      _use_explore_hook_event,
      _climb_leap_event);
  }
}

public class RoleAudioT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("footstep_event")]
  public string FootstepEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("foley_event")]
  public string FoleyEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("fast_climb_event")]
  public string FastClimbEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("vision_morph_event")]
  public string VisionMorphEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("vision_summon_event")]
  public string VisionSummonEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("open_treasure_box_event")]
  public string OpenTreasureBoxEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("scan_treasure_box_event")]
  public string ScanTreasureBoxEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("join_team_event")]
  public string JoinTeamEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("lost_health_event_map")]
  public List<WWParser.Defs.DicIntStringT> LostHealthEventMap { get; set; }
  [Newtonsoft.Json.JsonProperty("death_event")]
  public string DeathEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("low_strength_event_list")]
  public List<string> LowStrengthEventList { get; set; }
  [Newtonsoft.Json.JsonProperty("low_strength_event")]
  public string LowStrengthEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("break_up_event_list")]
  public List<string> BreakUpEventList { get; set; }
  [Newtonsoft.Json.JsonProperty("extreme_dodge_event")]
  public string ExtremeDodgeEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("parry_event")]
  public string ParryEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("enter_battle_event")]
  public string EnterBattleEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("under_attack_event")]
  public string UnderAttackEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("knock_up_event")]
  public string KnockUpEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("enter_glide_event")]
  public string EnterGlideEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("use_explore_hook_event")]
  public string UseExploreHookEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("climb_leap_event")]
  public string ClimbLeapEvent { get; set; }

  public RoleAudioT() {
    this.Id = 0;
    this.Name = null;
    this.FootstepEvent = null;
    this.FoleyEvent = null;
    this.FastClimbEvent = null;
    this.VisionMorphEvent = null;
    this.VisionSummonEvent = null;
    this.OpenTreasureBoxEvent = null;
    this.ScanTreasureBoxEvent = null;
    this.JoinTeamEvent = null;
    this.LostHealthEventMap = null;
    this.DeathEvent = null;
    this.LowStrengthEventList = null;
    this.LowStrengthEvent = null;
    this.BreakUpEventList = null;
    this.ExtremeDodgeEvent = null;
    this.ParryEvent = null;
    this.EnterBattleEvent = null;
    this.UnderAttackEvent = null;
    this.KnockUpEvent = null;
    this.EnterGlideEvent = null;
    this.UseExploreHookEvent = null;
    this.ClimbLeapEvent = null;
  }
}


static public class RoleAudioVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyString(tablePos, 8 /*FootstepEvent*/, false)
      && verifier.VerifyString(tablePos, 10 /*FoleyEvent*/, false)
      && verifier.VerifyString(tablePos, 12 /*FastClimbEvent*/, false)
      && verifier.VerifyString(tablePos, 14 /*VisionMorphEvent*/, false)
      && verifier.VerifyString(tablePos, 16 /*VisionSummonEvent*/, false)
      && verifier.VerifyString(tablePos, 18 /*OpenTreasureBoxEvent*/, false)
      && verifier.VerifyString(tablePos, 20 /*ScanTreasureBoxEvent*/, false)
      && verifier.VerifyString(tablePos, 22 /*JoinTeamEvent*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 24 /*LostHealthEventMap*/, WWParser.Defs.DicIntStringVerify.Verify, false)
      && verifier.VerifyString(tablePos, 26 /*DeathEvent*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 28 /*LowStrengthEventList*/, false)
      && verifier.VerifyString(tablePos, 30 /*LowStrengthEvent*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 32 /*BreakUpEventList*/, false)
      && verifier.VerifyString(tablePos, 34 /*ExtremeDodgeEvent*/, false)
      && verifier.VerifyString(tablePos, 36 /*ParryEvent*/, false)
      && verifier.VerifyString(tablePos, 38 /*EnterBattleEvent*/, false)
      && verifier.VerifyString(tablePos, 40 /*UnderAttackEvent*/, false)
      && verifier.VerifyString(tablePos, 42 /*KnockUpEvent*/, false)
      && verifier.VerifyString(tablePos, 44 /*EnterGlideEvent*/, false)
      && verifier.VerifyString(tablePos, 46 /*UseExploreHookEvent*/, false)
      && verifier.VerifyString(tablePos, 48 /*ClimbLeapEvent*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
