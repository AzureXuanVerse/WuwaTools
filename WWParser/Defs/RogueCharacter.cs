// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueCharacter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueCharacter GetRootAsRogueCharacter(ByteBuffer _bb) { return GetRootAsRogueCharacter(_bb, new RogueCharacter()); }
  public static RogueCharacter GetRootAsRogueCharacter(ByteBuffer _bb, RogueCharacter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueCharacter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Quality { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string RoleIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetRoleIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetRoleIconArray() { return __p.__vector_as_array<byte>(10); }
  public string RoleName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetRoleNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetRoleNameArray() { return __p.__vector_as_array<byte>(12); }
  public string RoleBigIcon { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleBigIconBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetRoleBigIconBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetRoleBigIconArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.RogueCharacter> CreateRogueCharacter(FlatBufferBuilder builder,
      int id = 0,
      int role_id = 0,
      int quality = 1,
      StringOffset role_iconOffset = default(StringOffset),
      StringOffset role_nameOffset = default(StringOffset),
      StringOffset role_big_iconOffset = default(StringOffset)) {
    builder.StartTable(6);
    RogueCharacter.AddRoleBigIcon(builder, role_big_iconOffset);
    RogueCharacter.AddRoleName(builder, role_nameOffset);
    RogueCharacter.AddRoleIcon(builder, role_iconOffset);
    RogueCharacter.AddQuality(builder, quality);
    RogueCharacter.AddRoleId(builder, role_id);
    RogueCharacter.AddId(builder, id);
    return RogueCharacter.EndRogueCharacter(builder);
  }

  public static void StartRogueCharacter(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddRoleId(FlatBufferBuilder builder, int roleId) { builder.AddInt(1, roleId, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int quality) { builder.AddInt(2, quality, 1); }
  public static void AddRoleIcon(FlatBufferBuilder builder, StringOffset roleIconOffset) { builder.AddOffset(3, roleIconOffset.Value, 0); }
  public static void AddRoleName(FlatBufferBuilder builder, StringOffset roleNameOffset) { builder.AddOffset(4, roleNameOffset.Value, 0); }
  public static void AddRoleBigIcon(FlatBufferBuilder builder, StringOffset roleBigIconOffset) { builder.AddOffset(5, roleBigIconOffset.Value, 0); }
  public static Offset<WWParser.Defs.RogueCharacter> EndRogueCharacter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueCharacter>(o);
  }
  public RogueCharacterT UnPack() {
    var _o = new RogueCharacterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueCharacterT _o) {
    _o.Id = this.Id;
    _o.RoleId = this.RoleId;
    _o.Quality = this.Quality;
    _o.RoleIcon = this.RoleIcon;
    _o.RoleName = this.RoleName;
    _o.RoleBigIcon = this.RoleBigIcon;
  }
  public static Offset<WWParser.Defs.RogueCharacter> Pack(FlatBufferBuilder builder, RogueCharacterT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueCharacter>);
    var _role_icon = _o.RoleIcon == null ? default(StringOffset) : builder.CreateString(_o.RoleIcon);
    var _role_name = _o.RoleName == null ? default(StringOffset) : builder.CreateString(_o.RoleName);
    var _role_big_icon = _o.RoleBigIcon == null ? default(StringOffset) : builder.CreateString(_o.RoleBigIcon);
    return CreateRogueCharacter(
      builder,
      _o.Id,
      _o.RoleId,
      _o.Quality,
      _role_icon,
      _role_name,
      _role_big_icon);
  }
}

public class RogueCharacterT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("role_id")]
  public int RoleId { get; set; }
  [Newtonsoft.Json.JsonProperty("quality")]
  public int Quality { get; set; }
  [Newtonsoft.Json.JsonProperty("role_icon")]
  public string RoleIcon { get; set; }
  [Newtonsoft.Json.JsonProperty("role_name")]
  public string RoleName { get; set; }
  [Newtonsoft.Json.JsonProperty("role_big_icon")]
  public string RoleBigIcon { get; set; }

  public RogueCharacterT() {
    this.Id = 0;
    this.RoleId = 0;
    this.Quality = 1;
    this.RoleIcon = null;
    this.RoleName = null;
    this.RoleBigIcon = null;
  }
}


static public class RogueCharacterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RoleId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Quality*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*RoleIcon*/, false)
      && verifier.VerifyString(tablePos, 12 /*RoleName*/, false)
      && verifier.VerifyString(tablePos, 14 /*RoleBigIcon*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
