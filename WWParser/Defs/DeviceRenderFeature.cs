// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DeviceRenderFeature : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DeviceRenderFeature GetRootAsDeviceRenderFeature(ByteBuffer _bb) { return GetRootAsDeviceRenderFeature(_bb, new DeviceRenderFeature()); }
  public static DeviceRenderFeature GetRootAsDeviceRenderFeature(ByteBuffer _bb, DeviceRenderFeature obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DeviceRenderFeature __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DeviceId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QualityType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DefaultQuality { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Fps { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)30; } }
  public int ShadowQuality { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)2; } }
  public int FxQuality { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int ImageDetail { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)2; } }
  public int AntiAliasing { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int Ao { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int VolumeFog { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int VolumeLight { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int MotionBlur { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int StreamLevel { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int VSync { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int ScreenPercentage { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)3; } }
  public int SuperResolution { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)2; } }
  public int NpcDensity { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)2; } }
  public int Bloom { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string OtherCommand { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOtherCommandBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetOtherCommandBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetOtherCommandArray() { return __p.__vector_as_array<byte>(42); }

  public static Offset<WWParser.Defs.DeviceRenderFeature> CreateDeviceRenderFeature(FlatBufferBuilder builder,
      int id = 0,
      int device_id = 0,
      int quality_type = 0,
      int default_quality = 0,
      int fps = 30,
      int shadow_quality = 2,
      int fx_quality = 1,
      int image_detail = 2,
      int anti_aliasing = 1,
      int ao = 1,
      int volume_fog = 1,
      int volume_light = 1,
      int motion_blur = 1,
      int stream_level = 1,
      int v_sync = 1,
      int screen_percentage = 3,
      int super_resolution = 2,
      int npc_density = 2,
      int bloom = 1,
      StringOffset other_commandOffset = default(StringOffset)) {
    builder.StartTable(20);
    DeviceRenderFeature.AddOtherCommand(builder, other_commandOffset);
    DeviceRenderFeature.AddBloom(builder, bloom);
    DeviceRenderFeature.AddNpcDensity(builder, npc_density);
    DeviceRenderFeature.AddSuperResolution(builder, super_resolution);
    DeviceRenderFeature.AddScreenPercentage(builder, screen_percentage);
    DeviceRenderFeature.AddVSync(builder, v_sync);
    DeviceRenderFeature.AddStreamLevel(builder, stream_level);
    DeviceRenderFeature.AddMotionBlur(builder, motion_blur);
    DeviceRenderFeature.AddVolumeLight(builder, volume_light);
    DeviceRenderFeature.AddVolumeFog(builder, volume_fog);
    DeviceRenderFeature.AddAo(builder, ao);
    DeviceRenderFeature.AddAntiAliasing(builder, anti_aliasing);
    DeviceRenderFeature.AddImageDetail(builder, image_detail);
    DeviceRenderFeature.AddFxQuality(builder, fx_quality);
    DeviceRenderFeature.AddShadowQuality(builder, shadow_quality);
    DeviceRenderFeature.AddFps(builder, fps);
    DeviceRenderFeature.AddDefaultQuality(builder, default_quality);
    DeviceRenderFeature.AddQualityType(builder, quality_type);
    DeviceRenderFeature.AddDeviceId(builder, device_id);
    DeviceRenderFeature.AddId(builder, id);
    return DeviceRenderFeature.EndDeviceRenderFeature(builder);
  }

  public static void StartDeviceRenderFeature(FlatBufferBuilder builder) { builder.StartTable(20); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddDeviceId(FlatBufferBuilder builder, int deviceId) { builder.AddInt(1, deviceId, 0); }
  public static void AddQualityType(FlatBufferBuilder builder, int qualityType) { builder.AddInt(2, qualityType, 0); }
  public static void AddDefaultQuality(FlatBufferBuilder builder, int defaultQuality) { builder.AddInt(3, defaultQuality, 0); }
  public static void AddFps(FlatBufferBuilder builder, int fps) { builder.AddInt(4, fps, 30); }
  public static void AddShadowQuality(FlatBufferBuilder builder, int shadowQuality) { builder.AddInt(5, shadowQuality, 2); }
  public static void AddFxQuality(FlatBufferBuilder builder, int fxQuality) { builder.AddInt(6, fxQuality, 1); }
  public static void AddImageDetail(FlatBufferBuilder builder, int imageDetail) { builder.AddInt(7, imageDetail, 2); }
  public static void AddAntiAliasing(FlatBufferBuilder builder, int antiAliasing) { builder.AddInt(8, antiAliasing, 1); }
  public static void AddAo(FlatBufferBuilder builder, int ao) { builder.AddInt(9, ao, 1); }
  public static void AddVolumeFog(FlatBufferBuilder builder, int volumeFog) { builder.AddInt(10, volumeFog, 1); }
  public static void AddVolumeLight(FlatBufferBuilder builder, int volumeLight) { builder.AddInt(11, volumeLight, 1); }
  public static void AddMotionBlur(FlatBufferBuilder builder, int motionBlur) { builder.AddInt(12, motionBlur, 1); }
  public static void AddStreamLevel(FlatBufferBuilder builder, int streamLevel) { builder.AddInt(13, streamLevel, 1); }
  public static void AddVSync(FlatBufferBuilder builder, int vSync) { builder.AddInt(14, vSync, 1); }
  public static void AddScreenPercentage(FlatBufferBuilder builder, int screenPercentage) { builder.AddInt(15, screenPercentage, 3); }
  public static void AddSuperResolution(FlatBufferBuilder builder, int superResolution) { builder.AddInt(16, superResolution, 2); }
  public static void AddNpcDensity(FlatBufferBuilder builder, int npcDensity) { builder.AddInt(17, npcDensity, 2); }
  public static void AddBloom(FlatBufferBuilder builder, int bloom) { builder.AddInt(18, bloom, 1); }
  public static void AddOtherCommand(FlatBufferBuilder builder, StringOffset otherCommandOffset) { builder.AddOffset(19, otherCommandOffset.Value, 0); }
  public static Offset<WWParser.Defs.DeviceRenderFeature> EndDeviceRenderFeature(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DeviceRenderFeature>(o);
  }
  public DeviceRenderFeatureT UnPack() {
    var _o = new DeviceRenderFeatureT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DeviceRenderFeatureT _o) {
    _o.Id = this.Id;
    _o.DeviceId = this.DeviceId;
    _o.QualityType = this.QualityType;
    _o.DefaultQuality = this.DefaultQuality;
    _o.Fps = this.Fps;
    _o.ShadowQuality = this.ShadowQuality;
    _o.FxQuality = this.FxQuality;
    _o.ImageDetail = this.ImageDetail;
    _o.AntiAliasing = this.AntiAliasing;
    _o.Ao = this.Ao;
    _o.VolumeFog = this.VolumeFog;
    _o.VolumeLight = this.VolumeLight;
    _o.MotionBlur = this.MotionBlur;
    _o.StreamLevel = this.StreamLevel;
    _o.VSync = this.VSync;
    _o.ScreenPercentage = this.ScreenPercentage;
    _o.SuperResolution = this.SuperResolution;
    _o.NpcDensity = this.NpcDensity;
    _o.Bloom = this.Bloom;
    _o.OtherCommand = this.OtherCommand;
  }
  public static Offset<WWParser.Defs.DeviceRenderFeature> Pack(FlatBufferBuilder builder, DeviceRenderFeatureT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DeviceRenderFeature>);
    var _other_command = _o.OtherCommand == null ? default(StringOffset) : builder.CreateString(_o.OtherCommand);
    return CreateDeviceRenderFeature(
      builder,
      _o.Id,
      _o.DeviceId,
      _o.QualityType,
      _o.DefaultQuality,
      _o.Fps,
      _o.ShadowQuality,
      _o.FxQuality,
      _o.ImageDetail,
      _o.AntiAliasing,
      _o.Ao,
      _o.VolumeFog,
      _o.VolumeLight,
      _o.MotionBlur,
      _o.StreamLevel,
      _o.VSync,
      _o.ScreenPercentage,
      _o.SuperResolution,
      _o.NpcDensity,
      _o.Bloom,
      _other_command);
  }
}

public class DeviceRenderFeatureT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("device_id")]
  public int DeviceId { get; set; }
  [Newtonsoft.Json.JsonProperty("quality_type")]
  public int QualityType { get; set; }
  [Newtonsoft.Json.JsonProperty("default_quality")]
  public int DefaultQuality { get; set; }
  [Newtonsoft.Json.JsonProperty("fps")]
  public int Fps { get; set; }
  [Newtonsoft.Json.JsonProperty("shadow_quality")]
  public int ShadowQuality { get; set; }
  [Newtonsoft.Json.JsonProperty("fx_quality")]
  public int FxQuality { get; set; }
  [Newtonsoft.Json.JsonProperty("image_detail")]
  public int ImageDetail { get; set; }
  [Newtonsoft.Json.JsonProperty("anti_aliasing")]
  public int AntiAliasing { get; set; }
  [Newtonsoft.Json.JsonProperty("ao")]
  public int Ao { get; set; }
  [Newtonsoft.Json.JsonProperty("volume_fog")]
  public int VolumeFog { get; set; }
  [Newtonsoft.Json.JsonProperty("volume_light")]
  public int VolumeLight { get; set; }
  [Newtonsoft.Json.JsonProperty("motion_blur")]
  public int MotionBlur { get; set; }
  [Newtonsoft.Json.JsonProperty("stream_level")]
  public int StreamLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("v_sync")]
  public int VSync { get; set; }
  [Newtonsoft.Json.JsonProperty("screen_percentage")]
  public int ScreenPercentage { get; set; }
  [Newtonsoft.Json.JsonProperty("super_resolution")]
  public int SuperResolution { get; set; }
  [Newtonsoft.Json.JsonProperty("npc_density")]
  public int NpcDensity { get; set; }
  [Newtonsoft.Json.JsonProperty("bloom")]
  public int Bloom { get; set; }
  [Newtonsoft.Json.JsonProperty("other_command")]
  public string OtherCommand { get; set; }

  public DeviceRenderFeatureT() {
    this.Id = 0;
    this.DeviceId = 0;
    this.QualityType = 0;
    this.DefaultQuality = 0;
    this.Fps = 30;
    this.ShadowQuality = 2;
    this.FxQuality = 1;
    this.ImageDetail = 2;
    this.AntiAliasing = 1;
    this.Ao = 1;
    this.VolumeFog = 1;
    this.VolumeLight = 1;
    this.MotionBlur = 1;
    this.StreamLevel = 1;
    this.VSync = 1;
    this.ScreenPercentage = 3;
    this.SuperResolution = 2;
    this.NpcDensity = 2;
    this.Bloom = 1;
    this.OtherCommand = null;
  }
}


static public class DeviceRenderFeatureVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*DeviceId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*QualityType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*DefaultQuality*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Fps*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ShadowQuality*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*FxQuality*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*ImageDetail*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*AntiAliasing*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*Ao*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*VolumeFog*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*VolumeLight*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*MotionBlur*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*StreamLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*VSync*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*ScreenPercentage*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 36 /*SuperResolution*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 38 /*NpcDensity*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 40 /*Bloom*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 42 /*OtherCommand*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
