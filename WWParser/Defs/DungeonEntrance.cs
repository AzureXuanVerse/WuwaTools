// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DungeonEntrance : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DungeonEntrance GetRootAsDungeonEntrance(ByteBuffer _bb) { return GetRootAsDungeonEntrance(_bb, new DungeonEntrance()); }
  public static DungeonEntrance GetRootAsDungeonEntrance(ByteBuffer _bb, DungeonEntrance obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DungeonEntrance __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DungeonId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntranceEntityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.DungeonEntrance> CreateDungeonEntrance(FlatBufferBuilder builder,
      int dungeon_id = 0,
      int entrance_entity_id = 0) {
    builder.StartTable(2);
    DungeonEntrance.AddEntranceEntityId(builder, entrance_entity_id);
    DungeonEntrance.AddDungeonId(builder, dungeon_id);
    return DungeonEntrance.EndDungeonEntrance(builder);
  }

  public static void StartDungeonEntrance(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDungeonId(FlatBufferBuilder builder, int dungeonId) { builder.AddInt(0, dungeonId, 0); }
  public static void AddEntranceEntityId(FlatBufferBuilder builder, int entranceEntityId) { builder.AddInt(1, entranceEntityId, 0); }
  public static Offset<WWParser.Defs.DungeonEntrance> EndDungeonEntrance(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DungeonEntrance>(o);
  }
  public DungeonEntranceT UnPack() {
    var _o = new DungeonEntranceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DungeonEntranceT _o) {
    _o.DungeonId = this.DungeonId;
    _o.EntranceEntityId = this.EntranceEntityId;
  }
  public static Offset<WWParser.Defs.DungeonEntrance> Pack(FlatBufferBuilder builder, DungeonEntranceT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DungeonEntrance>);
    return CreateDungeonEntrance(
      builder,
      _o.DungeonId,
      _o.EntranceEntityId);
  }
}

public class DungeonEntranceT
{
  [Newtonsoft.Json.JsonProperty("dungeon_id")]
  public int DungeonId { get; set; }
  [Newtonsoft.Json.JsonProperty("entrance_entity_id")]
  public int EntranceEntityId { get; set; }

  public DungeonEntranceT() {
    this.DungeonId = 0;
    this.EntranceEntityId = 0;
  }
}


static public class DungeonEntranceVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*DungeonId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*EntranceEntityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
