// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FogBlock : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FogBlock GetRootAsFogBlock(ByteBuffer _bb) { return GetRootAsFogBlock(_bb, new FogBlock()); }
  public static FogBlock GetRootAsFogBlock(ByteBuffer _bb, FogBlock obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FogBlock __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Block { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBlockBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBlockBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBlockArray() { return __p.__vector_as_array<byte>(6); }
  public int MapId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int R { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int G { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int B { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Alpha { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.FogBlock> CreateFogBlock(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset blockOffset = default(StringOffset),
      int map_id = 0,
      int r = 0,
      int g = 0,
      int b = 0,
      int alpha = 0) {
    builder.StartTable(7);
    FogBlock.AddAlpha(builder, alpha);
    FogBlock.AddB(builder, b);
    FogBlock.AddG(builder, g);
    FogBlock.AddR(builder, r);
    FogBlock.AddMapId(builder, map_id);
    FogBlock.AddBlock(builder, blockOffset);
    FogBlock.AddId(builder, idOffset);
    return FogBlock.EndFogBlock(builder);
  }

  public static void StartFogBlock(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddBlock(FlatBufferBuilder builder, StringOffset blockOffset) { builder.AddOffset(1, blockOffset.Value, 0); }
  public static void AddMapId(FlatBufferBuilder builder, int mapId) { builder.AddInt(2, mapId, 0); }
  public static void AddR(FlatBufferBuilder builder, int r) { builder.AddInt(3, r, 0); }
  public static void AddG(FlatBufferBuilder builder, int g) { builder.AddInt(4, g, 0); }
  public static void AddB(FlatBufferBuilder builder, int b) { builder.AddInt(5, b, 0); }
  public static void AddAlpha(FlatBufferBuilder builder, int alpha) { builder.AddInt(6, alpha, 0); }
  public static Offset<WWParser.Defs.FogBlock> EndFogBlock(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FogBlock>(o);
  }
  public FogBlockT UnPack() {
    var _o = new FogBlockT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FogBlockT _o) {
    _o.Id = this.Id;
    _o.Block = this.Block;
    _o.MapId = this.MapId;
    _o.R = this.R;
    _o.G = this.G;
    _o.B = this.B;
    _o.Alpha = this.Alpha;
  }
  public static Offset<WWParser.Defs.FogBlock> Pack(FlatBufferBuilder builder, FogBlockT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FogBlock>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _block = _o.Block == null ? default(StringOffset) : builder.CreateString(_o.Block);
    return CreateFogBlock(
      builder,
      _id,
      _block,
      _o.MapId,
      _o.R,
      _o.G,
      _o.B,
      _o.Alpha);
  }
}

public class FogBlockT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public string Id { get; set; }
  [Newtonsoft.Json.JsonProperty("block")]
  public string Block { get; set; }
  [Newtonsoft.Json.JsonProperty("map_id")]
  public int MapId { get; set; }
  [Newtonsoft.Json.JsonProperty("r")]
  public int R { get; set; }
  [Newtonsoft.Json.JsonProperty("g")]
  public int G { get; set; }
  [Newtonsoft.Json.JsonProperty("b")]
  public int B { get; set; }
  [Newtonsoft.Json.JsonProperty("alpha")]
  public int Alpha { get; set; }

  public FogBlockT() {
    this.Id = null;
    this.Block = null;
    this.MapId = 0;
    this.R = 0;
    this.G = 0;
    this.B = 0;
    this.Alpha = 0;
  }
}


static public class FogBlockVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Block*/, false)
      && verifier.VerifyField(tablePos, 8 /*MapId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*R*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*G*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*B*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Alpha*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
