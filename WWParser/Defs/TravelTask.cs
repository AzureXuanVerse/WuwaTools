// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TravelTask : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TravelTask GetRootAsTravelTask(ByteBuffer _bb) { return GetRootAsTravelTask(_bb, new TravelTask()); }
  public static TravelTask GetRootAsTravelTask(ByteBuffer _bb, TravelTask obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TravelTask __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TaskId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public int TaskReward { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AreaId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int JumpId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TravelTask> CreateTravelTask(FlatBufferBuilder builder,
      int task_id = 0,
      int activity_id = 0,
      StringOffset nameOffset = default(StringOffset),
      int task_reward = 0,
      int area_id = 0,
      int jump_id = 0) {
    builder.StartTable(6);
    TravelTask.AddJumpId(builder, jump_id);
    TravelTask.AddAreaId(builder, area_id);
    TravelTask.AddTaskReward(builder, task_reward);
    TravelTask.AddName(builder, nameOffset);
    TravelTask.AddActivityId(builder, activity_id);
    TravelTask.AddTaskId(builder, task_id);
    return TravelTask.EndTravelTask(builder);
  }

  public static void StartTravelTask(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddTaskId(FlatBufferBuilder builder, int taskId) { builder.AddInt(0, taskId, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddTaskReward(FlatBufferBuilder builder, int taskReward) { builder.AddInt(3, taskReward, 0); }
  public static void AddAreaId(FlatBufferBuilder builder, int areaId) { builder.AddInt(4, areaId, 0); }
  public static void AddJumpId(FlatBufferBuilder builder, int jumpId) { builder.AddInt(5, jumpId, 0); }
  public static Offset<WWParser.Defs.TravelTask> EndTravelTask(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TravelTask>(o);
  }
  public TravelTaskT UnPack() {
    var _o = new TravelTaskT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TravelTaskT _o) {
    _o.TaskId = this.TaskId;
    _o.ActivityId = this.ActivityId;
    _o.Name = this.Name;
    _o.TaskReward = this.TaskReward;
    _o.AreaId = this.AreaId;
    _o.JumpId = this.JumpId;
  }
  public static Offset<WWParser.Defs.TravelTask> Pack(FlatBufferBuilder builder, TravelTaskT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TravelTask>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateTravelTask(
      builder,
      _o.TaskId,
      _o.ActivityId,
      _name,
      _o.TaskReward,
      _o.AreaId,
      _o.JumpId);
  }
}

public class TravelTaskT
{
  [Newtonsoft.Json.JsonProperty("task_id")]
  public int TaskId { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("task_reward")]
  public int TaskReward { get; set; }
  [Newtonsoft.Json.JsonProperty("area_id")]
  public int AreaId { get; set; }
  [Newtonsoft.Json.JsonProperty("jump_id")]
  public int JumpId { get; set; }

  public TravelTaskT() {
    this.TaskId = 0;
    this.ActivityId = 0;
    this.Name = null;
    this.TaskReward = 0;
    this.AreaId = 0;
    this.JumpId = 0;
  }
}


static public class TravelTaskVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TaskId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyField(tablePos, 10 /*TaskReward*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*AreaId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*JumpId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
