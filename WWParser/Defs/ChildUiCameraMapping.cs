// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ChildUiCameraMapping : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ChildUiCameraMapping GetRootAsChildUiCameraMapping(ByteBuffer _bb) { return GetRootAsChildUiCameraMapping(_bb, new ChildUiCameraMapping()); }
  public static ChildUiCameraMapping GetRootAsChildUiCameraMapping(ByteBuffer _bb, ChildUiCameraMapping obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChildUiCameraMapping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string ViewName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetViewNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetViewNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetViewNameArray() { return __p.__vector_as_array<byte>(6); }
  public string DefaultUiCameraSettingsName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDefaultUiCameraSettingsNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDefaultUiCameraSettingsNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDefaultUiCameraSettingsNameArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsCheckSpecialState { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string SpecialStateCameraSettingName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpecialStateCameraSettingNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetSpecialStateCameraSettingNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetSpecialStateCameraSettingNameArray() { return __p.__vector_as_array<byte>(12); }
  public bool BPlayLoadingCameraAnimation { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int BodyTargetType { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicStringString? BodyCameraSettingsNameMap(int j) { int o = __p.__offset(18); return o != 0 ? (WWParser.Defs.DicStringString?)(new WWParser.Defs.DicStringString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BodyCameraSettingsNameMapLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string DefaultCameraBlendName { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDefaultCameraBlendNameBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetDefaultCameraBlendNameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetDefaultCameraBlendNameArray() { return __p.__vector_as_array<byte>(20); }
  public WWParser.Defs.DicStringString? UiCameraBlendNameMap(int j) { int o = __p.__offset(22); return o != 0 ? (WWParser.Defs.DicStringString?)(new WWParser.Defs.DicStringString()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UiCameraBlendNameMapLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int UiCameraDelayTime { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.ChildUiCameraMapping> CreateChildUiCameraMapping(FlatBufferBuilder builder,
      int id = 0,
      StringOffset view_nameOffset = default(StringOffset),
      StringOffset default_ui_camera_settings_nameOffset = default(StringOffset),
      bool is_check_special_state = false,
      StringOffset special_state_camera_setting_nameOffset = default(StringOffset),
      bool b_play_loading_camera_animation = false,
      int body_target_type = 0,
      VectorOffset body_camera_settings_name_mapOffset = default(VectorOffset),
      StringOffset default_camera_blend_nameOffset = default(StringOffset),
      VectorOffset ui_camera_blend_name_mapOffset = default(VectorOffset),
      int ui_camera_delay_time = 0) {
    builder.StartTable(11);
    ChildUiCameraMapping.AddUiCameraDelayTime(builder, ui_camera_delay_time);
    ChildUiCameraMapping.AddUiCameraBlendNameMap(builder, ui_camera_blend_name_mapOffset);
    ChildUiCameraMapping.AddDefaultCameraBlendName(builder, default_camera_blend_nameOffset);
    ChildUiCameraMapping.AddBodyCameraSettingsNameMap(builder, body_camera_settings_name_mapOffset);
    ChildUiCameraMapping.AddBodyTargetType(builder, body_target_type);
    ChildUiCameraMapping.AddSpecialStateCameraSettingName(builder, special_state_camera_setting_nameOffset);
    ChildUiCameraMapping.AddDefaultUiCameraSettingsName(builder, default_ui_camera_settings_nameOffset);
    ChildUiCameraMapping.AddViewName(builder, view_nameOffset);
    ChildUiCameraMapping.AddId(builder, id);
    ChildUiCameraMapping.AddBPlayLoadingCameraAnimation(builder, b_play_loading_camera_animation);
    ChildUiCameraMapping.AddIsCheckSpecialState(builder, is_check_special_state);
    return ChildUiCameraMapping.EndChildUiCameraMapping(builder);
  }

  public static void StartChildUiCameraMapping(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddViewName(FlatBufferBuilder builder, StringOffset viewNameOffset) { builder.AddOffset(1, viewNameOffset.Value, 0); }
  public static void AddDefaultUiCameraSettingsName(FlatBufferBuilder builder, StringOffset defaultUiCameraSettingsNameOffset) { builder.AddOffset(2, defaultUiCameraSettingsNameOffset.Value, 0); }
  public static void AddIsCheckSpecialState(FlatBufferBuilder builder, bool isCheckSpecialState) { builder.AddBool(3, isCheckSpecialState, false); }
  public static void AddSpecialStateCameraSettingName(FlatBufferBuilder builder, StringOffset specialStateCameraSettingNameOffset) { builder.AddOffset(4, specialStateCameraSettingNameOffset.Value, 0); }
  public static void AddBPlayLoadingCameraAnimation(FlatBufferBuilder builder, bool bPlayLoadingCameraAnimation) { builder.AddBool(5, bPlayLoadingCameraAnimation, false); }
  public static void AddBodyTargetType(FlatBufferBuilder builder, int bodyTargetType) { builder.AddInt(6, bodyTargetType, 0); }
  public static void AddBodyCameraSettingsNameMap(FlatBufferBuilder builder, VectorOffset bodyCameraSettingsNameMapOffset) { builder.AddOffset(7, bodyCameraSettingsNameMapOffset.Value, 0); }
  public static VectorOffset CreateBodyCameraSettingsNameMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBodyCameraSettingsNameMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBodyCameraSettingsNameMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBodyCameraSettingsNameMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBodyCameraSettingsNameMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDefaultCameraBlendName(FlatBufferBuilder builder, StringOffset defaultCameraBlendNameOffset) { builder.AddOffset(8, defaultCameraBlendNameOffset.Value, 0); }
  public static void AddUiCameraBlendNameMap(FlatBufferBuilder builder, VectorOffset uiCameraBlendNameMapOffset) { builder.AddOffset(9, uiCameraBlendNameMapOffset.Value, 0); }
  public static VectorOffset CreateUiCameraBlendNameMapVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUiCameraBlendNameMapVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicStringString>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateUiCameraBlendNameMapVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicStringString>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateUiCameraBlendNameMapVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicStringString>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartUiCameraBlendNameMapVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddUiCameraDelayTime(FlatBufferBuilder builder, int uiCameraDelayTime) { builder.AddInt(10, uiCameraDelayTime, 0); }
  public static Offset<WWParser.Defs.ChildUiCameraMapping> EndChildUiCameraMapping(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ChildUiCameraMapping>(o);
  }
  public ChildUiCameraMappingT UnPack() {
    var _o = new ChildUiCameraMappingT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ChildUiCameraMappingT _o) {
    _o.Id = this.Id;
    _o.ViewName = this.ViewName;
    _o.DefaultUiCameraSettingsName = this.DefaultUiCameraSettingsName;
    _o.IsCheckSpecialState = this.IsCheckSpecialState;
    _o.SpecialStateCameraSettingName = this.SpecialStateCameraSettingName;
    _o.BPlayLoadingCameraAnimation = this.BPlayLoadingCameraAnimation;
    _o.BodyTargetType = this.BodyTargetType;
    _o.BodyCameraSettingsNameMap = new List<WWParser.Defs.DicStringStringT>();
    for (var _j = 0; _j < this.BodyCameraSettingsNameMapLength; ++_j) {_o.BodyCameraSettingsNameMap.Add(this.BodyCameraSettingsNameMap(_j).HasValue ? this.BodyCameraSettingsNameMap(_j).Value.UnPack() : null);}
    _o.DefaultCameraBlendName = this.DefaultCameraBlendName;
    _o.UiCameraBlendNameMap = new List<WWParser.Defs.DicStringStringT>();
    for (var _j = 0; _j < this.UiCameraBlendNameMapLength; ++_j) {_o.UiCameraBlendNameMap.Add(this.UiCameraBlendNameMap(_j).HasValue ? this.UiCameraBlendNameMap(_j).Value.UnPack() : null);}
    _o.UiCameraDelayTime = this.UiCameraDelayTime;
  }
  public static Offset<WWParser.Defs.ChildUiCameraMapping> Pack(FlatBufferBuilder builder, ChildUiCameraMappingT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ChildUiCameraMapping>);
    var _view_name = _o.ViewName == null ? default(StringOffset) : builder.CreateString(_o.ViewName);
    var _default_ui_camera_settings_name = _o.DefaultUiCameraSettingsName == null ? default(StringOffset) : builder.CreateString(_o.DefaultUiCameraSettingsName);
    var _special_state_camera_setting_name = _o.SpecialStateCameraSettingName == null ? default(StringOffset) : builder.CreateString(_o.SpecialStateCameraSettingName);
    var _body_camera_settings_name_map = default(VectorOffset);
    if (_o.BodyCameraSettingsNameMap != null) {
      var __body_camera_settings_name_map = new Offset<WWParser.Defs.DicStringString>[_o.BodyCameraSettingsNameMap.Count];
      for (var _j = 0; _j < __body_camera_settings_name_map.Length; ++_j) { __body_camera_settings_name_map[_j] = WWParser.Defs.DicStringString.Pack(builder, _o.BodyCameraSettingsNameMap[_j]); }
      _body_camera_settings_name_map = CreateBodyCameraSettingsNameMapVector(builder, __body_camera_settings_name_map);
    }
    var _default_camera_blend_name = _o.DefaultCameraBlendName == null ? default(StringOffset) : builder.CreateString(_o.DefaultCameraBlendName);
    var _ui_camera_blend_name_map = default(VectorOffset);
    if (_o.UiCameraBlendNameMap != null) {
      var __ui_camera_blend_name_map = new Offset<WWParser.Defs.DicStringString>[_o.UiCameraBlendNameMap.Count];
      for (var _j = 0; _j < __ui_camera_blend_name_map.Length; ++_j) { __ui_camera_blend_name_map[_j] = WWParser.Defs.DicStringString.Pack(builder, _o.UiCameraBlendNameMap[_j]); }
      _ui_camera_blend_name_map = CreateUiCameraBlendNameMapVector(builder, __ui_camera_blend_name_map);
    }
    return CreateChildUiCameraMapping(
      builder,
      _o.Id,
      _view_name,
      _default_ui_camera_settings_name,
      _o.IsCheckSpecialState,
      _special_state_camera_setting_name,
      _o.BPlayLoadingCameraAnimation,
      _o.BodyTargetType,
      _body_camera_settings_name_map,
      _default_camera_blend_name,
      _ui_camera_blend_name_map,
      _o.UiCameraDelayTime);
  }
}

public class ChildUiCameraMappingT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("view_name")]
  public string ViewName { get; set; }
  [Newtonsoft.Json.JsonProperty("default_ui_camera_settings_name")]
  public string DefaultUiCameraSettingsName { get; set; }
  [Newtonsoft.Json.JsonProperty("is_check_special_state")]
  public bool IsCheckSpecialState { get; set; }
  [Newtonsoft.Json.JsonProperty("special_state_camera_setting_name")]
  public string SpecialStateCameraSettingName { get; set; }
  [Newtonsoft.Json.JsonProperty("b_play_loading_camera_animation")]
  public bool BPlayLoadingCameraAnimation { get; set; }
  [Newtonsoft.Json.JsonProperty("body_target_type")]
  public int BodyTargetType { get; set; }
  [Newtonsoft.Json.JsonProperty("body_camera_settings_name_map")]
  public List<WWParser.Defs.DicStringStringT> BodyCameraSettingsNameMap { get; set; }
  [Newtonsoft.Json.JsonProperty("default_camera_blend_name")]
  public string DefaultCameraBlendName { get; set; }
  [Newtonsoft.Json.JsonProperty("ui_camera_blend_name_map")]
  public List<WWParser.Defs.DicStringStringT> UiCameraBlendNameMap { get; set; }
  [Newtonsoft.Json.JsonProperty("ui_camera_delay_time")]
  public int UiCameraDelayTime { get; set; }

  public ChildUiCameraMappingT() {
    this.Id = 0;
    this.ViewName = null;
    this.DefaultUiCameraSettingsName = null;
    this.IsCheckSpecialState = false;
    this.SpecialStateCameraSettingName = null;
    this.BPlayLoadingCameraAnimation = false;
    this.BodyTargetType = 0;
    this.BodyCameraSettingsNameMap = null;
    this.DefaultCameraBlendName = null;
    this.UiCameraBlendNameMap = null;
    this.UiCameraDelayTime = 0;
  }
}


static public class ChildUiCameraMappingVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*ViewName*/, false)
      && verifier.VerifyString(tablePos, 8 /*DefaultUiCameraSettingsName*/, false)
      && verifier.VerifyField(tablePos, 10 /*IsCheckSpecialState*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 12 /*SpecialStateCameraSettingName*/, false)
      && verifier.VerifyField(tablePos, 14 /*BPlayLoadingCameraAnimation*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*BodyTargetType*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 18 /*BodyCameraSettingsNameMap*/, WWParser.Defs.DicStringStringVerify.Verify, false)
      && verifier.VerifyString(tablePos, 20 /*DefaultCameraBlendName*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 22 /*UiCameraBlendNameMap*/, WWParser.Defs.DicStringStringVerify.Verify, false)
      && verifier.VerifyField(tablePos, 24 /*UiCameraDelayTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
