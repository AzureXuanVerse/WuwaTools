// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LipSyncData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static LipSyncData GetRootAsLipSyncData(ByteBuffer _bb) { return GetRootAsLipSyncData(_bb, new LipSyncData()); }
  public static LipSyncData GetRootAsLipSyncData(ByteBuffer _bb, LipSyncData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LipSyncData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DataId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string FunctionName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFunctionNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetFunctionNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetFunctionNameArray() { return __p.__vector_as_array<byte>(6); }
  public string LipSyncData_ { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLipSyncDataBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLipSyncDataBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLipSyncDataArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<WWParser.Defs.LipSyncData> CreateLipSyncData(FlatBufferBuilder builder,
      int data_id = 0,
      StringOffset function_nameOffset = default(StringOffset),
      StringOffset lip_sync_dataOffset = default(StringOffset)) {
    builder.StartTable(3);
    LipSyncData.AddLipSyncData(builder, lip_sync_dataOffset);
    LipSyncData.AddFunctionName(builder, function_nameOffset);
    LipSyncData.AddDataId(builder, data_id);
    return LipSyncData.EndLipSyncData(builder);
  }

  public static void StartLipSyncData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddDataId(FlatBufferBuilder builder, int dataId) { builder.AddInt(0, dataId, 0); }
  public static void AddFunctionName(FlatBufferBuilder builder, StringOffset functionNameOffset) { builder.AddOffset(1, functionNameOffset.Value, 0); }
  public static void AddLipSyncData(FlatBufferBuilder builder, StringOffset lipSyncDataOffset) { builder.AddOffset(2, lipSyncDataOffset.Value, 0); }
  public static Offset<WWParser.Defs.LipSyncData> EndLipSyncData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.LipSyncData>(o);
  }
  public LipSyncDataT UnPack() {
    var _o = new LipSyncDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LipSyncDataT _o) {
    _o.DataId = this.DataId;
    _o.FunctionName = this.FunctionName;
    _o.LipSyncData_ = this.LipSyncData_;
  }
  public static Offset<WWParser.Defs.LipSyncData> Pack(FlatBufferBuilder builder, LipSyncDataT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.LipSyncData>);
    var _function_name = _o.FunctionName == null ? default(StringOffset) : builder.CreateString(_o.FunctionName);
    var _lip_sync_data = _o.LipSyncData_ == null ? default(StringOffset) : builder.CreateString(_o.LipSyncData_);
    return CreateLipSyncData(
      builder,
      _o.DataId,
      _function_name,
      _lip_sync_data);
  }
}

public class LipSyncDataT
{
  [Newtonsoft.Json.JsonProperty("data_id")]
  public int DataId { get; set; }
  [Newtonsoft.Json.JsonProperty("function_name")]
  public string FunctionName { get; set; }
  [Newtonsoft.Json.JsonProperty("lip_sync_data")]
  public string LipSyncData_ { get; set; }

  public LipSyncDataT() {
    this.DataId = 0;
    this.FunctionName = null;
    this.LipSyncData_ = null;
  }
}


static public class LipSyncDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*DataId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*FunctionName*/, false)
      && verifier.VerifyString(tablePos, 8 /*LipSyncData*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
