// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConfirmBox : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ConfirmBox GetRootAsConfirmBox(ByteBuffer _bb) { return GetRootAsConfirmBox(_bb, new ConfirmBox()); }
  public static ConfirmBox GetRootAsConfirmBox(ByteBuffer _bb, ConfirmBox obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConfirmBox __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string Content { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContentBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetContentBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetContentArray() { return __p.__vector_as_array<byte>(8); }
  public string SecondaryContent { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSecondaryContentBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSecondaryContentBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSecondaryContentArray() { return __p.__vector_as_array<byte>(10); }
  public string ButtonText(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ButtonTextLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int DelayTime { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DelayButtonIndex { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool NeedMaskClose { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int UiShowType { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool NeedClose { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int TimeDilation { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }

  public static Offset<WWParser.Defs.ConfirmBox> CreateConfirmBox(FlatBufferBuilder builder,
      int id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset contentOffset = default(StringOffset),
      StringOffset secondary_contentOffset = default(StringOffset),
      VectorOffset button_textOffset = default(VectorOffset),
      int delay_time = 0,
      int delay_button_index = 0,
      bool need_mask_close = false,
      int ui_show_type = 0,
      bool need_close = false,
      int time_dilation = 1) {
    builder.StartTable(11);
    ConfirmBox.AddTimeDilation(builder, time_dilation);
    ConfirmBox.AddUiShowType(builder, ui_show_type);
    ConfirmBox.AddDelayButtonIndex(builder, delay_button_index);
    ConfirmBox.AddDelayTime(builder, delay_time);
    ConfirmBox.AddButtonText(builder, button_textOffset);
    ConfirmBox.AddSecondaryContent(builder, secondary_contentOffset);
    ConfirmBox.AddContent(builder, contentOffset);
    ConfirmBox.AddTitle(builder, titleOffset);
    ConfirmBox.AddId(builder, id);
    ConfirmBox.AddNeedClose(builder, need_close);
    ConfirmBox.AddNeedMaskClose(builder, need_mask_close);
    return ConfirmBox.EndConfirmBox(builder);
  }

  public static void StartConfirmBox(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(1, titleOffset.Value, 0); }
  public static void AddContent(FlatBufferBuilder builder, StringOffset contentOffset) { builder.AddOffset(2, contentOffset.Value, 0); }
  public static void AddSecondaryContent(FlatBufferBuilder builder, StringOffset secondaryContentOffset) { builder.AddOffset(3, secondaryContentOffset.Value, 0); }
  public static void AddButtonText(FlatBufferBuilder builder, VectorOffset buttonTextOffset) { builder.AddOffset(4, buttonTextOffset.Value, 0); }
  public static VectorOffset CreateButtonTextVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateButtonTextVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateButtonTextVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateButtonTextVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartButtonTextVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDelayTime(FlatBufferBuilder builder, int delayTime) { builder.AddInt(5, delayTime, 0); }
  public static void AddDelayButtonIndex(FlatBufferBuilder builder, int delayButtonIndex) { builder.AddInt(6, delayButtonIndex, 0); }
  public static void AddNeedMaskClose(FlatBufferBuilder builder, bool needMaskClose) { builder.AddBool(7, needMaskClose, false); }
  public static void AddUiShowType(FlatBufferBuilder builder, int uiShowType) { builder.AddInt(8, uiShowType, 0); }
  public static void AddNeedClose(FlatBufferBuilder builder, bool needClose) { builder.AddBool(9, needClose, false); }
  public static void AddTimeDilation(FlatBufferBuilder builder, int timeDilation) { builder.AddInt(10, timeDilation, 1); }
  public static Offset<WWParser.Defs.ConfirmBox> EndConfirmBox(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ConfirmBox>(o);
  }
  public ConfirmBoxT UnPack() {
    var _o = new ConfirmBoxT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ConfirmBoxT _o) {
    _o.Id = this.Id;
    _o.Title = this.Title;
    _o.Content = this.Content;
    _o.SecondaryContent = this.SecondaryContent;
    _o.ButtonText = new List<string>();
    for (var _j = 0; _j < this.ButtonTextLength; ++_j) {_o.ButtonText.Add(this.ButtonText(_j));}
    _o.DelayTime = this.DelayTime;
    _o.DelayButtonIndex = this.DelayButtonIndex;
    _o.NeedMaskClose = this.NeedMaskClose;
    _o.UiShowType = this.UiShowType;
    _o.NeedClose = this.NeedClose;
    _o.TimeDilation = this.TimeDilation;
  }
  public static Offset<WWParser.Defs.ConfirmBox> Pack(FlatBufferBuilder builder, ConfirmBoxT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ConfirmBox>);
    var _title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    var _content = _o.Content == null ? default(StringOffset) : builder.CreateString(_o.Content);
    var _secondary_content = _o.SecondaryContent == null ? default(StringOffset) : builder.CreateString(_o.SecondaryContent);
    var _button_text = default(VectorOffset);
    if (_o.ButtonText != null) {
      var __button_text = new StringOffset[_o.ButtonText.Count];
      for (var _j = 0; _j < __button_text.Length; ++_j) { __button_text[_j] = builder.CreateString(_o.ButtonText[_j]); }
      _button_text = CreateButtonTextVector(builder, __button_text);
    }
    return CreateConfirmBox(
      builder,
      _o.Id,
      _title,
      _content,
      _secondary_content,
      _button_text,
      _o.DelayTime,
      _o.DelayButtonIndex,
      _o.NeedMaskClose,
      _o.UiShowType,
      _o.NeedClose,
      _o.TimeDilation);
  }
}

public class ConfirmBoxT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("title")]
  public string Title { get; set; }
  [Newtonsoft.Json.JsonProperty("content")]
  public string Content { get; set; }
  [Newtonsoft.Json.JsonProperty("secondary_content")]
  public string SecondaryContent { get; set; }
  [Newtonsoft.Json.JsonProperty("button_text")]
  public List<string> ButtonText { get; set; }
  [Newtonsoft.Json.JsonProperty("delay_time")]
  public int DelayTime { get; set; }
  [Newtonsoft.Json.JsonProperty("delay_button_index")]
  public int DelayButtonIndex { get; set; }
  [Newtonsoft.Json.JsonProperty("need_mask_close")]
  public bool NeedMaskClose { get; set; }
  [Newtonsoft.Json.JsonProperty("ui_show_type")]
  public int UiShowType { get; set; }
  [Newtonsoft.Json.JsonProperty("need_close")]
  public bool NeedClose { get; set; }
  [Newtonsoft.Json.JsonProperty("time_dilation")]
  public int TimeDilation { get; set; }

  public ConfirmBoxT() {
    this.Id = 0;
    this.Title = null;
    this.Content = null;
    this.SecondaryContent = null;
    this.ButtonText = null;
    this.DelayTime = 0;
    this.DelayButtonIndex = 0;
    this.NeedMaskClose = false;
    this.UiShowType = 0;
    this.NeedClose = false;
    this.TimeDilation = 1;
  }
}


static public class ConfirmBoxVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Title*/, false)
      && verifier.VerifyString(tablePos, 8 /*Content*/, false)
      && verifier.VerifyString(tablePos, 10 /*SecondaryContent*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 12 /*ButtonText*/, false)
      && verifier.VerifyField(tablePos, 14 /*DelayTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*DelayButtonIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*NeedMaskClose*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*UiShowType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*NeedClose*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*TimeDilation*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
