// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct WeaponExpItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static WeaponExpItem GetRootAsWeaponExpItem(ByteBuffer _bb) { return GetRootAsWeaponExpItem(_bb, new WeaponExpItem()); }
  public static WeaponExpItem GetRootAsWeaponExpItem(ByteBuffer _bb, WeaponExpItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public WeaponExpItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Cost { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BasicExp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.WeaponExpItem> CreateWeaponExpItem(FlatBufferBuilder builder,
      int id = 0,
      int cost = 0,
      int basic_exp = 0) {
    builder.StartTable(3);
    WeaponExpItem.AddBasicExp(builder, basic_exp);
    WeaponExpItem.AddCost(builder, cost);
    WeaponExpItem.AddId(builder, id);
    return WeaponExpItem.EndWeaponExpItem(builder);
  }

  public static void StartWeaponExpItem(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddCost(FlatBufferBuilder builder, int cost) { builder.AddInt(1, cost, 0); }
  public static void AddBasicExp(FlatBufferBuilder builder, int basicExp) { builder.AddInt(2, basicExp, 0); }
  public static Offset<WWParser.Defs.WeaponExpItem> EndWeaponExpItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.WeaponExpItem>(o);
  }
  public WeaponExpItemT UnPack() {
    var _o = new WeaponExpItemT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(WeaponExpItemT _o) {
    _o.Id = this.Id;
    _o.Cost = this.Cost;
    _o.BasicExp = this.BasicExp;
  }
  public static Offset<WWParser.Defs.WeaponExpItem> Pack(FlatBufferBuilder builder, WeaponExpItemT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.WeaponExpItem>);
    return CreateWeaponExpItem(
      builder,
      _o.Id,
      _o.Cost,
      _o.BasicExp);
  }
}

public class WeaponExpItemT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("cost")]
  public int Cost { get; set; }
  [Newtonsoft.Json.JsonProperty("basic_exp")]
  public int BasicExp { get; set; }

  public WeaponExpItemT() {
    this.Id = 0;
    this.Cost = 0;
    this.BasicExp = 0;
  }
}


static public class WeaponExpItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Cost*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*BasicExp*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
