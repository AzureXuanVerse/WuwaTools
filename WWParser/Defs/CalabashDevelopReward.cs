// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CalabashDevelopReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CalabashDevelopReward GetRootAsCalabashDevelopReward(ByteBuffer _bb) { return GetRootAsCalabashDevelopReward(_bb, new CalabashDevelopReward()); }
  public static CalabashDevelopReward GetRootAsCalabashDevelopReward(ByteBuffer _bb, CalabashDevelopReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CalabashDevelopReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MonsterId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DevelopCondition(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int DevelopConditionLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetDevelopConditionBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetDevelopConditionBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetDevelopConditionArray() { return __p.__vector_as_array<int>(6); }
  public int MonsterInfoId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AllExp { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SortId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MonsterProbeId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string HandBookBp { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHandBookBpBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetHandBookBpBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetHandBookBpArray() { return __p.__vector_as_array<byte>(16); }
  public int MonsterBodyType { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string HandBookCamera { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHandBookCameraBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetHandBookCameraBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetHandBookCameraArray() { return __p.__vector_as_array<byte>(20); }
  public string MonsterNumber { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMonsterNumberBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetMonsterNumberBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetMonsterNumberArray() { return __p.__vector_as_array<byte>(22); }
  public int InteractionRadius { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsShow { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.CalabashDevelopReward> CreateCalabashDevelopReward(FlatBufferBuilder builder,
      int monster_id = 0,
      VectorOffset develop_conditionOffset = default(VectorOffset),
      int monster_info_id = 0,
      int all_exp = 0,
      int sort_id = 0,
      int monster_probe_id = 0,
      StringOffset hand_book_bpOffset = default(StringOffset),
      int monster_body_type = 0,
      StringOffset hand_book_cameraOffset = default(StringOffset),
      StringOffset monster_numberOffset = default(StringOffset),
      int interaction_radius = 0,
      bool is_show = false) {
    builder.StartTable(12);
    CalabashDevelopReward.AddInteractionRadius(builder, interaction_radius);
    CalabashDevelopReward.AddMonsterNumber(builder, monster_numberOffset);
    CalabashDevelopReward.AddHandBookCamera(builder, hand_book_cameraOffset);
    CalabashDevelopReward.AddMonsterBodyType(builder, monster_body_type);
    CalabashDevelopReward.AddHandBookBp(builder, hand_book_bpOffset);
    CalabashDevelopReward.AddMonsterProbeId(builder, monster_probe_id);
    CalabashDevelopReward.AddSortId(builder, sort_id);
    CalabashDevelopReward.AddAllExp(builder, all_exp);
    CalabashDevelopReward.AddMonsterInfoId(builder, monster_info_id);
    CalabashDevelopReward.AddDevelopCondition(builder, develop_conditionOffset);
    CalabashDevelopReward.AddMonsterId(builder, monster_id);
    CalabashDevelopReward.AddIsShow(builder, is_show);
    return CalabashDevelopReward.EndCalabashDevelopReward(builder);
  }

  public static void StartCalabashDevelopReward(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddMonsterId(FlatBufferBuilder builder, int monsterId) { builder.AddInt(0, monsterId, 0); }
  public static void AddDevelopCondition(FlatBufferBuilder builder, VectorOffset developConditionOffset) { builder.AddOffset(1, developConditionOffset.Value, 0); }
  public static VectorOffset CreateDevelopConditionVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDevelopConditionVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDevelopConditionVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDevelopConditionVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDevelopConditionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfoId(FlatBufferBuilder builder, int monsterInfoId) { builder.AddInt(2, monsterInfoId, 0); }
  public static void AddAllExp(FlatBufferBuilder builder, int allExp) { builder.AddInt(3, allExp, 0); }
  public static void AddSortId(FlatBufferBuilder builder, int sortId) { builder.AddInt(4, sortId, 0); }
  public static void AddMonsterProbeId(FlatBufferBuilder builder, int monsterProbeId) { builder.AddInt(5, monsterProbeId, 0); }
  public static void AddHandBookBp(FlatBufferBuilder builder, StringOffset handBookBpOffset) { builder.AddOffset(6, handBookBpOffset.Value, 0); }
  public static void AddMonsterBodyType(FlatBufferBuilder builder, int monsterBodyType) { builder.AddInt(7, monsterBodyType, 0); }
  public static void AddHandBookCamera(FlatBufferBuilder builder, StringOffset handBookCameraOffset) { builder.AddOffset(8, handBookCameraOffset.Value, 0); }
  public static void AddMonsterNumber(FlatBufferBuilder builder, StringOffset monsterNumberOffset) { builder.AddOffset(9, monsterNumberOffset.Value, 0); }
  public static void AddInteractionRadius(FlatBufferBuilder builder, int interactionRadius) { builder.AddInt(10, interactionRadius, 0); }
  public static void AddIsShow(FlatBufferBuilder builder, bool isShow) { builder.AddBool(11, isShow, false); }
  public static Offset<WWParser.Defs.CalabashDevelopReward> EndCalabashDevelopReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.CalabashDevelopReward>(o);
  }
  public CalabashDevelopRewardT UnPack() {
    var _o = new CalabashDevelopRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CalabashDevelopRewardT _o) {
    _o.MonsterId = this.MonsterId;
    _o.DevelopCondition = new List<int>();
    for (var _j = 0; _j < this.DevelopConditionLength; ++_j) {_o.DevelopCondition.Add(this.DevelopCondition(_j));}
    _o.MonsterInfoId = this.MonsterInfoId;
    _o.AllExp = this.AllExp;
    _o.SortId = this.SortId;
    _o.MonsterProbeId = this.MonsterProbeId;
    _o.HandBookBp = this.HandBookBp;
    _o.MonsterBodyType = this.MonsterBodyType;
    _o.HandBookCamera = this.HandBookCamera;
    _o.MonsterNumber = this.MonsterNumber;
    _o.InteractionRadius = this.InteractionRadius;
    _o.IsShow = this.IsShow;
  }
  public static Offset<WWParser.Defs.CalabashDevelopReward> Pack(FlatBufferBuilder builder, CalabashDevelopRewardT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.CalabashDevelopReward>);
    var _develop_condition = default(VectorOffset);
    if (_o.DevelopCondition != null) {
      var __develop_condition = _o.DevelopCondition.ToArray();
      _develop_condition = CreateDevelopConditionVector(builder, __develop_condition);
    }
    var _hand_book_bp = _o.HandBookBp == null ? default(StringOffset) : builder.CreateString(_o.HandBookBp);
    var _hand_book_camera = _o.HandBookCamera == null ? default(StringOffset) : builder.CreateString(_o.HandBookCamera);
    var _monster_number = _o.MonsterNumber == null ? default(StringOffset) : builder.CreateString(_o.MonsterNumber);
    return CreateCalabashDevelopReward(
      builder,
      _o.MonsterId,
      _develop_condition,
      _o.MonsterInfoId,
      _o.AllExp,
      _o.SortId,
      _o.MonsterProbeId,
      _hand_book_bp,
      _o.MonsterBodyType,
      _hand_book_camera,
      _monster_number,
      _o.InteractionRadius,
      _o.IsShow);
  }
}

public class CalabashDevelopRewardT
{
  [Newtonsoft.Json.JsonProperty("monster_id")]
  public int MonsterId { get; set; }
  [Newtonsoft.Json.JsonProperty("develop_condition")]
  public List<int> DevelopCondition { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_info_id")]
  public int MonsterInfoId { get; set; }
  [Newtonsoft.Json.JsonProperty("all_exp")]
  public int AllExp { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_id")]
  public int SortId { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_probe_id")]
  public int MonsterProbeId { get; set; }
  [Newtonsoft.Json.JsonProperty("hand_book_bp")]
  public string HandBookBp { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_body_type")]
  public int MonsterBodyType { get; set; }
  [Newtonsoft.Json.JsonProperty("hand_book_camera")]
  public string HandBookCamera { get; set; }
  [Newtonsoft.Json.JsonProperty("monster_number")]
  public string MonsterNumber { get; set; }
  [Newtonsoft.Json.JsonProperty("interaction_radius")]
  public int InteractionRadius { get; set; }
  [Newtonsoft.Json.JsonProperty("is_show")]
  public bool IsShow { get; set; }

  public CalabashDevelopRewardT() {
    this.MonsterId = 0;
    this.DevelopCondition = null;
    this.MonsterInfoId = 0;
    this.AllExp = 0;
    this.SortId = 0;
    this.MonsterProbeId = 0;
    this.HandBookBp = null;
    this.MonsterBodyType = 0;
    this.HandBookCamera = null;
    this.MonsterNumber = null;
    this.InteractionRadius = 0;
    this.IsShow = false;
  }
}


static public class CalabashDevelopRewardVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MonsterId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*DevelopCondition*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 8 /*MonsterInfoId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*AllExp*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SortId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*MonsterProbeId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 16 /*HandBookBp*/, false)
      && verifier.VerifyField(tablePos, 18 /*MonsterBodyType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 20 /*HandBookCamera*/, false)
      && verifier.VerifyString(tablePos, 22 /*MonsterNumber*/, false)
      && verifier.VerifyField(tablePos, 24 /*InteractionRadius*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*IsShow*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
