// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct HeadIconEnergyBar : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static HeadIconEnergyBar GetRootAsHeadIconEnergyBar(ByteBuffer _bb) { return GetRootAsHeadIconEnergyBar(_bb, new HeadIconEnergyBar()); }
  public static HeadIconEnergyBar GetRootAsHeadIconEnergyBar(ByteBuffer _bb, HeadIconEnergyBar obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public HeadIconEnergyBar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AttributeId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string PrefabPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPrefabPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPrefabPathArray() { return __p.__vector_as_array<byte>(10); }
  public float EffectCd { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool PlayIncreaseEffect { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool PlayDecreaseEffect { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool FormationVisible { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.HeadIconEnergyBar> CreateHeadIconEnergyBar(FlatBufferBuilder builder,
      int id = 0,
      int type = 0,
      int attribute_id = 0,
      StringOffset prefab_pathOffset = default(StringOffset),
      float effect_cd = 0.0f,
      bool play_increase_effect = false,
      bool play_decrease_effect = false,
      bool formation_visible = false) {
    builder.StartTable(8);
    HeadIconEnergyBar.AddEffectCd(builder, effect_cd);
    HeadIconEnergyBar.AddPrefabPath(builder, prefab_pathOffset);
    HeadIconEnergyBar.AddAttributeId(builder, attribute_id);
    HeadIconEnergyBar.AddType(builder, type);
    HeadIconEnergyBar.AddId(builder, id);
    HeadIconEnergyBar.AddFormationVisible(builder, formation_visible);
    HeadIconEnergyBar.AddPlayDecreaseEffect(builder, play_decrease_effect);
    HeadIconEnergyBar.AddPlayIncreaseEffect(builder, play_increase_effect);
    return HeadIconEnergyBar.EndHeadIconEnergyBar(builder);
  }

  public static void StartHeadIconEnergyBar(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(1, type, 0); }
  public static void AddAttributeId(FlatBufferBuilder builder, int attributeId) { builder.AddInt(2, attributeId, 0); }
  public static void AddPrefabPath(FlatBufferBuilder builder, StringOffset prefabPathOffset) { builder.AddOffset(3, prefabPathOffset.Value, 0); }
  public static void AddEffectCd(FlatBufferBuilder builder, float effectCd) { builder.AddFloat(4, effectCd, 0.0f); }
  public static void AddPlayIncreaseEffect(FlatBufferBuilder builder, bool playIncreaseEffect) { builder.AddBool(5, playIncreaseEffect, false); }
  public static void AddPlayDecreaseEffect(FlatBufferBuilder builder, bool playDecreaseEffect) { builder.AddBool(6, playDecreaseEffect, false); }
  public static void AddFormationVisible(FlatBufferBuilder builder, bool formationVisible) { builder.AddBool(7, formationVisible, false); }
  public static Offset<WWParser.Defs.HeadIconEnergyBar> EndHeadIconEnergyBar(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.HeadIconEnergyBar>(o);
  }
  public HeadIconEnergyBarT UnPack() {
    var _o = new HeadIconEnergyBarT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HeadIconEnergyBarT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.AttributeId = this.AttributeId;
    _o.PrefabPath = this.PrefabPath;
    _o.EffectCd = this.EffectCd;
    _o.PlayIncreaseEffect = this.PlayIncreaseEffect;
    _o.PlayDecreaseEffect = this.PlayDecreaseEffect;
    _o.FormationVisible = this.FormationVisible;
  }
  public static Offset<WWParser.Defs.HeadIconEnergyBar> Pack(FlatBufferBuilder builder, HeadIconEnergyBarT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.HeadIconEnergyBar>);
    var _prefab_path = _o.PrefabPath == null ? default(StringOffset) : builder.CreateString(_o.PrefabPath);
    return CreateHeadIconEnergyBar(
      builder,
      _o.Id,
      _o.Type,
      _o.AttributeId,
      _prefab_path,
      _o.EffectCd,
      _o.PlayIncreaseEffect,
      _o.PlayDecreaseEffect,
      _o.FormationVisible);
  }
}

public class HeadIconEnergyBarT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("attribute_id")]
  public int AttributeId { get; set; }
  [Newtonsoft.Json.JsonProperty("prefab_path")]
  public string PrefabPath { get; set; }
  [Newtonsoft.Json.JsonProperty("effect_cd")]
  public float EffectCd { get; set; }
  [Newtonsoft.Json.JsonProperty("play_increase_effect")]
  public bool PlayIncreaseEffect { get; set; }
  [Newtonsoft.Json.JsonProperty("play_decrease_effect")]
  public bool PlayDecreaseEffect { get; set; }
  [Newtonsoft.Json.JsonProperty("formation_visible")]
  public bool FormationVisible { get; set; }

  public HeadIconEnergyBarT() {
    this.Id = 0;
    this.Type = 0;
    this.AttributeId = 0;
    this.PrefabPath = null;
    this.EffectCd = 0.0f;
    this.PlayIncreaseEffect = false;
    this.PlayDecreaseEffect = false;
    this.FormationVisible = false;
  }
}


static public class HeadIconEnergyBarVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*AttributeId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*PrefabPath*/, false)
      && verifier.VerifyField(tablePos, 12 /*EffectCd*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*PlayIncreaseEffect*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*PlayDecreaseEffect*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*FormationVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
