// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillCondition : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillCondition GetRootAsSkillCondition(ByteBuffer _bb) { return GetRootAsSkillCondition(_bb, new SkillCondition()); }
  public static SkillCondition GetRootAsSkillCondition(ByteBuffer _bb, SkillCondition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillCondition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ConditionType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.DicIntInt? ConditionParam(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConditionParamLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Description { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<WWParser.Defs.SkillCondition> CreateSkillCondition(FlatBufferBuilder builder,
      int id = 0,
      int condition_type = 0,
      VectorOffset condition_paramOffset = default(VectorOffset),
      StringOffset descriptionOffset = default(StringOffset)) {
    builder.StartTable(4);
    SkillCondition.AddDescription(builder, descriptionOffset);
    SkillCondition.AddConditionParam(builder, condition_paramOffset);
    SkillCondition.AddConditionType(builder, condition_type);
    SkillCondition.AddId(builder, id);
    return SkillCondition.EndSkillCondition(builder);
  }

  public static void StartSkillCondition(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddConditionType(FlatBufferBuilder builder, int conditionType) { builder.AddInt(1, conditionType, 0); }
  public static void AddConditionParam(FlatBufferBuilder builder, VectorOffset conditionParamOffset) { builder.AddOffset(2, conditionParamOffset.Value, 0); }
  public static VectorOffset CreateConditionParamVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConditionParamVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConditionParamVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConditionParamVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartConditionParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(3, descriptionOffset.Value, 0); }
  public static Offset<WWParser.Defs.SkillCondition> EndSkillCondition(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillCondition>(o);
  }
  public SkillConditionT UnPack() {
    var _o = new SkillConditionT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillConditionT _o) {
    _o.Id = this.Id;
    _o.ConditionType = this.ConditionType;
    _o.ConditionParam = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.ConditionParamLength; ++_j) {_o.ConditionParam.Add(this.ConditionParam(_j).HasValue ? this.ConditionParam(_j).Value.UnPack() : null);}
    _o.Description = this.Description;
  }
  public static Offset<WWParser.Defs.SkillCondition> Pack(FlatBufferBuilder builder, SkillConditionT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillCondition>);
    var _condition_param = default(VectorOffset);
    if (_o.ConditionParam != null) {
      var __condition_param = new Offset<WWParser.Defs.DicIntInt>[_o.ConditionParam.Count];
      for (var _j = 0; _j < __condition_param.Length; ++_j) { __condition_param[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.ConditionParam[_j]); }
      _condition_param = CreateConditionParamVector(builder, __condition_param);
    }
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    return CreateSkillCondition(
      builder,
      _o.Id,
      _o.ConditionType,
      _condition_param,
      _description);
  }
}

public class SkillConditionT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("condition_type")]
  public int ConditionType { get; set; }
  [Newtonsoft.Json.JsonProperty("condition_param")]
  public List<WWParser.Defs.DicIntIntT> ConditionParam { get; set; }
  [Newtonsoft.Json.JsonProperty("description")]
  public string Description { get; set; }

  public SkillConditionT() {
    this.Id = 0;
    this.ConditionType = 0;
    this.ConditionParam = null;
    this.Description = null;
  }
}


static public class SkillConditionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ConditionType*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*ConditionParam*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyString(tablePos, 10 /*Description*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
