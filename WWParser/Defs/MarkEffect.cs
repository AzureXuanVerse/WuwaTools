// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MarkEffect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static MarkEffect GetRootAsMarkEffect(ByteBuffer _bb) { return GetRootAsMarkEffect(_bb, new MarkEffect()); }
  public static MarkEffect GetRootAsMarkEffect(ByteBuffer _bb, MarkEffect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MarkEffect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MarkId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string EffectResourcePath { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEffectResourcePathBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetEffectResourcePathBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetEffectResourcePathArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<WWParser.Defs.MarkEffect> CreateMarkEffect(FlatBufferBuilder builder,
      int mark_id = 0,
      StringOffset effect_resource_pathOffset = default(StringOffset)) {
    builder.StartTable(2);
    MarkEffect.AddEffectResourcePath(builder, effect_resource_pathOffset);
    MarkEffect.AddMarkId(builder, mark_id);
    return MarkEffect.EndMarkEffect(builder);
  }

  public static void StartMarkEffect(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMarkId(FlatBufferBuilder builder, int markId) { builder.AddInt(0, markId, 0); }
  public static void AddEffectResourcePath(FlatBufferBuilder builder, StringOffset effectResourcePathOffset) { builder.AddOffset(1, effectResourcePathOffset.Value, 0); }
  public static Offset<WWParser.Defs.MarkEffect> EndMarkEffect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.MarkEffect>(o);
  }
  public MarkEffectT UnPack() {
    var _o = new MarkEffectT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MarkEffectT _o) {
    _o.MarkId = this.MarkId;
    _o.EffectResourcePath = this.EffectResourcePath;
  }
  public static Offset<WWParser.Defs.MarkEffect> Pack(FlatBufferBuilder builder, MarkEffectT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.MarkEffect>);
    var _effect_resource_path = _o.EffectResourcePath == null ? default(StringOffset) : builder.CreateString(_o.EffectResourcePath);
    return CreateMarkEffect(
      builder,
      _o.MarkId,
      _effect_resource_path);
  }
}

public class MarkEffectT
{
  [Newtonsoft.Json.JsonProperty("mark_id")]
  public int MarkId { get; set; }
  [Newtonsoft.Json.JsonProperty("effect_resource_path")]
  public string EffectResourcePath { get; set; }

  public MarkEffectT() {
    this.MarkId = 0;
    this.EffectResourcePath = null;
  }
}


static public class MarkEffectVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MarkId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*EffectResourcePath*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
