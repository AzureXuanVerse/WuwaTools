// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ExploreActivity : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ExploreActivity GetRootAsExploreActivity(ByteBuffer _bb) { return GetRootAsExploreActivity(_bb, new ExploreActivity()); }
  public static ExploreActivity GetRootAsExploreActivity(ByteBuffer _bb, ExploreActivity obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ExploreActivity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Bg { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBgBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBgArray() { return __p.__vector_as_array<byte>(6); }
  public string ExploreTitle { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExploreTitleBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetExploreTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetExploreTitleArray() { return __p.__vector_as_array<byte>(8); }
  public string PercentDesc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPercentDescBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPercentDescBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPercentDescArray() { return __p.__vector_as_array<byte>(10); }
  public string AreaTitle { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAreaTitleBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetAreaTitleBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetAreaTitleArray() { return __p.__vector_as_array<byte>(12); }
  public string MainTitle { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMainTitleBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetMainTitleBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetMainTitleArray() { return __p.__vector_as_array<byte>(14); }
  public string Desc { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(16); }
  public string SumRewardDesc { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSumRewardDescBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetSumRewardDescBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetSumRewardDescArray() { return __p.__vector_as_array<byte>(18); }
  public int SumRewardNum { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RecommendAreaList(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RecommendAreaListLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRecommendAreaListBytes() { return __p.__vector_as_span<int>(22, 4); }
#else
  public ArraySegment<byte>? GetRecommendAreaListBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public int[] GetRecommendAreaListArray() { return __p.__vector_as_array<int>(22); }
  public int SourceList(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SourceListLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSourceListBytes() { return __p.__vector_as_span<int>(24, 4); }
#else
  public ArraySegment<byte>? GetSourceListBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public int[] GetSourceListArray() { return __p.__vector_as_array<int>(24); }

  public static Offset<WWParser.Defs.ExploreActivity> CreateExploreActivity(FlatBufferBuilder builder,
      int id = 0,
      StringOffset bgOffset = default(StringOffset),
      StringOffset explore_titleOffset = default(StringOffset),
      StringOffset percent_descOffset = default(StringOffset),
      StringOffset area_titleOffset = default(StringOffset),
      StringOffset main_titleOffset = default(StringOffset),
      StringOffset descOffset = default(StringOffset),
      StringOffset sum_reward_descOffset = default(StringOffset),
      int sum_reward_num = 0,
      VectorOffset recommend_area_listOffset = default(VectorOffset),
      VectorOffset source_listOffset = default(VectorOffset)) {
    builder.StartTable(11);
    ExploreActivity.AddSourceList(builder, source_listOffset);
    ExploreActivity.AddRecommendAreaList(builder, recommend_area_listOffset);
    ExploreActivity.AddSumRewardNum(builder, sum_reward_num);
    ExploreActivity.AddSumRewardDesc(builder, sum_reward_descOffset);
    ExploreActivity.AddDesc(builder, descOffset);
    ExploreActivity.AddMainTitle(builder, main_titleOffset);
    ExploreActivity.AddAreaTitle(builder, area_titleOffset);
    ExploreActivity.AddPercentDesc(builder, percent_descOffset);
    ExploreActivity.AddExploreTitle(builder, explore_titleOffset);
    ExploreActivity.AddBg(builder, bgOffset);
    ExploreActivity.AddId(builder, id);
    return ExploreActivity.EndExploreActivity(builder);
  }

  public static void StartExploreActivity(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBg(FlatBufferBuilder builder, StringOffset bgOffset) { builder.AddOffset(1, bgOffset.Value, 0); }
  public static void AddExploreTitle(FlatBufferBuilder builder, StringOffset exploreTitleOffset) { builder.AddOffset(2, exploreTitleOffset.Value, 0); }
  public static void AddPercentDesc(FlatBufferBuilder builder, StringOffset percentDescOffset) { builder.AddOffset(3, percentDescOffset.Value, 0); }
  public static void AddAreaTitle(FlatBufferBuilder builder, StringOffset areaTitleOffset) { builder.AddOffset(4, areaTitleOffset.Value, 0); }
  public static void AddMainTitle(FlatBufferBuilder builder, StringOffset mainTitleOffset) { builder.AddOffset(5, mainTitleOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(6, descOffset.Value, 0); }
  public static void AddSumRewardDesc(FlatBufferBuilder builder, StringOffset sumRewardDescOffset) { builder.AddOffset(7, sumRewardDescOffset.Value, 0); }
  public static void AddSumRewardNum(FlatBufferBuilder builder, int sumRewardNum) { builder.AddInt(8, sumRewardNum, 0); }
  public static void AddRecommendAreaList(FlatBufferBuilder builder, VectorOffset recommendAreaListOffset) { builder.AddOffset(9, recommendAreaListOffset.Value, 0); }
  public static VectorOffset CreateRecommendAreaListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRecommendAreaListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRecommendAreaListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRecommendAreaListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRecommendAreaListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSourceList(FlatBufferBuilder builder, VectorOffset sourceListOffset) { builder.AddOffset(10, sourceListOffset.Value, 0); }
  public static VectorOffset CreateSourceListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSourceListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSourceListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSourceListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSourceListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.ExploreActivity> EndExploreActivity(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ExploreActivity>(o);
  }
  public ExploreActivityT UnPack() {
    var _o = new ExploreActivityT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ExploreActivityT _o) {
    _o.Id = this.Id;
    _o.Bg = this.Bg;
    _o.ExploreTitle = this.ExploreTitle;
    _o.PercentDesc = this.PercentDesc;
    _o.AreaTitle = this.AreaTitle;
    _o.MainTitle = this.MainTitle;
    _o.Desc = this.Desc;
    _o.SumRewardDesc = this.SumRewardDesc;
    _o.SumRewardNum = this.SumRewardNum;
    _o.RecommendAreaList = new List<int>();
    for (var _j = 0; _j < this.RecommendAreaListLength; ++_j) {_o.RecommendAreaList.Add(this.RecommendAreaList(_j));}
    _o.SourceList = new List<int>();
    for (var _j = 0; _j < this.SourceListLength; ++_j) {_o.SourceList.Add(this.SourceList(_j));}
  }
  public static Offset<WWParser.Defs.ExploreActivity> Pack(FlatBufferBuilder builder, ExploreActivityT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ExploreActivity>);
    var _bg = _o.Bg == null ? default(StringOffset) : builder.CreateString(_o.Bg);
    var _explore_title = _o.ExploreTitle == null ? default(StringOffset) : builder.CreateString(_o.ExploreTitle);
    var _percent_desc = _o.PercentDesc == null ? default(StringOffset) : builder.CreateString(_o.PercentDesc);
    var _area_title = _o.AreaTitle == null ? default(StringOffset) : builder.CreateString(_o.AreaTitle);
    var _main_title = _o.MainTitle == null ? default(StringOffset) : builder.CreateString(_o.MainTitle);
    var _desc = _o.Desc == null ? default(StringOffset) : builder.CreateString(_o.Desc);
    var _sum_reward_desc = _o.SumRewardDesc == null ? default(StringOffset) : builder.CreateString(_o.SumRewardDesc);
    var _recommend_area_list = default(VectorOffset);
    if (_o.RecommendAreaList != null) {
      var __recommend_area_list = _o.RecommendAreaList.ToArray();
      _recommend_area_list = CreateRecommendAreaListVector(builder, __recommend_area_list);
    }
    var _source_list = default(VectorOffset);
    if (_o.SourceList != null) {
      var __source_list = _o.SourceList.ToArray();
      _source_list = CreateSourceListVector(builder, __source_list);
    }
    return CreateExploreActivity(
      builder,
      _o.Id,
      _bg,
      _explore_title,
      _percent_desc,
      _area_title,
      _main_title,
      _desc,
      _sum_reward_desc,
      _o.SumRewardNum,
      _recommend_area_list,
      _source_list);
  }
}

public class ExploreActivityT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("bg")]
  public string Bg { get; set; }
  [Newtonsoft.Json.JsonProperty("explore_title")]
  public string ExploreTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("percent_desc")]
  public string PercentDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("area_title")]
  public string AreaTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("main_title")]
  public string MainTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("desc")]
  public string Desc { get; set; }
  [Newtonsoft.Json.JsonProperty("sum_reward_desc")]
  public string SumRewardDesc { get; set; }
  [Newtonsoft.Json.JsonProperty("sum_reward_num")]
  public int SumRewardNum { get; set; }
  [Newtonsoft.Json.JsonProperty("recommend_area_list")]
  public List<int> RecommendAreaList { get; set; }
  [Newtonsoft.Json.JsonProperty("source_list")]
  public List<int> SourceList { get; set; }

  public ExploreActivityT() {
    this.Id = 0;
    this.Bg = null;
    this.ExploreTitle = null;
    this.PercentDesc = null;
    this.AreaTitle = null;
    this.MainTitle = null;
    this.Desc = null;
    this.SumRewardDesc = null;
    this.SumRewardNum = 0;
    this.RecommendAreaList = null;
    this.SourceList = null;
  }
}


static public class ExploreActivityVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Bg*/, false)
      && verifier.VerifyString(tablePos, 8 /*ExploreTitle*/, false)
      && verifier.VerifyString(tablePos, 10 /*PercentDesc*/, false)
      && verifier.VerifyString(tablePos, 12 /*AreaTitle*/, false)
      && verifier.VerifyString(tablePos, 14 /*MainTitle*/, false)
      && verifier.VerifyString(tablePos, 16 /*Desc*/, false)
      && verifier.VerifyString(tablePos, 18 /*SumRewardDesc*/, false)
      && verifier.VerifyField(tablePos, 20 /*SumRewardNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 22 /*RecommendAreaList*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 24 /*SourceList*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
