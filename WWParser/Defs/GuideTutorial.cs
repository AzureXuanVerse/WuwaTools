// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GuideTutorial : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GuideTutorial GetRootAsGuideTutorial(ByteBuffer _bb) { return GetRootAsGuideTutorial(_bb, new GuideTutorial()); }
  public static GuideTutorial GetRootAsGuideTutorial(ByteBuffer _bb, GuideTutorial obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GuideTutorial __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TutorialType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)11; } }
  public int TutorialOrder { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PageId(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PageIdLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetPageIdBytes() { return __p.__vector_as_span<int>(10, 4); }
#else
  public ArraySegment<byte>? GetPageIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public int[] GetPageIdArray() { return __p.__vector_as_array<int>(10); }
  public int PageReplaceConditionGroupId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ReplacePageId(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReplacePageIdLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReplacePageIdBytes() { return __p.__vector_as_span<int>(14, 4); }
#else
  public ArraySegment<byte>? GetReplacePageIdBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public int[] GetReplacePageIdArray() { return __p.__vector_as_array<int>(14); }
  public string GroupName { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroupNameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetGroupNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetGroupNameArray() { return __p.__vector_as_array<byte>(16); }
  public bool TutorialTip { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int DropId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)100001; } }
  public bool DisableDropReward { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool RequireReadAll { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ExcludeFromWiki { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int CopiedFrom { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.GuideTutorial> CreateGuideTutorial(FlatBufferBuilder builder,
      int id = 0,
      int tutorial_type = 11,
      int tutorial_order = 0,
      VectorOffset page_idOffset = default(VectorOffset),
      int page_replace_condition_group_id = 0,
      VectorOffset replace_page_idOffset = default(VectorOffset),
      StringOffset group_nameOffset = default(StringOffset),
      bool tutorial_tip = false,
      int drop_id = 100001,
      bool disable_drop_reward = false,
      bool require_read_all = false,
      bool exclude_from_wiki = false,
      int copied_from = 0) {
    builder.StartTable(13);
    GuideTutorial.AddCopiedFrom(builder, copied_from);
    GuideTutorial.AddDropId(builder, drop_id);
    GuideTutorial.AddGroupName(builder, group_nameOffset);
    GuideTutorial.AddReplacePageId(builder, replace_page_idOffset);
    GuideTutorial.AddPageReplaceConditionGroupId(builder, page_replace_condition_group_id);
    GuideTutorial.AddPageId(builder, page_idOffset);
    GuideTutorial.AddTutorialOrder(builder, tutorial_order);
    GuideTutorial.AddTutorialType(builder, tutorial_type);
    GuideTutorial.AddId(builder, id);
    GuideTutorial.AddExcludeFromWiki(builder, exclude_from_wiki);
    GuideTutorial.AddRequireReadAll(builder, require_read_all);
    GuideTutorial.AddDisableDropReward(builder, disable_drop_reward);
    GuideTutorial.AddTutorialTip(builder, tutorial_tip);
    return GuideTutorial.EndGuideTutorial(builder);
  }

  public static void StartGuideTutorial(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddTutorialType(FlatBufferBuilder builder, int tutorialType) { builder.AddInt(1, tutorialType, 11); }
  public static void AddTutorialOrder(FlatBufferBuilder builder, int tutorialOrder) { builder.AddInt(2, tutorialOrder, 0); }
  public static void AddPageId(FlatBufferBuilder builder, VectorOffset pageIdOffset) { builder.AddOffset(3, pageIdOffset.Value, 0); }
  public static VectorOffset CreatePageIdVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePageIdVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePageIdVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePageIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPageIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPageReplaceConditionGroupId(FlatBufferBuilder builder, int pageReplaceConditionGroupId) { builder.AddInt(4, pageReplaceConditionGroupId, 0); }
  public static void AddReplacePageId(FlatBufferBuilder builder, VectorOffset replacePageIdOffset) { builder.AddOffset(5, replacePageIdOffset.Value, 0); }
  public static VectorOffset CreateReplacePageIdVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReplacePageIdVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReplacePageIdVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateReplacePageIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartReplacePageIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGroupName(FlatBufferBuilder builder, StringOffset groupNameOffset) { builder.AddOffset(6, groupNameOffset.Value, 0); }
  public static void AddTutorialTip(FlatBufferBuilder builder, bool tutorialTip) { builder.AddBool(7, tutorialTip, false); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(8, dropId, 100001); }
  public static void AddDisableDropReward(FlatBufferBuilder builder, bool disableDropReward) { builder.AddBool(9, disableDropReward, false); }
  public static void AddRequireReadAll(FlatBufferBuilder builder, bool requireReadAll) { builder.AddBool(10, requireReadAll, false); }
  public static void AddExcludeFromWiki(FlatBufferBuilder builder, bool excludeFromWiki) { builder.AddBool(11, excludeFromWiki, false); }
  public static void AddCopiedFrom(FlatBufferBuilder builder, int copiedFrom) { builder.AddInt(12, copiedFrom, 0); }
  public static Offset<WWParser.Defs.GuideTutorial> EndGuideTutorial(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GuideTutorial>(o);
  }
  public GuideTutorialT UnPack() {
    var _o = new GuideTutorialT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GuideTutorialT _o) {
    _o.Id = this.Id;
    _o.TutorialType = this.TutorialType;
    _o.TutorialOrder = this.TutorialOrder;
    _o.PageId = new List<int>();
    for (var _j = 0; _j < this.PageIdLength; ++_j) {_o.PageId.Add(this.PageId(_j));}
    _o.PageReplaceConditionGroupId = this.PageReplaceConditionGroupId;
    _o.ReplacePageId = new List<int>();
    for (var _j = 0; _j < this.ReplacePageIdLength; ++_j) {_o.ReplacePageId.Add(this.ReplacePageId(_j));}
    _o.GroupName = this.GroupName;
    _o.TutorialTip = this.TutorialTip;
    _o.DropId = this.DropId;
    _o.DisableDropReward = this.DisableDropReward;
    _o.RequireReadAll = this.RequireReadAll;
    _o.ExcludeFromWiki = this.ExcludeFromWiki;
    _o.CopiedFrom = this.CopiedFrom;
  }
  public static Offset<WWParser.Defs.GuideTutorial> Pack(FlatBufferBuilder builder, GuideTutorialT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GuideTutorial>);
    var _page_id = default(VectorOffset);
    if (_o.PageId != null) {
      var __page_id = _o.PageId.ToArray();
      _page_id = CreatePageIdVector(builder, __page_id);
    }
    var _replace_page_id = default(VectorOffset);
    if (_o.ReplacePageId != null) {
      var __replace_page_id = _o.ReplacePageId.ToArray();
      _replace_page_id = CreateReplacePageIdVector(builder, __replace_page_id);
    }
    var _group_name = _o.GroupName == null ? default(StringOffset) : builder.CreateString(_o.GroupName);
    return CreateGuideTutorial(
      builder,
      _o.Id,
      _o.TutorialType,
      _o.TutorialOrder,
      _page_id,
      _o.PageReplaceConditionGroupId,
      _replace_page_id,
      _group_name,
      _o.TutorialTip,
      _o.DropId,
      _o.DisableDropReward,
      _o.RequireReadAll,
      _o.ExcludeFromWiki,
      _o.CopiedFrom);
  }
}

public class GuideTutorialT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("tutorial_type")]
  public int TutorialType { get; set; }
  [Newtonsoft.Json.JsonProperty("tutorial_order")]
  public int TutorialOrder { get; set; }
  [Newtonsoft.Json.JsonProperty("page_id")]
  public List<int> PageId { get; set; }
  [Newtonsoft.Json.JsonProperty("page_replace_condition_group_id")]
  public int PageReplaceConditionGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("replace_page_id")]
  public List<int> ReplacePageId { get; set; }
  [Newtonsoft.Json.JsonProperty("group_name")]
  public string GroupName { get; set; }
  [Newtonsoft.Json.JsonProperty("tutorial_tip")]
  public bool TutorialTip { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }
  [Newtonsoft.Json.JsonProperty("disable_drop_reward")]
  public bool DisableDropReward { get; set; }
  [Newtonsoft.Json.JsonProperty("require_read_all")]
  public bool RequireReadAll { get; set; }
  [Newtonsoft.Json.JsonProperty("exclude_from_wiki")]
  public bool ExcludeFromWiki { get; set; }
  [Newtonsoft.Json.JsonProperty("copied_from")]
  public int CopiedFrom { get; set; }

  public GuideTutorialT() {
    this.Id = 0;
    this.TutorialType = 11;
    this.TutorialOrder = 0;
    this.PageId = null;
    this.PageReplaceConditionGroupId = 0;
    this.ReplacePageId = null;
    this.GroupName = null;
    this.TutorialTip = false;
    this.DropId = 100001;
    this.DisableDropReward = false;
    this.RequireReadAll = false;
    this.ExcludeFromWiki = false;
    this.CopiedFrom = 0;
  }
}


static public class GuideTutorialVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*TutorialType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*TutorialOrder*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*PageId*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 12 /*PageReplaceConditionGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*ReplacePageId*/, 4 /*int*/, false)
      && verifier.VerifyString(tablePos, 16 /*GroupName*/, false)
      && verifier.VerifyField(tablePos, 18 /*TutorialTip*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*DisableDropReward*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*RequireReadAll*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 26 /*ExcludeFromWiki*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 28 /*CopiedFrom*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
