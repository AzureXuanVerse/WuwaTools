// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResEventBg : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResEventBg GetRootAsRogueResEventBg(ByteBuffer _bb) { return GetRootAsRogueResEventBg(_bb, new RogueResEventBg()); }
  public static RogueResEventBg GetRootAsRogueResEventBg(ByteBuffer _bb, RogueResEventBg obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResEventBg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BgName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBgNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBgNameArray() { return __p.__vector_as_array<byte>(6); }
  public string BgPath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgPathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetBgPathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetBgPathArray() { return __p.__vector_as_array<byte>(8); }
  public string BgFemalePath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgFemalePathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetBgFemalePathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBgFemalePathArray() { return __p.__vector_as_array<byte>(10); }
  public string HandBookBgPath { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHandBookBgPathBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetHandBookBgPathBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetHandBookBgPathArray() { return __p.__vector_as_array<byte>(12); }
  public string HandBookBgFemalePath { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHandBookBgFemalePathBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetHandBookBgFemalePathBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetHandBookBgFemalePathArray() { return __p.__vector_as_array<byte>(14); }
  public string BgSpineAtlasPath { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgSpineAtlasPathBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetBgSpineAtlasPathBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetBgSpineAtlasPathArray() { return __p.__vector_as_array<byte>(16); }
  public string BgSpineSkeletonPath { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgSpineSkeletonPathBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetBgSpineSkeletonPathBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetBgSpineSkeletonPathArray() { return __p.__vector_as_array<byte>(18); }
  public string BgSpineAtlasFemalePath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgSpineAtlasFemalePathBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetBgSpineAtlasFemalePathBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetBgSpineAtlasFemalePathArray() { return __p.__vector_as_array<byte>(20); }
  public string BgSpineSkeletonFemalePath { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgSpineSkeletonFemalePathBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetBgSpineSkeletonFemalePathBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetBgSpineSkeletonFemalePathArray() { return __p.__vector_as_array<byte>(22); }

  public static Offset<WWParser.Defs.RogueResEventBg> CreateRogueResEventBg(FlatBufferBuilder builder,
      int id = 0,
      StringOffset bg_nameOffset = default(StringOffset),
      StringOffset bg_pathOffset = default(StringOffset),
      StringOffset bg_female_pathOffset = default(StringOffset),
      StringOffset hand_book_bg_pathOffset = default(StringOffset),
      StringOffset hand_book_bg_female_pathOffset = default(StringOffset),
      StringOffset bg_spine_atlas_pathOffset = default(StringOffset),
      StringOffset bg_spine_skeleton_pathOffset = default(StringOffset),
      StringOffset bg_spine_atlas_female_pathOffset = default(StringOffset),
      StringOffset bg_spine_skeleton_female_pathOffset = default(StringOffset)) {
    builder.StartTable(10);
    RogueResEventBg.AddBgSpineSkeletonFemalePath(builder, bg_spine_skeleton_female_pathOffset);
    RogueResEventBg.AddBgSpineAtlasFemalePath(builder, bg_spine_atlas_female_pathOffset);
    RogueResEventBg.AddBgSpineSkeletonPath(builder, bg_spine_skeleton_pathOffset);
    RogueResEventBg.AddBgSpineAtlasPath(builder, bg_spine_atlas_pathOffset);
    RogueResEventBg.AddHandBookBgFemalePath(builder, hand_book_bg_female_pathOffset);
    RogueResEventBg.AddHandBookBgPath(builder, hand_book_bg_pathOffset);
    RogueResEventBg.AddBgFemalePath(builder, bg_female_pathOffset);
    RogueResEventBg.AddBgPath(builder, bg_pathOffset);
    RogueResEventBg.AddBgName(builder, bg_nameOffset);
    RogueResEventBg.AddId(builder, id);
    return RogueResEventBg.EndRogueResEventBg(builder);
  }

  public static void StartRogueResEventBg(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBgName(FlatBufferBuilder builder, StringOffset bgNameOffset) { builder.AddOffset(1, bgNameOffset.Value, 0); }
  public static void AddBgPath(FlatBufferBuilder builder, StringOffset bgPathOffset) { builder.AddOffset(2, bgPathOffset.Value, 0); }
  public static void AddBgFemalePath(FlatBufferBuilder builder, StringOffset bgFemalePathOffset) { builder.AddOffset(3, bgFemalePathOffset.Value, 0); }
  public static void AddHandBookBgPath(FlatBufferBuilder builder, StringOffset handBookBgPathOffset) { builder.AddOffset(4, handBookBgPathOffset.Value, 0); }
  public static void AddHandBookBgFemalePath(FlatBufferBuilder builder, StringOffset handBookBgFemalePathOffset) { builder.AddOffset(5, handBookBgFemalePathOffset.Value, 0); }
  public static void AddBgSpineAtlasPath(FlatBufferBuilder builder, StringOffset bgSpineAtlasPathOffset) { builder.AddOffset(6, bgSpineAtlasPathOffset.Value, 0); }
  public static void AddBgSpineSkeletonPath(FlatBufferBuilder builder, StringOffset bgSpineSkeletonPathOffset) { builder.AddOffset(7, bgSpineSkeletonPathOffset.Value, 0); }
  public static void AddBgSpineAtlasFemalePath(FlatBufferBuilder builder, StringOffset bgSpineAtlasFemalePathOffset) { builder.AddOffset(8, bgSpineAtlasFemalePathOffset.Value, 0); }
  public static void AddBgSpineSkeletonFemalePath(FlatBufferBuilder builder, StringOffset bgSpineSkeletonFemalePathOffset) { builder.AddOffset(9, bgSpineSkeletonFemalePathOffset.Value, 0); }
  public static Offset<WWParser.Defs.RogueResEventBg> EndRogueResEventBg(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResEventBg>(o);
  }
  public RogueResEventBgT UnPack() {
    var _o = new RogueResEventBgT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResEventBgT _o) {
    _o.Id = this.Id;
    _o.BgName = this.BgName;
    _o.BgPath = this.BgPath;
    _o.BgFemalePath = this.BgFemalePath;
    _o.HandBookBgPath = this.HandBookBgPath;
    _o.HandBookBgFemalePath = this.HandBookBgFemalePath;
    _o.BgSpineAtlasPath = this.BgSpineAtlasPath;
    _o.BgSpineSkeletonPath = this.BgSpineSkeletonPath;
    _o.BgSpineAtlasFemalePath = this.BgSpineAtlasFemalePath;
    _o.BgSpineSkeletonFemalePath = this.BgSpineSkeletonFemalePath;
  }
  public static Offset<WWParser.Defs.RogueResEventBg> Pack(FlatBufferBuilder builder, RogueResEventBgT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResEventBg>);
    var _bg_name = _o.BgName == null ? default(StringOffset) : builder.CreateString(_o.BgName);
    var _bg_path = _o.BgPath == null ? default(StringOffset) : builder.CreateString(_o.BgPath);
    var _bg_female_path = _o.BgFemalePath == null ? default(StringOffset) : builder.CreateString(_o.BgFemalePath);
    var _hand_book_bg_path = _o.HandBookBgPath == null ? default(StringOffset) : builder.CreateString(_o.HandBookBgPath);
    var _hand_book_bg_female_path = _o.HandBookBgFemalePath == null ? default(StringOffset) : builder.CreateString(_o.HandBookBgFemalePath);
    var _bg_spine_atlas_path = _o.BgSpineAtlasPath == null ? default(StringOffset) : builder.CreateString(_o.BgSpineAtlasPath);
    var _bg_spine_skeleton_path = _o.BgSpineSkeletonPath == null ? default(StringOffset) : builder.CreateString(_o.BgSpineSkeletonPath);
    var _bg_spine_atlas_female_path = _o.BgSpineAtlasFemalePath == null ? default(StringOffset) : builder.CreateString(_o.BgSpineAtlasFemalePath);
    var _bg_spine_skeleton_female_path = _o.BgSpineSkeletonFemalePath == null ? default(StringOffset) : builder.CreateString(_o.BgSpineSkeletonFemalePath);
    return CreateRogueResEventBg(
      builder,
      _o.Id,
      _bg_name,
      _bg_path,
      _bg_female_path,
      _hand_book_bg_path,
      _hand_book_bg_female_path,
      _bg_spine_atlas_path,
      _bg_spine_skeleton_path,
      _bg_spine_atlas_female_path,
      _bg_spine_skeleton_female_path);
  }
}

public class RogueResEventBgT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_name")]
  public string BgName { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_path")]
  public string BgPath { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_female_path")]
  public string BgFemalePath { get; set; }
  [Newtonsoft.Json.JsonProperty("hand_book_bg_path")]
  public string HandBookBgPath { get; set; }
  [Newtonsoft.Json.JsonProperty("hand_book_bg_female_path")]
  public string HandBookBgFemalePath { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_spine_atlas_path")]
  public string BgSpineAtlasPath { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_spine_skeleton_path")]
  public string BgSpineSkeletonPath { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_spine_atlas_female_path")]
  public string BgSpineAtlasFemalePath { get; set; }
  [Newtonsoft.Json.JsonProperty("bg_spine_skeleton_female_path")]
  public string BgSpineSkeletonFemalePath { get; set; }

  public RogueResEventBgT() {
    this.Id = 0;
    this.BgName = null;
    this.BgPath = null;
    this.BgFemalePath = null;
    this.HandBookBgPath = null;
    this.HandBookBgFemalePath = null;
    this.BgSpineAtlasPath = null;
    this.BgSpineSkeletonPath = null;
    this.BgSpineAtlasFemalePath = null;
    this.BgSpineSkeletonFemalePath = null;
  }
}


static public class RogueResEventBgVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*BgName*/, false)
      && verifier.VerifyString(tablePos, 8 /*BgPath*/, false)
      && verifier.VerifyString(tablePos, 10 /*BgFemalePath*/, false)
      && verifier.VerifyString(tablePos, 12 /*HandBookBgPath*/, false)
      && verifier.VerifyString(tablePos, 14 /*HandBookBgFemalePath*/, false)
      && verifier.VerifyString(tablePos, 16 /*BgSpineAtlasPath*/, false)
      && verifier.VerifyString(tablePos, 18 /*BgSpineSkeletonPath*/, false)
      && verifier.VerifyString(tablePos, 20 /*BgSpineAtlasFemalePath*/, false)
      && verifier.VerifyString(tablePos, 22 /*BgSpineSkeletonFemalePath*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
