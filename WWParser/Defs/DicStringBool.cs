// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DicStringBool : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static DicStringBool GetRootAsDicStringBool(ByteBuffer _bb) { return GetRootAsDicStringBool(_bb, new DicStringBool()); }
  public static DicStringBool GetRootAsDicStringBool(ByteBuffer _bb, DicStringBool obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DicStringBool __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Key { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetKeyArray() { return __p.__vector_as_array<byte>(4); }
  public bool Value { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.DicStringBool> CreateDicStringBool(FlatBufferBuilder builder,
      StringOffset keyOffset = default(StringOffset),
      bool value = false) {
    builder.StartTable(2);
    DicStringBool.AddKey(builder, keyOffset);
    DicStringBool.AddValue(builder, value);
    return DicStringBool.EndDicStringBool(builder);
  }

  public static void StartDicStringBool(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKey(FlatBufferBuilder builder, StringOffset keyOffset) { builder.AddOffset(0, keyOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, bool value) { builder.AddBool(1, value, false); }
  public static Offset<WWParser.Defs.DicStringBool> EndDicStringBool(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.DicStringBool>(o);
  }
  public DicStringBoolT UnPack() {
    var _o = new DicStringBoolT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DicStringBoolT _o) {
    _o.Key = this.Key;
    _o.Value = this.Value;
  }
  public static Offset<WWParser.Defs.DicStringBool> Pack(FlatBufferBuilder builder, DicStringBoolT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.DicStringBool>);
    var _key = _o.Key == null ? default(StringOffset) : builder.CreateString(_o.Key);
    return CreateDicStringBool(
      builder,
      _key,
      _o.Value);
  }
}

public class DicStringBoolT
{
  [Newtonsoft.Json.JsonProperty("key")]
  public string Key { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public bool Value { get; set; }

  public DicStringBoolT() {
    this.Key = null;
    this.Value = false;
  }
}


static public class DicStringBoolVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Key*/, false)
      && verifier.VerifyField(tablePos, 6 /*Value*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
