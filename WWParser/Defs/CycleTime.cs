// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CycleTime : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CycleTime GetRootAsCycleTime(ByteBuffer _bb) { return GetRootAsCycleTime(_bb, new CycleTime()); }
  public static CycleTime GetRootAsCycleTime(ByteBuffer _bb, CycleTime obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CycleTime __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int CycleType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CycleParam { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string TimeParam { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeParamBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTimeParamBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTimeParamArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<WWParser.Defs.CycleTime> CreateCycleTime(FlatBufferBuilder builder,
      int cycle_type = 0,
      int cycle_param = 0,
      StringOffset time_paramOffset = default(StringOffset)) {
    builder.StartTable(3);
    CycleTime.AddTimeParam(builder, time_paramOffset);
    CycleTime.AddCycleParam(builder, cycle_param);
    CycleTime.AddCycleType(builder, cycle_type);
    return CycleTime.EndCycleTime(builder);
  }

  public static void StartCycleTime(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddCycleType(FlatBufferBuilder builder, int cycleType) { builder.AddInt(0, cycleType, 0); }
  public static void AddCycleParam(FlatBufferBuilder builder, int cycleParam) { builder.AddInt(1, cycleParam, 0); }
  public static void AddTimeParam(FlatBufferBuilder builder, StringOffset timeParamOffset) { builder.AddOffset(2, timeParamOffset.Value, 0); }
  public static Offset<WWParser.Defs.CycleTime> EndCycleTime(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.CycleTime>(o);
  }
  public CycleTimeT UnPack() {
    var _o = new CycleTimeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CycleTimeT _o) {
    _o.CycleType = this.CycleType;
    _o.CycleParam = this.CycleParam;
    _o.TimeParam = this.TimeParam;
  }
  public static Offset<WWParser.Defs.CycleTime> Pack(FlatBufferBuilder builder, CycleTimeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.CycleTime>);
    var _time_param = _o.TimeParam == null ? default(StringOffset) : builder.CreateString(_o.TimeParam);
    return CreateCycleTime(
      builder,
      _o.CycleType,
      _o.CycleParam,
      _time_param);
  }
}

public class CycleTimeT
{
  [Newtonsoft.Json.JsonProperty("cycle_type")]
  public int CycleType { get; set; }
  [Newtonsoft.Json.JsonProperty("cycle_param")]
  public int CycleParam { get; set; }
  [Newtonsoft.Json.JsonProperty("time_param")]
  public string TimeParam { get; set; }

  public CycleTimeT() {
    this.CycleType = 0;
    this.CycleParam = 0;
    this.TimeParam = null;
  }
}


static public class CycleTimeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CycleType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*CycleParam*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*TimeParam*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
