// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ResElementLevelGain : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ResElementLevelGain GetRootAsResElementLevelGain(ByteBuffer _bb) { return GetRootAsResElementLevelGain(_bb, new ResElementLevelGain()); }
  public static ResElementLevelGain GetRootAsResElementLevelGain(ByteBuffer _bb, ResElementLevelGain obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ResElementLevelGain __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TargetType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public double BuffId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double AddBuffs(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int AddBuffsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetAddBuffsBytes() { return __p.__vector_as_span<double>(8, 8); }
#else
  public ArraySegment<byte>? GetAddBuffsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public double[] GetAddBuffsArray() { return __p.__vector_as_array<double>(8); }
  public string TextId { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextIdBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTextIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTextIdArray() { return __p.__vector_as_array<byte>(10); }
  public string TextIdArgs(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TextIdArgsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WWParser.Defs.ResElementLevelGain> CreateResElementLevelGain(FlatBufferBuilder builder,
      int target_type = 0,
      double buff_id = 0.0,
      VectorOffset add_buffsOffset = default(VectorOffset),
      StringOffset text_idOffset = default(StringOffset),
      VectorOffset text_id_argsOffset = default(VectorOffset)) {
    builder.StartTable(5);
    ResElementLevelGain.AddBuffId(builder, buff_id);
    ResElementLevelGain.AddTextIdArgs(builder, text_id_argsOffset);
    ResElementLevelGain.AddTextId(builder, text_idOffset);
    ResElementLevelGain.AddAddBuffs(builder, add_buffsOffset);
    ResElementLevelGain.AddTargetType(builder, target_type);
    return ResElementLevelGain.EndResElementLevelGain(builder);
  }

  public static void StartResElementLevelGain(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddTargetType(FlatBufferBuilder builder, int targetType) { builder.AddInt(0, targetType, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, double buffId) { builder.AddDouble(1, buffId, 0.0); }
  public static void AddAddBuffs(FlatBufferBuilder builder, VectorOffset addBuffsOffset) { builder.AddOffset(2, addBuffsOffset.Value, 0); }
  public static VectorOffset CreateAddBuffsVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAddBuffsVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddBuffsVectorBlock(FlatBufferBuilder builder, ArraySegment<double> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddBuffsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<double>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAddBuffsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddTextId(FlatBufferBuilder builder, StringOffset textIdOffset) { builder.AddOffset(3, textIdOffset.Value, 0); }
  public static void AddTextIdArgs(FlatBufferBuilder builder, VectorOffset textIdArgsOffset) { builder.AddOffset(4, textIdArgsOffset.Value, 0); }
  public static VectorOffset CreateTextIdArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTextIdArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTextIdArgsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTextIdArgsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTextIdArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.ResElementLevelGain> EndResElementLevelGain(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.ResElementLevelGain>(o);
  }
  public ResElementLevelGainT UnPack() {
    var _o = new ResElementLevelGainT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ResElementLevelGainT _o) {
    _o.TargetType = this.TargetType;
    _o.BuffId = this.BuffId;
    _o.AddBuffs = new List<double>();
    for (var _j = 0; _j < this.AddBuffsLength; ++_j) {_o.AddBuffs.Add(this.AddBuffs(_j));}
    _o.TextId = this.TextId;
    _o.TextIdArgs = new List<string>();
    for (var _j = 0; _j < this.TextIdArgsLength; ++_j) {_o.TextIdArgs.Add(this.TextIdArgs(_j));}
  }
  public static Offset<WWParser.Defs.ResElementLevelGain> Pack(FlatBufferBuilder builder, ResElementLevelGainT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.ResElementLevelGain>);
    var _add_buffs = default(VectorOffset);
    if (_o.AddBuffs != null) {
      var __add_buffs = _o.AddBuffs.ToArray();
      _add_buffs = CreateAddBuffsVector(builder, __add_buffs);
    }
    var _text_id = _o.TextId == null ? default(StringOffset) : builder.CreateString(_o.TextId);
    var _text_id_args = default(VectorOffset);
    if (_o.TextIdArgs != null) {
      var __text_id_args = new StringOffset[_o.TextIdArgs.Count];
      for (var _j = 0; _j < __text_id_args.Length; ++_j) { __text_id_args[_j] = builder.CreateString(_o.TextIdArgs[_j]); }
      _text_id_args = CreateTextIdArgsVector(builder, __text_id_args);
    }
    return CreateResElementLevelGain(
      builder,
      _o.TargetType,
      _o.BuffId,
      _add_buffs,
      _text_id,
      _text_id_args);
  }
}

public class ResElementLevelGainT
{
  [Newtonsoft.Json.JsonProperty("target_type")]
  public int TargetType { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_id")]
  public double BuffId { get; set; }
  [Newtonsoft.Json.JsonProperty("add_buffs")]
  public List<double> AddBuffs { get; set; }
  [Newtonsoft.Json.JsonProperty("text_id")]
  public string TextId { get; set; }
  [Newtonsoft.Json.JsonProperty("text_id_args")]
  public List<string> TextIdArgs { get; set; }

  public ResElementLevelGainT() {
    this.TargetType = 0;
    this.BuffId = 0.0;
    this.AddBuffs = null;
    this.TextId = null;
    this.TextIdArgs = null;
  }
}


static public class ResElementLevelGainVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TargetType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*BuffId*/, 8 /*double*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*AddBuffs*/, 8 /*double*/, false)
      && verifier.VerifyString(tablePos, 10 /*TextId*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 12 /*TextIdArgs*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
