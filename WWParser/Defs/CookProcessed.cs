// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CookProcessed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CookProcessed GetRootAsCookProcessed(ByteBuffer _bb) { return GetRootAsCookProcessed(_bb, new CookProcessed()); }
  public static CookProcessed GetRootAsCookProcessed(ByteBuffer _bb, CookProcessed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CookProcessed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FinalItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Unlock { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(10); }
  public WWParser.Defs.OneItemConfig? ConsumeItemsId(int j) { int o = __p.__offset(12); return o != 0 ? (WWParser.Defs.OneItemConfig?)(new WWParser.Defs.OneItemConfig()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConsumeItemsIdLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntInt? LeastItemId(int j) { int o = __p.__offset(14); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int LeastItemIdLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int InterationId(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int InterationIdLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetInterationIdBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetInterationIdBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetInterationIdArray() { return __p.__vector_as_array<int>(16); }

  public static Offset<WWParser.Defs.CookProcessed> CreateCookProcessed(FlatBufferBuilder builder,
      int id = 0,
      int final_item_id = 0,
      bool unlock = false,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset consume_items_idOffset = default(VectorOffset),
      VectorOffset least_item_idOffset = default(VectorOffset),
      VectorOffset interation_idOffset = default(VectorOffset)) {
    builder.StartTable(7);
    CookProcessed.AddInterationId(builder, interation_idOffset);
    CookProcessed.AddLeastItemId(builder, least_item_idOffset);
    CookProcessed.AddConsumeItemsId(builder, consume_items_idOffset);
    CookProcessed.AddName(builder, nameOffset);
    CookProcessed.AddFinalItemId(builder, final_item_id);
    CookProcessed.AddId(builder, id);
    CookProcessed.AddUnlock(builder, unlock);
    return CookProcessed.EndCookProcessed(builder);
  }

  public static void StartCookProcessed(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddFinalItemId(FlatBufferBuilder builder, int finalItemId) { builder.AddInt(1, finalItemId, 0); }
  public static void AddUnlock(FlatBufferBuilder builder, bool unlock) { builder.AddBool(2, unlock, false); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(3, nameOffset.Value, 0); }
  public static void AddConsumeItemsId(FlatBufferBuilder builder, VectorOffset consumeItemsIdOffset) { builder.AddOffset(4, consumeItemsIdOffset.Value, 0); }
  public static VectorOffset CreateConsumeItemsIdVector(FlatBufferBuilder builder, Offset<WWParser.Defs.OneItemConfig>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConsumeItemsIdVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.OneItemConfig>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeItemsIdVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.OneItemConfig>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeItemsIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.OneItemConfig>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartConsumeItemsIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLeastItemId(FlatBufferBuilder builder, VectorOffset leastItemIdOffset) { builder.AddOffset(5, leastItemIdOffset.Value, 0); }
  public static VectorOffset CreateLeastItemIdVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLeastItemIdVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLeastItemIdVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLeastItemIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLeastItemIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInterationId(FlatBufferBuilder builder, VectorOffset interationIdOffset) { builder.AddOffset(6, interationIdOffset.Value, 0); }
  public static VectorOffset CreateInterationIdVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInterationIdVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInterationIdVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInterationIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInterationIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WWParser.Defs.CookProcessed> EndCookProcessed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.CookProcessed>(o);
  }
  public CookProcessedT UnPack() {
    var _o = new CookProcessedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CookProcessedT _o) {
    _o.Id = this.Id;
    _o.FinalItemId = this.FinalItemId;
    _o.Unlock = this.Unlock;
    _o.Name = this.Name;
    _o.ConsumeItemsId = new List<WWParser.Defs.OneItemConfigT>();
    for (var _j = 0; _j < this.ConsumeItemsIdLength; ++_j) {_o.ConsumeItemsId.Add(this.ConsumeItemsId(_j).HasValue ? this.ConsumeItemsId(_j).Value.UnPack() : null);}
    _o.LeastItemId = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.LeastItemIdLength; ++_j) {_o.LeastItemId.Add(this.LeastItemId(_j).HasValue ? this.LeastItemId(_j).Value.UnPack() : null);}
    _o.InterationId = new List<int>();
    for (var _j = 0; _j < this.InterationIdLength; ++_j) {_o.InterationId.Add(this.InterationId(_j));}
  }
  public static Offset<WWParser.Defs.CookProcessed> Pack(FlatBufferBuilder builder, CookProcessedT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.CookProcessed>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _consume_items_id = default(VectorOffset);
    if (_o.ConsumeItemsId != null) {
      var __consume_items_id = new Offset<WWParser.Defs.OneItemConfig>[_o.ConsumeItemsId.Count];
      for (var _j = 0; _j < __consume_items_id.Length; ++_j) { __consume_items_id[_j] = WWParser.Defs.OneItemConfig.Pack(builder, _o.ConsumeItemsId[_j]); }
      _consume_items_id = CreateConsumeItemsIdVector(builder, __consume_items_id);
    }
    var _least_item_id = default(VectorOffset);
    if (_o.LeastItemId != null) {
      var __least_item_id = new Offset<WWParser.Defs.DicIntInt>[_o.LeastItemId.Count];
      for (var _j = 0; _j < __least_item_id.Length; ++_j) { __least_item_id[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.LeastItemId[_j]); }
      _least_item_id = CreateLeastItemIdVector(builder, __least_item_id);
    }
    var _interation_id = default(VectorOffset);
    if (_o.InterationId != null) {
      var __interation_id = _o.InterationId.ToArray();
      _interation_id = CreateInterationIdVector(builder, __interation_id);
    }
    return CreateCookProcessed(
      builder,
      _o.Id,
      _o.FinalItemId,
      _o.Unlock,
      _name,
      _consume_items_id,
      _least_item_id,
      _interation_id);
  }
}

public class CookProcessedT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("final_item_id")]
  public int FinalItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("unlock")]
  public bool Unlock { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("consume_items_id")]
  public List<WWParser.Defs.OneItemConfigT> ConsumeItemsId { get; set; }
  [Newtonsoft.Json.JsonProperty("least_item_id")]
  public List<WWParser.Defs.DicIntIntT> LeastItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("interation_id")]
  public List<int> InterationId { get; set; }

  public CookProcessedT() {
    this.Id = 0;
    this.FinalItemId = 0;
    this.Unlock = false;
    this.Name = null;
    this.ConsumeItemsId = null;
    this.LeastItemId = null;
    this.InterationId = null;
  }
}


static public class CookProcessedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*FinalItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Unlock*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*Name*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 12 /*ConsumeItemsId*/, WWParser.Defs.OneItemConfigVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 14 /*LeastItemId*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 16 /*InterationId*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
