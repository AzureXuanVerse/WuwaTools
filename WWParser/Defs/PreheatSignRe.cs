// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PreheatSignRe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PreheatSignRe GetRootAsPreheatSignRe(ByteBuffer _bb) { return GetRootAsPreheatSignRe(_bb, new PreheatSignRe()); }
  public static PreheatSignRe GetRootAsPreheatSignRe(ByteBuffer _bb, PreheatSignRe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PreheatSignRe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QuestId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PreSignId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.PreheatSignRe> CreatePreheatSignRe(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int drop_id = 0,
      int quest_id = 0,
      int pre_sign_id = 0) {
    builder.StartTable(5);
    PreheatSignRe.AddPreSignId(builder, pre_sign_id);
    PreheatSignRe.AddQuestId(builder, quest_id);
    PreheatSignRe.AddDropId(builder, drop_id);
    PreheatSignRe.AddActivityId(builder, activity_id);
    PreheatSignRe.AddId(builder, id);
    return PreheatSignRe.EndPreheatSignRe(builder);
  }

  public static void StartPreheatSignRe(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(2, dropId, 0); }
  public static void AddQuestId(FlatBufferBuilder builder, int questId) { builder.AddInt(3, questId, 0); }
  public static void AddPreSignId(FlatBufferBuilder builder, int preSignId) { builder.AddInt(4, preSignId, 0); }
  public static Offset<WWParser.Defs.PreheatSignRe> EndPreheatSignRe(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PreheatSignRe>(o);
  }
  public PreheatSignReT UnPack() {
    var _o = new PreheatSignReT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PreheatSignReT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.DropId = this.DropId;
    _o.QuestId = this.QuestId;
    _o.PreSignId = this.PreSignId;
  }
  public static Offset<WWParser.Defs.PreheatSignRe> Pack(FlatBufferBuilder builder, PreheatSignReT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PreheatSignRe>);
    return CreatePreheatSignRe(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.DropId,
      _o.QuestId,
      _o.PreSignId);
  }
}

public class PreheatSignReT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }
  [Newtonsoft.Json.JsonProperty("quest_id")]
  public int QuestId { get; set; }
  [Newtonsoft.Json.JsonProperty("pre_sign_id")]
  public int PreSignId { get; set; }

  public PreheatSignReT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.DropId = 0;
    this.QuestId = 0;
    this.PreSignId = 0;
  }
}


static public class PreheatSignReVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*QuestId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*PreSignId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
