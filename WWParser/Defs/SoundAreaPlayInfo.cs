// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SoundAreaPlayInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SoundAreaPlayInfo GetRootAsSoundAreaPlayInfo(ByteBuffer _bb) { return GetRootAsSoundAreaPlayInfo(_bb, new SoundAreaPlayInfo()); }
  public static SoundAreaPlayInfo GetRootAsSoundAreaPlayInfo(ByteBuffer _bb, SoundAreaPlayInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SoundAreaPlayInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BuffTitle { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuffTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBuffTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBuffTitleArray() { return __p.__vector_as_array<byte>(6); }
  public int MaxCountType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BuffDescription { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuffDescriptionBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetBuffDescriptionBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBuffDescriptionArray() { return __p.__vector_as_array<byte>(10); }
  public bool ShowTitle { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int Time { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)3; } }
  public int MaxCount { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.SoundAreaPlayInfo> CreateSoundAreaPlayInfo(FlatBufferBuilder builder,
      int id = 0,
      StringOffset buff_titleOffset = default(StringOffset),
      int max_count_type = 0,
      StringOffset buff_descriptionOffset = default(StringOffset),
      bool show_title = false,
      int time = 3,
      int max_count = 0) {
    builder.StartTable(7);
    SoundAreaPlayInfo.AddMaxCount(builder, max_count);
    SoundAreaPlayInfo.AddTime(builder, time);
    SoundAreaPlayInfo.AddBuffDescription(builder, buff_descriptionOffset);
    SoundAreaPlayInfo.AddMaxCountType(builder, max_count_type);
    SoundAreaPlayInfo.AddBuffTitle(builder, buff_titleOffset);
    SoundAreaPlayInfo.AddId(builder, id);
    SoundAreaPlayInfo.AddShowTitle(builder, show_title);
    return SoundAreaPlayInfo.EndSoundAreaPlayInfo(builder);
  }

  public static void StartSoundAreaPlayInfo(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddBuffTitle(FlatBufferBuilder builder, StringOffset buffTitleOffset) { builder.AddOffset(1, buffTitleOffset.Value, 0); }
  public static void AddMaxCountType(FlatBufferBuilder builder, int maxCountType) { builder.AddInt(2, maxCountType, 0); }
  public static void AddBuffDescription(FlatBufferBuilder builder, StringOffset buffDescriptionOffset) { builder.AddOffset(3, buffDescriptionOffset.Value, 0); }
  public static void AddShowTitle(FlatBufferBuilder builder, bool showTitle) { builder.AddBool(4, showTitle, false); }
  public static void AddTime(FlatBufferBuilder builder, int time) { builder.AddInt(5, time, 3); }
  public static void AddMaxCount(FlatBufferBuilder builder, int maxCount) { builder.AddInt(6, maxCount, 0); }
  public static Offset<WWParser.Defs.SoundAreaPlayInfo> EndSoundAreaPlayInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SoundAreaPlayInfo>(o);
  }
  public SoundAreaPlayInfoT UnPack() {
    var _o = new SoundAreaPlayInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SoundAreaPlayInfoT _o) {
    _o.Id = this.Id;
    _o.BuffTitle = this.BuffTitle;
    _o.MaxCountType = this.MaxCountType;
    _o.BuffDescription = this.BuffDescription;
    _o.ShowTitle = this.ShowTitle;
    _o.Time = this.Time;
    _o.MaxCount = this.MaxCount;
  }
  public static Offset<WWParser.Defs.SoundAreaPlayInfo> Pack(FlatBufferBuilder builder, SoundAreaPlayInfoT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SoundAreaPlayInfo>);
    var _buff_title = _o.BuffTitle == null ? default(StringOffset) : builder.CreateString(_o.BuffTitle);
    var _buff_description = _o.BuffDescription == null ? default(StringOffset) : builder.CreateString(_o.BuffDescription);
    return CreateSoundAreaPlayInfo(
      builder,
      _o.Id,
      _buff_title,
      _o.MaxCountType,
      _buff_description,
      _o.ShowTitle,
      _o.Time,
      _o.MaxCount);
  }
}

public class SoundAreaPlayInfoT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_title")]
  public string BuffTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("max_count_type")]
  public int MaxCountType { get; set; }
  [Newtonsoft.Json.JsonProperty("buff_description")]
  public string BuffDescription { get; set; }
  [Newtonsoft.Json.JsonProperty("show_title")]
  public bool ShowTitle { get; set; }
  [Newtonsoft.Json.JsonProperty("time")]
  public int Time { get; set; }
  [Newtonsoft.Json.JsonProperty("max_count")]
  public int MaxCount { get; set; }

  public SoundAreaPlayInfoT() {
    this.Id = 0;
    this.BuffTitle = null;
    this.MaxCountType = 0;
    this.BuffDescription = null;
    this.ShowTitle = false;
    this.Time = 3;
    this.MaxCount = 0;
  }
}


static public class SoundAreaPlayInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*BuffTitle*/, false)
      && verifier.VerifyField(tablePos, 8 /*MaxCountType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*BuffDescription*/, false)
      && verifier.VerifyField(tablePos, 12 /*ShowTitle*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*Time*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*MaxCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
