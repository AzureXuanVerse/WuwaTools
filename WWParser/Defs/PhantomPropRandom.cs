// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PhantomPropRandom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static PhantomPropRandom GetRootAsPhantomPropRandom(ByteBuffer _bb) { return GetRootAsPhantomPropRandom(_bb, new PhantomPropRandom()); }
  public static PhantomPropRandom GetRootAsPhantomPropRandom(ByteBuffer _bb, PhantomPropRandom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PhantomPropRandom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RandGroupId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RandNum { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.PhantomPropRandom> CreatePhantomPropRandom(FlatBufferBuilder builder,
      int rand_group_id = 0,
      int rand_num = 0) {
    builder.StartTable(2);
    PhantomPropRandom.AddRandNum(builder, rand_num);
    PhantomPropRandom.AddRandGroupId(builder, rand_group_id);
    return PhantomPropRandom.EndPhantomPropRandom(builder);
  }

  public static void StartPhantomPropRandom(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRandGroupId(FlatBufferBuilder builder, int randGroupId) { builder.AddInt(0, randGroupId, 0); }
  public static void AddRandNum(FlatBufferBuilder builder, int randNum) { builder.AddInt(1, randNum, 0); }
  public static Offset<WWParser.Defs.PhantomPropRandom> EndPhantomPropRandom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.PhantomPropRandom>(o);
  }
  public PhantomPropRandomT UnPack() {
    var _o = new PhantomPropRandomT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PhantomPropRandomT _o) {
    _o.RandGroupId = this.RandGroupId;
    _o.RandNum = this.RandNum;
  }
  public static Offset<WWParser.Defs.PhantomPropRandom> Pack(FlatBufferBuilder builder, PhantomPropRandomT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.PhantomPropRandom>);
    return CreatePhantomPropRandom(
      builder,
      _o.RandGroupId,
      _o.RandNum);
  }
}

public class PhantomPropRandomT
{
  [Newtonsoft.Json.JsonProperty("rand_group_id")]
  public int RandGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("rand_num")]
  public int RandNum { get; set; }

  public PhantomPropRandomT() {
    this.RandGroupId = 0;
    this.RandNum = 0;
  }
}


static public class PhantomPropRandomVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RandGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RandNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
