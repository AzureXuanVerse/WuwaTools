// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TrailPhantomProp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TrailPhantomProp GetRootAsTrailPhantomProp(ByteBuffer _bb) { return GetRootAsTrailPhantomProp(_bb, new TrailPhantomProp()); }
  public static TrailPhantomProp GetRootAsTrailPhantomProp(ByteBuffer _bb, TrailPhantomProp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TrailPhantomProp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.ConfigPropValue? MainProp { get { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.ConfigPropValue?)(new WWParser.Defs.ConfigPropValue()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public WWParser.Defs.ConfigPropValue? BreachProp { get { int o = __p.__offset(10); return o != 0 ? (WWParser.Defs.ConfigPropValue?)(new WWParser.Defs.ConfigPropValue()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public WWParser.Defs.ConfigPropValue? SubProp(int j) { int o = __p.__offset(12); return o != 0 ? (WWParser.Defs.ConfigPropValue?)(new WWParser.Defs.ConfigPropValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SubPropLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int MainProps(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainPropsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainPropsBytes() { return __p.__vector_as_span<int>(14, 4); }
#else
  public ArraySegment<byte>? GetMainPropsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public int[] GetMainPropsArray() { return __p.__vector_as_array<int>(14); }
  public int MainPropGrowth { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public WWParser.Defs.IntArray? SubProps(int j) { int o = __p.__offset(18); return o != 0 ? (WWParser.Defs.IntArray?)(new WWParser.Defs.IntArray()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SubPropsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int SubPropList(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SubPropListLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSubPropListBytes() { return __p.__vector_as_span<int>(20, 4); }
#else
  public ArraySegment<byte>? GetSubPropListBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public int[] GetSubPropListArray() { return __p.__vector_as_array<int>(20); }
  public int FetterGroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int SkinItemId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.TrailPhantomProp> CreateTrailPhantomProp(FlatBufferBuilder builder,
      int id = 0,
      int level = 0,
      Offset<WWParser.Defs.ConfigPropValue> main_propOffset = default(Offset<WWParser.Defs.ConfigPropValue>),
      Offset<WWParser.Defs.ConfigPropValue> breach_propOffset = default(Offset<WWParser.Defs.ConfigPropValue>),
      VectorOffset sub_propOffset = default(VectorOffset),
      VectorOffset main_propsOffset = default(VectorOffset),
      int main_prop_growth = 1,
      VectorOffset sub_propsOffset = default(VectorOffset),
      VectorOffset sub_prop_listOffset = default(VectorOffset),
      int fetter_group_id = 1,
      int skin_item_id = 0) {
    builder.StartTable(11);
    TrailPhantomProp.AddSkinItemId(builder, skin_item_id);
    TrailPhantomProp.AddFetterGroupId(builder, fetter_group_id);
    TrailPhantomProp.AddSubPropList(builder, sub_prop_listOffset);
    TrailPhantomProp.AddSubProps(builder, sub_propsOffset);
    TrailPhantomProp.AddMainPropGrowth(builder, main_prop_growth);
    TrailPhantomProp.AddMainProps(builder, main_propsOffset);
    TrailPhantomProp.AddSubProp(builder, sub_propOffset);
    TrailPhantomProp.AddBreachProp(builder, breach_propOffset);
    TrailPhantomProp.AddMainProp(builder, main_propOffset);
    TrailPhantomProp.AddLevel(builder, level);
    TrailPhantomProp.AddId(builder, id);
    return TrailPhantomProp.EndTrailPhantomProp(builder);
  }

  public static void StartTrailPhantomProp(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(1, level, 0); }
  public static void AddMainProp(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue> mainPropOffset) { builder.AddOffset(2, mainPropOffset.Value, 0); }
  public static void AddBreachProp(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue> breachPropOffset) { builder.AddOffset(3, breachPropOffset.Value, 0); }
  public static void AddSubProp(FlatBufferBuilder builder, VectorOffset subPropOffset) { builder.AddOffset(4, subPropOffset.Value, 0); }
  public static VectorOffset CreateSubPropVector(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSubPropVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.ConfigPropValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.ConfigPropValue>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.ConfigPropValue>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSubPropVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainProps(FlatBufferBuilder builder, VectorOffset mainPropsOffset) { builder.AddOffset(5, mainPropsOffset.Value, 0); }
  public static VectorOffset CreateMainPropsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainPropsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainPropsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainPropsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainPropsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainPropGrowth(FlatBufferBuilder builder, int mainPropGrowth) { builder.AddInt(6, mainPropGrowth, 1); }
  public static void AddSubProps(FlatBufferBuilder builder, VectorOffset subPropsOffset) { builder.AddOffset(7, subPropsOffset.Value, 0); }
  public static VectorOffset CreateSubPropsVector(FlatBufferBuilder builder, Offset<WWParser.Defs.IntArray>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSubPropsVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.IntArray>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.IntArray>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.IntArray>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSubPropsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSubPropList(FlatBufferBuilder builder, VectorOffset subPropListOffset) { builder.AddOffset(8, subPropListOffset.Value, 0); }
  public static VectorOffset CreateSubPropListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSubPropListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubPropListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSubPropListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFetterGroupId(FlatBufferBuilder builder, int fetterGroupId) { builder.AddInt(9, fetterGroupId, 1); }
  public static void AddSkinItemId(FlatBufferBuilder builder, int skinItemId) { builder.AddInt(10, skinItemId, 0); }
  public static Offset<WWParser.Defs.TrailPhantomProp> EndTrailPhantomProp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.TrailPhantomProp>(o);
  }
  public TrailPhantomPropT UnPack() {
    var _o = new TrailPhantomPropT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TrailPhantomPropT _o) {
    _o.Id = this.Id;
    _o.Level = this.Level;
    _o.MainProp = this.MainProp.HasValue ? this.MainProp.Value.UnPack() : null;
    _o.BreachProp = this.BreachProp.HasValue ? this.BreachProp.Value.UnPack() : null;
    _o.SubProp = new List<WWParser.Defs.ConfigPropValueT>();
    for (var _j = 0; _j < this.SubPropLength; ++_j) {_o.SubProp.Add(this.SubProp(_j).HasValue ? this.SubProp(_j).Value.UnPack() : null);}
    _o.MainProps = new List<int>();
    for (var _j = 0; _j < this.MainPropsLength; ++_j) {_o.MainProps.Add(this.MainProps(_j));}
    _o.MainPropGrowth = this.MainPropGrowth;
    _o.SubProps = new List<WWParser.Defs.IntArrayT>();
    for (var _j = 0; _j < this.SubPropsLength; ++_j) {_o.SubProps.Add(this.SubProps(_j).HasValue ? this.SubProps(_j).Value.UnPack() : null);}
    _o.SubPropList = new List<int>();
    for (var _j = 0; _j < this.SubPropListLength; ++_j) {_o.SubPropList.Add(this.SubPropList(_j));}
    _o.FetterGroupId = this.FetterGroupId;
    _o.SkinItemId = this.SkinItemId;
  }
  public static Offset<WWParser.Defs.TrailPhantomProp> Pack(FlatBufferBuilder builder, TrailPhantomPropT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.TrailPhantomProp>);
    var _main_prop = _o.MainProp == null ? default(Offset<WWParser.Defs.ConfigPropValue>) : WWParser.Defs.ConfigPropValue.Pack(builder, _o.MainProp);
    var _breach_prop = _o.BreachProp == null ? default(Offset<WWParser.Defs.ConfigPropValue>) : WWParser.Defs.ConfigPropValue.Pack(builder, _o.BreachProp);
    var _sub_prop = default(VectorOffset);
    if (_o.SubProp != null) {
      var __sub_prop = new Offset<WWParser.Defs.ConfigPropValue>[_o.SubProp.Count];
      for (var _j = 0; _j < __sub_prop.Length; ++_j) { __sub_prop[_j] = WWParser.Defs.ConfigPropValue.Pack(builder, _o.SubProp[_j]); }
      _sub_prop = CreateSubPropVector(builder, __sub_prop);
    }
    var _main_props = default(VectorOffset);
    if (_o.MainProps != null) {
      var __main_props = _o.MainProps.ToArray();
      _main_props = CreateMainPropsVector(builder, __main_props);
    }
    var _sub_props = default(VectorOffset);
    if (_o.SubProps != null) {
      var __sub_props = new Offset<WWParser.Defs.IntArray>[_o.SubProps.Count];
      for (var _j = 0; _j < __sub_props.Length; ++_j) { __sub_props[_j] = WWParser.Defs.IntArray.Pack(builder, _o.SubProps[_j]); }
      _sub_props = CreateSubPropsVector(builder, __sub_props);
    }
    var _sub_prop_list = default(VectorOffset);
    if (_o.SubPropList != null) {
      var __sub_prop_list = _o.SubPropList.ToArray();
      _sub_prop_list = CreateSubPropListVector(builder, __sub_prop_list);
    }
    return CreateTrailPhantomProp(
      builder,
      _o.Id,
      _o.Level,
      _main_prop,
      _breach_prop,
      _sub_prop,
      _main_props,
      _o.MainPropGrowth,
      _sub_props,
      _sub_prop_list,
      _o.FetterGroupId,
      _o.SkinItemId);
  }
}

public class TrailPhantomPropT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("level")]
  public int Level { get; set; }
  [Newtonsoft.Json.JsonProperty("main_prop")]
  public WWParser.Defs.ConfigPropValueT MainProp { get; set; }
  [Newtonsoft.Json.JsonProperty("breach_prop")]
  public WWParser.Defs.ConfigPropValueT BreachProp { get; set; }
  [Newtonsoft.Json.JsonProperty("sub_prop")]
  public List<WWParser.Defs.ConfigPropValueT> SubProp { get; set; }
  [Newtonsoft.Json.JsonProperty("main_props")]
  public List<int> MainProps { get; set; }
  [Newtonsoft.Json.JsonProperty("main_prop_growth")]
  public int MainPropGrowth { get; set; }
  [Newtonsoft.Json.JsonProperty("sub_props")]
  public List<WWParser.Defs.IntArrayT> SubProps { get; set; }
  [Newtonsoft.Json.JsonProperty("sub_prop_list")]
  public List<int> SubPropList { get; set; }
  [Newtonsoft.Json.JsonProperty("fetter_group_id")]
  public int FetterGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("skin_item_id")]
  public int SkinItemId { get; set; }

  public TrailPhantomPropT() {
    this.Id = 0;
    this.Level = 0;
    this.MainProp = null;
    this.BreachProp = null;
    this.SubProp = null;
    this.MainProps = null;
    this.MainPropGrowth = 1;
    this.SubProps = null;
    this.SubPropList = null;
    this.FetterGroupId = 1;
    this.SkinItemId = 0;
  }
}


static public class TrailPhantomPropVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 8 /*MainProp*/, WWParser.Defs.ConfigPropValueVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 10 /*BreachProp*/, WWParser.Defs.ConfigPropValueVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 12 /*SubProp*/, WWParser.Defs.ConfigPropValueVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*MainProps*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 16 /*MainPropGrowth*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 18 /*SubProps*/, WWParser.Defs.IntArrayVerify.Verify, false)
      && verifier.VerifyVectorOfData(tablePos, 20 /*SubPropList*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 22 /*FetterGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*SkinItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
