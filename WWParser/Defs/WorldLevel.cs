// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct WorldLevel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static WorldLevel GetRootAsWorldLevel(ByteBuffer _bb) { return GetRootAsWorldLevel(_bb, new WorldLevel()); }
  public static WorldLevel GetRootAsWorldLevel(ByteBuffer _bb, WorldLevel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public WorldLevel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayerLevelMax { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ConditionGroupId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AiTeamLevelId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TrainingLevel { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.WorldLevel> CreateWorldLevel(FlatBufferBuilder builder,
      int id = 0,
      int player_level_max = 0,
      int condition_group_id = 0,
      int ai_team_level_id = 0,
      int training_level = 0) {
    builder.StartTable(5);
    WorldLevel.AddTrainingLevel(builder, training_level);
    WorldLevel.AddAiTeamLevelId(builder, ai_team_level_id);
    WorldLevel.AddConditionGroupId(builder, condition_group_id);
    WorldLevel.AddPlayerLevelMax(builder, player_level_max);
    WorldLevel.AddId(builder, id);
    return WorldLevel.EndWorldLevel(builder);
  }

  public static void StartWorldLevel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddPlayerLevelMax(FlatBufferBuilder builder, int playerLevelMax) { builder.AddInt(1, playerLevelMax, 0); }
  public static void AddConditionGroupId(FlatBufferBuilder builder, int conditionGroupId) { builder.AddInt(2, conditionGroupId, 0); }
  public static void AddAiTeamLevelId(FlatBufferBuilder builder, int aiTeamLevelId) { builder.AddInt(3, aiTeamLevelId, 0); }
  public static void AddTrainingLevel(FlatBufferBuilder builder, int trainingLevel) { builder.AddInt(4, trainingLevel, 0); }
  public static Offset<WWParser.Defs.WorldLevel> EndWorldLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.WorldLevel>(o);
  }
  public WorldLevelT UnPack() {
    var _o = new WorldLevelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(WorldLevelT _o) {
    _o.Id = this.Id;
    _o.PlayerLevelMax = this.PlayerLevelMax;
    _o.ConditionGroupId = this.ConditionGroupId;
    _o.AiTeamLevelId = this.AiTeamLevelId;
    _o.TrainingLevel = this.TrainingLevel;
  }
  public static Offset<WWParser.Defs.WorldLevel> Pack(FlatBufferBuilder builder, WorldLevelT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.WorldLevel>);
    return CreateWorldLevel(
      builder,
      _o.Id,
      _o.PlayerLevelMax,
      _o.ConditionGroupId,
      _o.AiTeamLevelId,
      _o.TrainingLevel);
  }
}

public class WorldLevelT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("player_level_max")]
  public int PlayerLevelMax { get; set; }
  [Newtonsoft.Json.JsonProperty("condition_group_id")]
  public int ConditionGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("ai_team_level_id")]
  public int AiTeamLevelId { get; set; }
  [Newtonsoft.Json.JsonProperty("training_level")]
  public int TrainingLevel { get; set; }

  public WorldLevelT() {
    this.Id = 0;
    this.PlayerLevelMax = 0;
    this.ConditionGroupId = 0;
    this.AiTeamLevelId = 0;
    this.TrainingLevel = 0;
  }
}


static public class WorldLevelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*PlayerLevelMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ConditionGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*AiTeamLevelId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*TrainingLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
