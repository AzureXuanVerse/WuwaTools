// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RogueResTheme : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RogueResTheme GetRootAsRogueResTheme(ByteBuffer _bb) { return GetRootAsRogueResTheme(_bb, new RogueResTheme()); }
  public static RogueResTheme GetRootAsRogueResTheme(ByteBuffer _bb, RogueResTheme obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RogueResTheme __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TimerId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Insts(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int InstsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetInstsBytes() { return __p.__vector_as_span<int>(10, 4); }
#else
  public ArraySegment<byte>? GetInstsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public int[] GetInstsArray() { return __p.__vector_as_array<int>(10); }
  public int SkillItem { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillMax { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PointItem { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PointItemMax { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShopId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(22); }
  public int HelpId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(26); }
  public string ViewName { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetViewNameBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetViewNameBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetViewNameArray() { return __p.__vector_as_array<byte>(28); }
  public string Coverf { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCoverfBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetCoverfBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetCoverfArray() { return __p.__vector_as_array<byte>(30); }
  public string Coverm { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCovermBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetCovermBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetCovermArray() { return __p.__vector_as_array<byte>(32); }

  public static Offset<WWParser.Defs.RogueResTheme> CreateRogueResTheme(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int timer_id = 0,
      VectorOffset instsOffset = default(VectorOffset),
      int skill_item = 0,
      int skill_max = 0,
      int point_item = 0,
      int point_item_max = 0,
      int shop_id = 0,
      StringOffset nameOffset = default(StringOffset),
      int help_id = 0,
      StringOffset iconOffset = default(StringOffset),
      StringOffset view_nameOffset = default(StringOffset),
      StringOffset coverfOffset = default(StringOffset),
      StringOffset covermOffset = default(StringOffset)) {
    builder.StartTable(15);
    RogueResTheme.AddCoverm(builder, covermOffset);
    RogueResTheme.AddCoverf(builder, coverfOffset);
    RogueResTheme.AddViewName(builder, view_nameOffset);
    RogueResTheme.AddIcon(builder, iconOffset);
    RogueResTheme.AddHelpId(builder, help_id);
    RogueResTheme.AddName(builder, nameOffset);
    RogueResTheme.AddShopId(builder, shop_id);
    RogueResTheme.AddPointItemMax(builder, point_item_max);
    RogueResTheme.AddPointItem(builder, point_item);
    RogueResTheme.AddSkillMax(builder, skill_max);
    RogueResTheme.AddSkillItem(builder, skill_item);
    RogueResTheme.AddInsts(builder, instsOffset);
    RogueResTheme.AddTimerId(builder, timer_id);
    RogueResTheme.AddActivityId(builder, activity_id);
    RogueResTheme.AddId(builder, id);
    return RogueResTheme.EndRogueResTheme(builder);
  }

  public static void StartRogueResTheme(FlatBufferBuilder builder) { builder.StartTable(15); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddTimerId(FlatBufferBuilder builder, int timerId) { builder.AddInt(2, timerId, 0); }
  public static void AddInsts(FlatBufferBuilder builder, VectorOffset instsOffset) { builder.AddOffset(3, instsOffset.Value, 0); }
  public static VectorOffset CreateInstsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInstsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInstsVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInstsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInstsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSkillItem(FlatBufferBuilder builder, int skillItem) { builder.AddInt(4, skillItem, 0); }
  public static void AddSkillMax(FlatBufferBuilder builder, int skillMax) { builder.AddInt(5, skillMax, 0); }
  public static void AddPointItem(FlatBufferBuilder builder, int pointItem) { builder.AddInt(6, pointItem, 0); }
  public static void AddPointItemMax(FlatBufferBuilder builder, int pointItemMax) { builder.AddInt(7, pointItemMax, 0); }
  public static void AddShopId(FlatBufferBuilder builder, int shopId) { builder.AddInt(8, shopId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(9, nameOffset.Value, 0); }
  public static void AddHelpId(FlatBufferBuilder builder, int helpId) { builder.AddInt(10, helpId, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(11, iconOffset.Value, 0); }
  public static void AddViewName(FlatBufferBuilder builder, StringOffset viewNameOffset) { builder.AddOffset(12, viewNameOffset.Value, 0); }
  public static void AddCoverf(FlatBufferBuilder builder, StringOffset coverfOffset) { builder.AddOffset(13, coverfOffset.Value, 0); }
  public static void AddCoverm(FlatBufferBuilder builder, StringOffset covermOffset) { builder.AddOffset(14, covermOffset.Value, 0); }
  public static Offset<WWParser.Defs.RogueResTheme> EndRogueResTheme(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RogueResTheme>(o);
  }
  public RogueResThemeT UnPack() {
    var _o = new RogueResThemeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RogueResThemeT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.TimerId = this.TimerId;
    _o.Insts = new List<int>();
    for (var _j = 0; _j < this.InstsLength; ++_j) {_o.Insts.Add(this.Insts(_j));}
    _o.SkillItem = this.SkillItem;
    _o.SkillMax = this.SkillMax;
    _o.PointItem = this.PointItem;
    _o.PointItemMax = this.PointItemMax;
    _o.ShopId = this.ShopId;
    _o.Name = this.Name;
    _o.HelpId = this.HelpId;
    _o.Icon = this.Icon;
    _o.ViewName = this.ViewName;
    _o.Coverf = this.Coverf;
    _o.Coverm = this.Coverm;
  }
  public static Offset<WWParser.Defs.RogueResTheme> Pack(FlatBufferBuilder builder, RogueResThemeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RogueResTheme>);
    var _insts = default(VectorOffset);
    if (_o.Insts != null) {
      var __insts = _o.Insts.ToArray();
      _insts = CreateInstsVector(builder, __insts);
    }
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _view_name = _o.ViewName == null ? default(StringOffset) : builder.CreateString(_o.ViewName);
    var _coverf = _o.Coverf == null ? default(StringOffset) : builder.CreateString(_o.Coverf);
    var _coverm = _o.Coverm == null ? default(StringOffset) : builder.CreateString(_o.Coverm);
    return CreateRogueResTheme(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.TimerId,
      _insts,
      _o.SkillItem,
      _o.SkillMax,
      _o.PointItem,
      _o.PointItemMax,
      _o.ShopId,
      _name,
      _o.HelpId,
      _icon,
      _view_name,
      _coverf,
      _coverm);
  }
}

public class RogueResThemeT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("timer_id")]
  public int TimerId { get; set; }
  [Newtonsoft.Json.JsonProperty("insts")]
  public List<int> Insts { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_item")]
  public int SkillItem { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_max")]
  public int SkillMax { get; set; }
  [Newtonsoft.Json.JsonProperty("point_item")]
  public int PointItem { get; set; }
  [Newtonsoft.Json.JsonProperty("point_item_max")]
  public int PointItemMax { get; set; }
  [Newtonsoft.Json.JsonProperty("shop_id")]
  public int ShopId { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("help_id")]
  public int HelpId { get; set; }
  [Newtonsoft.Json.JsonProperty("icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("view_name")]
  public string ViewName { get; set; }
  [Newtonsoft.Json.JsonProperty("coverf")]
  public string Coverf { get; set; }
  [Newtonsoft.Json.JsonProperty("coverm")]
  public string Coverm { get; set; }

  public RogueResThemeT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.TimerId = 0;
    this.Insts = null;
    this.SkillItem = 0;
    this.SkillMax = 0;
    this.PointItem = 0;
    this.PointItemMax = 0;
    this.ShopId = 0;
    this.Name = null;
    this.HelpId = 0;
    this.Icon = null;
    this.ViewName = null;
    this.Coverf = null;
    this.Coverm = null;
  }
}


static public class RogueResThemeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*TimerId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*Insts*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 12 /*SkillItem*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*SkillMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*PointItem*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*PointItemMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*ShopId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 22 /*Name*/, false)
      && verifier.VerifyField(tablePos, 24 /*HelpId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*Icon*/, false)
      && verifier.VerifyString(tablePos, 28 /*ViewName*/, false)
      && verifier.VerifyString(tablePos, 30 /*Coverf*/, false)
      && verifier.VerifyString(tablePos, 32 /*Coverm*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
