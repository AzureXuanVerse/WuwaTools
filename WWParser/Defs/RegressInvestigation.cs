// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RegressInvestigation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RegressInvestigation GetRootAsRegressInvestigation(ByteBuffer _bb) { return GetRootAsRegressInvestigation(_bb, new RegressInvestigation()); }
  public static RegressInvestigation GetRootAsRegressInvestigation(ByteBuffer _bb, RegressInvestigation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RegressInvestigation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InvestigationType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public bool IfGlobal { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int QuestionnaireId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Reward { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string HyperLink { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHyperLinkBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetHyperLinkBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetHyperLinkArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<WWParser.Defs.RegressInvestigation> CreateRegressInvestigation(FlatBufferBuilder builder,
      int id = 0,
      int investigation_type = 1,
      bool if_global = false,
      int questionnaire_id = 0,
      int reward = 0,
      StringOffset hyper_linkOffset = default(StringOffset)) {
    builder.StartTable(6);
    RegressInvestigation.AddHyperLink(builder, hyper_linkOffset);
    RegressInvestigation.AddReward(builder, reward);
    RegressInvestigation.AddQuestionnaireId(builder, questionnaire_id);
    RegressInvestigation.AddInvestigationType(builder, investigation_type);
    RegressInvestigation.AddId(builder, id);
    RegressInvestigation.AddIfGlobal(builder, if_global);
    return RegressInvestigation.EndRegressInvestigation(builder);
  }

  public static void StartRegressInvestigation(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddInvestigationType(FlatBufferBuilder builder, int investigationType) { builder.AddInt(1, investigationType, 1); }
  public static void AddIfGlobal(FlatBufferBuilder builder, bool ifGlobal) { builder.AddBool(2, ifGlobal, false); }
  public static void AddQuestionnaireId(FlatBufferBuilder builder, int questionnaireId) { builder.AddInt(3, questionnaireId, 0); }
  public static void AddReward(FlatBufferBuilder builder, int reward) { builder.AddInt(4, reward, 0); }
  public static void AddHyperLink(FlatBufferBuilder builder, StringOffset hyperLinkOffset) { builder.AddOffset(5, hyperLinkOffset.Value, 0); }
  public static Offset<WWParser.Defs.RegressInvestigation> EndRegressInvestigation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RegressInvestigation>(o);
  }
  public RegressInvestigationT UnPack() {
    var _o = new RegressInvestigationT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RegressInvestigationT _o) {
    _o.Id = this.Id;
    _o.InvestigationType = this.InvestigationType;
    _o.IfGlobal = this.IfGlobal;
    _o.QuestionnaireId = this.QuestionnaireId;
    _o.Reward = this.Reward;
    _o.HyperLink = this.HyperLink;
  }
  public static Offset<WWParser.Defs.RegressInvestigation> Pack(FlatBufferBuilder builder, RegressInvestigationT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RegressInvestigation>);
    var _hyper_link = _o.HyperLink == null ? default(StringOffset) : builder.CreateString(_o.HyperLink);
    return CreateRegressInvestigation(
      builder,
      _o.Id,
      _o.InvestigationType,
      _o.IfGlobal,
      _o.QuestionnaireId,
      _o.Reward,
      _hyper_link);
  }
}

public class RegressInvestigationT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("investigation_type")]
  public int InvestigationType { get; set; }
  [Newtonsoft.Json.JsonProperty("if_global")]
  public bool IfGlobal { get; set; }
  [Newtonsoft.Json.JsonProperty("questionnaire_id")]
  public int QuestionnaireId { get; set; }
  [Newtonsoft.Json.JsonProperty("reward")]
  public int Reward { get; set; }
  [Newtonsoft.Json.JsonProperty("hyper_link")]
  public string HyperLink { get; set; }

  public RegressInvestigationT() {
    this.Id = 0;
    this.InvestigationType = 1;
    this.IfGlobal = false;
    this.QuestionnaireId = 0;
    this.Reward = 0;
    this.HyperLink = null;
  }
}


static public class RegressInvestigationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*InvestigationType*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*IfGlobal*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*QuestionnaireId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Reward*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 14 /*HyperLink*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
