// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MaterialReplace : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static MaterialReplace GetRootAsMaterialReplace(ByteBuffer _bb) { return GetRootAsMaterialReplace(_bb, new MaterialReplace()); }
  public static MaterialReplace GetRootAsMaterialReplace(ByteBuffer _bb, MaterialReplace obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MaterialReplace __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int GroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowGroupId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SortId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.MaterialReplace> CreateMaterialReplace(FlatBufferBuilder builder,
      int item_id = 0,
      int group_id = 0,
      int show_group_id = 0,
      int sort_id = 0) {
    builder.StartTable(4);
    MaterialReplace.AddSortId(builder, sort_id);
    MaterialReplace.AddShowGroupId(builder, show_group_id);
    MaterialReplace.AddGroupId(builder, group_id);
    MaterialReplace.AddItemId(builder, item_id);
    return MaterialReplace.EndMaterialReplace(builder);
  }

  public static void StartMaterialReplace(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(0, itemId, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, int groupId) { builder.AddInt(1, groupId, 0); }
  public static void AddShowGroupId(FlatBufferBuilder builder, int showGroupId) { builder.AddInt(2, showGroupId, 0); }
  public static void AddSortId(FlatBufferBuilder builder, int sortId) { builder.AddInt(3, sortId, 0); }
  public static Offset<WWParser.Defs.MaterialReplace> EndMaterialReplace(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.MaterialReplace>(o);
  }
  public MaterialReplaceT UnPack() {
    var _o = new MaterialReplaceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MaterialReplaceT _o) {
    _o.ItemId = this.ItemId;
    _o.GroupId = this.GroupId;
    _o.ShowGroupId = this.ShowGroupId;
    _o.SortId = this.SortId;
  }
  public static Offset<WWParser.Defs.MaterialReplace> Pack(FlatBufferBuilder builder, MaterialReplaceT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.MaterialReplace>);
    return CreateMaterialReplace(
      builder,
      _o.ItemId,
      _o.GroupId,
      _o.ShowGroupId,
      _o.SortId);
  }
}

public class MaterialReplaceT
{
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("group_id")]
  public int GroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("show_group_id")]
  public int ShowGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("sort_id")]
  public int SortId { get; set; }

  public MaterialReplaceT() {
    this.ItemId = 0;
    this.GroupId = 0;
    this.ShowGroupId = 0;
    this.SortId = 0;
  }
}


static public class MaterialReplaceVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*GroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ShowGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*SortId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
