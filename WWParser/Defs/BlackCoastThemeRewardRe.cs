// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BlackCoastThemeRewardRe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static BlackCoastThemeRewardRe GetRootAsBlackCoastThemeRewardRe(ByteBuffer _bb) { return GetRootAsBlackCoastThemeRewardRe(_bb, new BlackCoastThemeRewardRe()); }
  public static BlackCoastThemeRewardRe GetRootAsBlackCoastThemeRewardRe(ByteBuffer _bb, BlackCoastThemeRewardRe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BlackCoastThemeRewardRe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActivityId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Active { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.BlackCoastThemeRewardRe> CreateBlackCoastThemeRewardRe(FlatBufferBuilder builder,
      int id = 0,
      int activity_id = 0,
      int item_id = 0,
      int active = 0,
      int drop_id = 0) {
    builder.StartTable(5);
    BlackCoastThemeRewardRe.AddDropId(builder, drop_id);
    BlackCoastThemeRewardRe.AddActive(builder, active);
    BlackCoastThemeRewardRe.AddItemId(builder, item_id);
    BlackCoastThemeRewardRe.AddActivityId(builder, activity_id);
    BlackCoastThemeRewardRe.AddId(builder, id);
    return BlackCoastThemeRewardRe.EndBlackCoastThemeRewardRe(builder);
  }

  public static void StartBlackCoastThemeRewardRe(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddActivityId(FlatBufferBuilder builder, int activityId) { builder.AddInt(1, activityId, 0); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(2, itemId, 0); }
  public static void AddActive(FlatBufferBuilder builder, int active) { builder.AddInt(3, active, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(4, dropId, 0); }
  public static Offset<WWParser.Defs.BlackCoastThemeRewardRe> EndBlackCoastThemeRewardRe(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.BlackCoastThemeRewardRe>(o);
  }
  public BlackCoastThemeRewardReT UnPack() {
    var _o = new BlackCoastThemeRewardReT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BlackCoastThemeRewardReT _o) {
    _o.Id = this.Id;
    _o.ActivityId = this.ActivityId;
    _o.ItemId = this.ItemId;
    _o.Active = this.Active;
    _o.DropId = this.DropId;
  }
  public static Offset<WWParser.Defs.BlackCoastThemeRewardRe> Pack(FlatBufferBuilder builder, BlackCoastThemeRewardReT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.BlackCoastThemeRewardRe>);
    return CreateBlackCoastThemeRewardRe(
      builder,
      _o.Id,
      _o.ActivityId,
      _o.ItemId,
      _o.Active,
      _o.DropId);
  }
}

public class BlackCoastThemeRewardReT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("activity_id")]
  public int ActivityId { get; set; }
  [Newtonsoft.Json.JsonProperty("item_id")]
  public int ItemId { get; set; }
  [Newtonsoft.Json.JsonProperty("active")]
  public int Active { get; set; }
  [Newtonsoft.Json.JsonProperty("drop_id")]
  public int DropId { get; set; }

  public BlackCoastThemeRewardReT() {
    this.Id = 0;
    this.ActivityId = 0;
    this.ItemId = 0;
    this.Active = 0;
    this.DropId = 0;
  }
}


static public class BlackCoastThemeRewardReVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ActivityId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Active*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*DropId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
