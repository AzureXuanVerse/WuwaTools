// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SkillLevel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SkillLevel GetRootAsSkillLevel(ByteBuffer _bb) { return GetRootAsSkillLevel(_bb, new SkillLevel()); }
  public static SkillLevel GetRootAsSkillLevel(ByteBuffer _bb, SkillLevel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkillLevel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillLevelGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string LevelNewDescribe { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLevelNewDescribeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetLevelNewDescribeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetLevelNewDescribeArray() { return __p.__vector_as_array<byte>(10); }
  public WWParser.Defs.DicIntInt? Consume(int j) { int o = __p.__offset(12); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConsumeLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int Condition { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.SkillLevel> CreateSkillLevel(FlatBufferBuilder builder,
      int id = 0,
      int skill_level_group_id = 0,
      int skill_id = 0,
      StringOffset level_new_describeOffset = default(StringOffset),
      VectorOffset consumeOffset = default(VectorOffset),
      int condition = 0) {
    builder.StartTable(6);
    SkillLevel.AddCondition(builder, condition);
    SkillLevel.AddConsume(builder, consumeOffset);
    SkillLevel.AddLevelNewDescribe(builder, level_new_describeOffset);
    SkillLevel.AddSkillId(builder, skill_id);
    SkillLevel.AddSkillLevelGroupId(builder, skill_level_group_id);
    SkillLevel.AddId(builder, id);
    return SkillLevel.EndSkillLevel(builder);
  }

  public static void StartSkillLevel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddSkillLevelGroupId(FlatBufferBuilder builder, int skillLevelGroupId) { builder.AddInt(1, skillLevelGroupId, 0); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(2, skillId, 0); }
  public static void AddLevelNewDescribe(FlatBufferBuilder builder, StringOffset levelNewDescribeOffset) { builder.AddOffset(3, levelNewDescribeOffset.Value, 0); }
  public static void AddConsume(FlatBufferBuilder builder, VectorOffset consumeOffset) { builder.AddOffset(4, consumeOffset.Value, 0); }
  public static VectorOffset CreateConsumeVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConsumeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartConsumeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCondition(FlatBufferBuilder builder, int condition) { builder.AddInt(5, condition, 0); }
  public static Offset<WWParser.Defs.SkillLevel> EndSkillLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.SkillLevel>(o);
  }
  public SkillLevelT UnPack() {
    var _o = new SkillLevelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SkillLevelT _o) {
    _o.Id = this.Id;
    _o.SkillLevelGroupId = this.SkillLevelGroupId;
    _o.SkillId = this.SkillId;
    _o.LevelNewDescribe = this.LevelNewDescribe;
    _o.Consume = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.ConsumeLength; ++_j) {_o.Consume.Add(this.Consume(_j).HasValue ? this.Consume(_j).Value.UnPack() : null);}
    _o.Condition = this.Condition;
  }
  public static Offset<WWParser.Defs.SkillLevel> Pack(FlatBufferBuilder builder, SkillLevelT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.SkillLevel>);
    var _level_new_describe = _o.LevelNewDescribe == null ? default(StringOffset) : builder.CreateString(_o.LevelNewDescribe);
    var _consume = default(VectorOffset);
    if (_o.Consume != null) {
      var __consume = new Offset<WWParser.Defs.DicIntInt>[_o.Consume.Count];
      for (var _j = 0; _j < __consume.Length; ++_j) { __consume[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.Consume[_j]); }
      _consume = CreateConsumeVector(builder, __consume);
    }
    return CreateSkillLevel(
      builder,
      _o.Id,
      _o.SkillLevelGroupId,
      _o.SkillId,
      _level_new_describe,
      _consume,
      _o.Condition);
  }
}

public class SkillLevelT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_level_group_id")]
  public int SkillLevelGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_id")]
  public int SkillId { get; set; }
  [Newtonsoft.Json.JsonProperty("level_new_describe")]
  public string LevelNewDescribe { get; set; }
  [Newtonsoft.Json.JsonProperty("consume")]
  public List<WWParser.Defs.DicIntIntT> Consume { get; set; }
  [Newtonsoft.Json.JsonProperty("condition")]
  public int Condition { get; set; }

  public SkillLevelT() {
    this.Id = 0;
    this.SkillLevelGroupId = 0;
    this.SkillId = 0;
    this.LevelNewDescribe = null;
    this.Consume = null;
    this.Condition = 0;
  }
}


static public class SkillLevelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*SkillLevelGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*SkillId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*LevelNewDescribe*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 12 /*Consume*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 14 /*Condition*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
