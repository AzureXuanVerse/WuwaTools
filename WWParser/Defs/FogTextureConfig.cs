// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FogTextureConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static FogTextureConfig GetRootAsFogTextureConfig(ByteBuffer _bb) { return GetRootAsFogTextureConfig(_bb, new FogTextureConfig()); }
  public static FogTextureConfig GetRootAsFogTextureConfig(ByteBuffer _bb, FogTextureConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FogTextureConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Block { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBlockBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBlockBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBlockArray() { return __p.__vector_as_array<byte>(6); }
  public int MapId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)8; } }
  public int GravityFlip { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public string MapTilePath { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMapTilePathBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetMapTilePathBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMapTilePathArray() { return __p.__vector_as_array<byte>(12); }
  public string MiniMapTilePath { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMiniMapTilePathBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetMiniMapTilePathBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetMiniMapTilePathArray() { return __p.__vector_as_array<byte>(14); }
  public string HdMapTilePath { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHdMapTilePathBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetHdMapTilePathBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetHdMapTilePathArray() { return __p.__vector_as_array<byte>(16); }
  public string FogTilePath { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFogTilePathBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetFogTilePathBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetFogTilePathArray() { return __p.__vector_as_array<byte>(18); }
  public string MiniFogTilePath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMiniFogTilePathBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetMiniFogTilePathBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMiniFogTilePathArray() { return __p.__vector_as_array<byte>(20); }
  public int SubMapGroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.FogTextureConfig> CreateFogTextureConfig(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset blockOffset = default(StringOffset),
      int map_id = 8,
      int gravity_flip = 1,
      StringOffset map_tile_pathOffset = default(StringOffset),
      StringOffset mini_map_tile_pathOffset = default(StringOffset),
      StringOffset hd_map_tile_pathOffset = default(StringOffset),
      StringOffset fog_tile_pathOffset = default(StringOffset),
      StringOffset mini_fog_tile_pathOffset = default(StringOffset),
      int sub_map_group_id = 0) {
    builder.StartTable(10);
    FogTextureConfig.AddSubMapGroupId(builder, sub_map_group_id);
    FogTextureConfig.AddMiniFogTilePath(builder, mini_fog_tile_pathOffset);
    FogTextureConfig.AddFogTilePath(builder, fog_tile_pathOffset);
    FogTextureConfig.AddHdMapTilePath(builder, hd_map_tile_pathOffset);
    FogTextureConfig.AddMiniMapTilePath(builder, mini_map_tile_pathOffset);
    FogTextureConfig.AddMapTilePath(builder, map_tile_pathOffset);
    FogTextureConfig.AddGravityFlip(builder, gravity_flip);
    FogTextureConfig.AddMapId(builder, map_id);
    FogTextureConfig.AddBlock(builder, blockOffset);
    FogTextureConfig.AddId(builder, idOffset);
    return FogTextureConfig.EndFogTextureConfig(builder);
  }

  public static void StartFogTextureConfig(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddBlock(FlatBufferBuilder builder, StringOffset blockOffset) { builder.AddOffset(1, blockOffset.Value, 0); }
  public static void AddMapId(FlatBufferBuilder builder, int mapId) { builder.AddInt(2, mapId, 8); }
  public static void AddGravityFlip(FlatBufferBuilder builder, int gravityFlip) { builder.AddInt(3, gravityFlip, 1); }
  public static void AddMapTilePath(FlatBufferBuilder builder, StringOffset mapTilePathOffset) { builder.AddOffset(4, mapTilePathOffset.Value, 0); }
  public static void AddMiniMapTilePath(FlatBufferBuilder builder, StringOffset miniMapTilePathOffset) { builder.AddOffset(5, miniMapTilePathOffset.Value, 0); }
  public static void AddHdMapTilePath(FlatBufferBuilder builder, StringOffset hdMapTilePathOffset) { builder.AddOffset(6, hdMapTilePathOffset.Value, 0); }
  public static void AddFogTilePath(FlatBufferBuilder builder, StringOffset fogTilePathOffset) { builder.AddOffset(7, fogTilePathOffset.Value, 0); }
  public static void AddMiniFogTilePath(FlatBufferBuilder builder, StringOffset miniFogTilePathOffset) { builder.AddOffset(8, miniFogTilePathOffset.Value, 0); }
  public static void AddSubMapGroupId(FlatBufferBuilder builder, int subMapGroupId) { builder.AddInt(9, subMapGroupId, 0); }
  public static Offset<WWParser.Defs.FogTextureConfig> EndFogTextureConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.FogTextureConfig>(o);
  }
  public FogTextureConfigT UnPack() {
    var _o = new FogTextureConfigT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FogTextureConfigT _o) {
    _o.Id = this.Id;
    _o.Block = this.Block;
    _o.MapId = this.MapId;
    _o.GravityFlip = this.GravityFlip;
    _o.MapTilePath = this.MapTilePath;
    _o.MiniMapTilePath = this.MiniMapTilePath;
    _o.HdMapTilePath = this.HdMapTilePath;
    _o.FogTilePath = this.FogTilePath;
    _o.MiniFogTilePath = this.MiniFogTilePath;
    _o.SubMapGroupId = this.SubMapGroupId;
  }
  public static Offset<WWParser.Defs.FogTextureConfig> Pack(FlatBufferBuilder builder, FogTextureConfigT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.FogTextureConfig>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _block = _o.Block == null ? default(StringOffset) : builder.CreateString(_o.Block);
    var _map_tile_path = _o.MapTilePath == null ? default(StringOffset) : builder.CreateString(_o.MapTilePath);
    var _mini_map_tile_path = _o.MiniMapTilePath == null ? default(StringOffset) : builder.CreateString(_o.MiniMapTilePath);
    var _hd_map_tile_path = _o.HdMapTilePath == null ? default(StringOffset) : builder.CreateString(_o.HdMapTilePath);
    var _fog_tile_path = _o.FogTilePath == null ? default(StringOffset) : builder.CreateString(_o.FogTilePath);
    var _mini_fog_tile_path = _o.MiniFogTilePath == null ? default(StringOffset) : builder.CreateString(_o.MiniFogTilePath);
    return CreateFogTextureConfig(
      builder,
      _id,
      _block,
      _o.MapId,
      _o.GravityFlip,
      _map_tile_path,
      _mini_map_tile_path,
      _hd_map_tile_path,
      _fog_tile_path,
      _mini_fog_tile_path,
      _o.SubMapGroupId);
  }
}

public class FogTextureConfigT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public string Id { get; set; }
  [Newtonsoft.Json.JsonProperty("block")]
  public string Block { get; set; }
  [Newtonsoft.Json.JsonProperty("map_id")]
  public int MapId { get; set; }
  [Newtonsoft.Json.JsonProperty("gravity_flip")]
  public int GravityFlip { get; set; }
  [Newtonsoft.Json.JsonProperty("map_tile_path")]
  public string MapTilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("mini_map_tile_path")]
  public string MiniMapTilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("hd_map_tile_path")]
  public string HdMapTilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("fog_tile_path")]
  public string FogTilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("mini_fog_tile_path")]
  public string MiniFogTilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("sub_map_group_id")]
  public int SubMapGroupId { get; set; }

  public FogTextureConfigT() {
    this.Id = null;
    this.Block = null;
    this.MapId = 8;
    this.GravityFlip = 1;
    this.MapTilePath = null;
    this.MiniMapTilePath = null;
    this.HdMapTilePath = null;
    this.FogTilePath = null;
    this.MiniFogTilePath = null;
    this.SubMapGroupId = 0;
  }
}


static public class FogTextureConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Block*/, false)
      && verifier.VerifyField(tablePos, 8 /*MapId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*GravityFlip*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 12 /*MapTilePath*/, false)
      && verifier.VerifyString(tablePos, 14 /*MiniMapTilePath*/, false)
      && verifier.VerifyString(tablePos, 16 /*HdMapTilePath*/, false)
      && verifier.VerifyString(tablePos, 18 /*FogTilePath*/, false)
      && verifier.VerifyString(tablePos, 20 /*MiniFogTilePath*/, false)
      && verifier.VerifyField(tablePos, 22 /*SubMapGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
