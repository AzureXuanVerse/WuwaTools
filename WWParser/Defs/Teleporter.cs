// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Teleporter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Teleporter GetRootAsTeleporter(ByteBuffer _bb) { return GetRootAsTeleporter(_bb, new Teleporter()); }
  public static Teleporter GetRootAsTeleporter(ByteBuffer _bb, Teleporter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Teleporter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MapId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ObjectId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FogId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TeleportEntityConfigId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Plot { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlotBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetPlotBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetPlotArray() { return __p.__vector_as_array<byte>(16); }
  public int AfterNetworkAction { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool ShowWorldMap { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<WWParser.Defs.Teleporter> CreateTeleporter(FlatBufferBuilder builder,
      int id = 0,
      int map_id = 0,
      int object_id = 0,
      int fog_id = 0,
      int type = 0,
      int teleport_entity_config_id = 0,
      StringOffset plotOffset = default(StringOffset),
      int after_network_action = 0,
      bool show_world_map = false) {
    builder.StartTable(9);
    Teleporter.AddAfterNetworkAction(builder, after_network_action);
    Teleporter.AddPlot(builder, plotOffset);
    Teleporter.AddTeleportEntityConfigId(builder, teleport_entity_config_id);
    Teleporter.AddType(builder, type);
    Teleporter.AddFogId(builder, fog_id);
    Teleporter.AddObjectId(builder, object_id);
    Teleporter.AddMapId(builder, map_id);
    Teleporter.AddId(builder, id);
    Teleporter.AddShowWorldMap(builder, show_world_map);
    return Teleporter.EndTeleporter(builder);
  }

  public static void StartTeleporter(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddMapId(FlatBufferBuilder builder, int mapId) { builder.AddInt(1, mapId, 0); }
  public static void AddObjectId(FlatBufferBuilder builder, int objectId) { builder.AddInt(2, objectId, 0); }
  public static void AddFogId(FlatBufferBuilder builder, int fogId) { builder.AddInt(3, fogId, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(4, type, 0); }
  public static void AddTeleportEntityConfigId(FlatBufferBuilder builder, int teleportEntityConfigId) { builder.AddInt(5, teleportEntityConfigId, 0); }
  public static void AddPlot(FlatBufferBuilder builder, StringOffset plotOffset) { builder.AddOffset(6, plotOffset.Value, 0); }
  public static void AddAfterNetworkAction(FlatBufferBuilder builder, int afterNetworkAction) { builder.AddInt(7, afterNetworkAction, 0); }
  public static void AddShowWorldMap(FlatBufferBuilder builder, bool showWorldMap) { builder.AddBool(8, showWorldMap, false); }
  public static Offset<WWParser.Defs.Teleporter> EndTeleporter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.Teleporter>(o);
  }
  public TeleporterT UnPack() {
    var _o = new TeleporterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TeleporterT _o) {
    _o.Id = this.Id;
    _o.MapId = this.MapId;
    _o.ObjectId = this.ObjectId;
    _o.FogId = this.FogId;
    _o.Type = this.Type;
    _o.TeleportEntityConfigId = this.TeleportEntityConfigId;
    _o.Plot = this.Plot;
    _o.AfterNetworkAction = this.AfterNetworkAction;
    _o.ShowWorldMap = this.ShowWorldMap;
  }
  public static Offset<WWParser.Defs.Teleporter> Pack(FlatBufferBuilder builder, TeleporterT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.Teleporter>);
    var _plot = _o.Plot == null ? default(StringOffset) : builder.CreateString(_o.Plot);
    return CreateTeleporter(
      builder,
      _o.Id,
      _o.MapId,
      _o.ObjectId,
      _o.FogId,
      _o.Type,
      _o.TeleportEntityConfigId,
      _plot,
      _o.AfterNetworkAction,
      _o.ShowWorldMap);
  }
}

public class TeleporterT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("map_id")]
  public int MapId { get; set; }
  [Newtonsoft.Json.JsonProperty("object_id")]
  public int ObjectId { get; set; }
  [Newtonsoft.Json.JsonProperty("fog_id")]
  public int FogId { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public int Type { get; set; }
  [Newtonsoft.Json.JsonProperty("teleport_entity_config_id")]
  public int TeleportEntityConfigId { get; set; }
  [Newtonsoft.Json.JsonProperty("plot")]
  public string Plot { get; set; }
  [Newtonsoft.Json.JsonProperty("after_network_action")]
  public int AfterNetworkAction { get; set; }
  [Newtonsoft.Json.JsonProperty("show_world_map")]
  public bool ShowWorldMap { get; set; }

  public TeleporterT() {
    this.Id = 0;
    this.MapId = 0;
    this.ObjectId = 0;
    this.FogId = 0;
    this.Type = 0;
    this.TeleportEntityConfigId = 0;
    this.Plot = null;
    this.AfterNetworkAction = 0;
    this.ShowWorldMap = false;
  }
}


static public class TeleporterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*MapId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ObjectId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*FogId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*TeleportEntityConfigId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 16 /*Plot*/, false)
      && verifier.VerifyField(tablePos, 18 /*AfterNetworkAction*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*ShowWorldMap*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
