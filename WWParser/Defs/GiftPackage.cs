// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GiftPackage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GiftPackage GetRootAsGiftPackage(ByteBuffer _bb) { return GetRootAsGiftPackage(_bb, new GiftPackage()); }
  public static GiftPackage GetRootAsGiftPackage(ByteBuffer _bb, GiftPackage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GiftPackage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public WWParser.Defs.GiftType Type { get { int o = __p.__offset(6); return o != 0 ? (WWParser.Defs.GiftType)__p.bb.GetInt(o + __p.bb_pos) : WWParser.Defs.GiftType.Fixed; } }
  public WWParser.Defs.DicIntInt? Content(int j) { int o = __p.__offset(8); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ContentLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WWParser.Defs.DicIntInt? Weight(int j) { int o = __p.__offset(10); return o != 0 ? (WWParser.Defs.DicIntInt?)(new WWParser.Defs.DicIntInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int WeightLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int AvailableNum { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowType { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.GiftPackage> CreateGiftPackage(FlatBufferBuilder builder,
      int id = 0,
      WWParser.Defs.GiftType type = WWParser.Defs.GiftType.Fixed,
      VectorOffset contentOffset = default(VectorOffset),
      VectorOffset weightOffset = default(VectorOffset),
      int available_num = 0,
      int show_type = 0) {
    builder.StartTable(6);
    GiftPackage.AddShowType(builder, show_type);
    GiftPackage.AddAvailableNum(builder, available_num);
    GiftPackage.AddWeight(builder, weightOffset);
    GiftPackage.AddContent(builder, contentOffset);
    GiftPackage.AddType(builder, type);
    GiftPackage.AddId(builder, id);
    return GiftPackage.EndGiftPackage(builder);
  }

  public static void StartGiftPackage(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddType(FlatBufferBuilder builder, WWParser.Defs.GiftType type) { builder.AddInt(1, (int)type, 0); }
  public static void AddContent(FlatBufferBuilder builder, VectorOffset contentOffset) { builder.AddOffset(2, contentOffset.Value, 0); }
  public static VectorOffset CreateContentVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateContentVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateContentVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateContentVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartContentVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight(FlatBufferBuilder builder, VectorOffset weightOffset) { builder.AddOffset(3, weightOffset.Value, 0); }
  public static VectorOffset CreateWeightVector(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateWeightVectorBlock(FlatBufferBuilder builder, Offset<WWParser.Defs.DicIntInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateWeightVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<WWParser.Defs.DicIntInt>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateWeightVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<WWParser.Defs.DicIntInt>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartWeightVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAvailableNum(FlatBufferBuilder builder, int availableNum) { builder.AddInt(4, availableNum, 0); }
  public static void AddShowType(FlatBufferBuilder builder, int showType) { builder.AddInt(5, showType, 0); }
  public static Offset<WWParser.Defs.GiftPackage> EndGiftPackage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.GiftPackage>(o);
  }
  public GiftPackageT UnPack() {
    var _o = new GiftPackageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GiftPackageT _o) {
    _o.Id = this.Id;
    _o.Type = this.Type;
    _o.Content = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.ContentLength; ++_j) {_o.Content.Add(this.Content(_j).HasValue ? this.Content(_j).Value.UnPack() : null);}
    _o.Weight = new List<WWParser.Defs.DicIntIntT>();
    for (var _j = 0; _j < this.WeightLength; ++_j) {_o.Weight.Add(this.Weight(_j).HasValue ? this.Weight(_j).Value.UnPack() : null);}
    _o.AvailableNum = this.AvailableNum;
    _o.ShowType = this.ShowType;
  }
  public static Offset<WWParser.Defs.GiftPackage> Pack(FlatBufferBuilder builder, GiftPackageT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.GiftPackage>);
    var _content = default(VectorOffset);
    if (_o.Content != null) {
      var __content = new Offset<WWParser.Defs.DicIntInt>[_o.Content.Count];
      for (var _j = 0; _j < __content.Length; ++_j) { __content[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.Content[_j]); }
      _content = CreateContentVector(builder, __content);
    }
    var _weight = default(VectorOffset);
    if (_o.Weight != null) {
      var __weight = new Offset<WWParser.Defs.DicIntInt>[_o.Weight.Count];
      for (var _j = 0; _j < __weight.Length; ++_j) { __weight[_j] = WWParser.Defs.DicIntInt.Pack(builder, _o.Weight[_j]); }
      _weight = CreateWeightVector(builder, __weight);
    }
    return CreateGiftPackage(
      builder,
      _o.Id,
      _o.Type,
      _content,
      _weight,
      _o.AvailableNum,
      _o.ShowType);
  }
}

public class GiftPackageT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("type")]
  public WWParser.Defs.GiftType Type { get; set; }
  [Newtonsoft.Json.JsonProperty("content")]
  public List<WWParser.Defs.DicIntIntT> Content { get; set; }
  [Newtonsoft.Json.JsonProperty("weight")]
  public List<WWParser.Defs.DicIntIntT> Weight { get; set; }
  [Newtonsoft.Json.JsonProperty("available_num")]
  public int AvailableNum { get; set; }
  [Newtonsoft.Json.JsonProperty("show_type")]
  public int ShowType { get; set; }

  public GiftPackageT() {
    this.Id = 0;
    this.Type = WWParser.Defs.GiftType.Fixed;
    this.Content = null;
    this.Weight = null;
    this.AvailableNum = 0;
    this.ShowType = 0;
  }
}


static public class GiftPackageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 4 /*WWParser.Defs.GiftType*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*Content*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 10 /*Weight*/, WWParser.Defs.DicIntIntVerify.Verify, false)
      && verifier.VerifyField(tablePos, 12 /*AvailableNum*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*ShowType*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
