// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WWParser.Defs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoleTrainingDegree : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoleTrainingDegree GetRootAsRoleTrainingDegree(ByteBuffer _bb) { return GetRootAsRoleTrainingDegree(_bb, new RoleTrainingDegree()); }
  public static RoleTrainingDegree GetRootAsRoleTrainingDegree(ByteBuffer _bb, RoleTrainingDegree obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleTrainingDegree __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DifficultyLevel { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoleLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int WeaponLevel { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EquipLevel { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillLevel { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<WWParser.Defs.RoleTrainingDegree> CreateRoleTrainingDegree(FlatBufferBuilder builder,
      int difficulty_level = 0,
      int role_level = 0,
      int weapon_level = 0,
      int equip_level = 0,
      int skill_level = 0) {
    builder.StartTable(5);
    RoleTrainingDegree.AddSkillLevel(builder, skill_level);
    RoleTrainingDegree.AddEquipLevel(builder, equip_level);
    RoleTrainingDegree.AddWeaponLevel(builder, weapon_level);
    RoleTrainingDegree.AddRoleLevel(builder, role_level);
    RoleTrainingDegree.AddDifficultyLevel(builder, difficulty_level);
    return RoleTrainingDegree.EndRoleTrainingDegree(builder);
  }

  public static void StartRoleTrainingDegree(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddDifficultyLevel(FlatBufferBuilder builder, int difficultyLevel) { builder.AddInt(0, difficultyLevel, 0); }
  public static void AddRoleLevel(FlatBufferBuilder builder, int roleLevel) { builder.AddInt(1, roleLevel, 0); }
  public static void AddWeaponLevel(FlatBufferBuilder builder, int weaponLevel) { builder.AddInt(2, weaponLevel, 0); }
  public static void AddEquipLevel(FlatBufferBuilder builder, int equipLevel) { builder.AddInt(3, equipLevel, 0); }
  public static void AddSkillLevel(FlatBufferBuilder builder, int skillLevel) { builder.AddInt(4, skillLevel, 0); }
  public static Offset<WWParser.Defs.RoleTrainingDegree> EndRoleTrainingDegree(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WWParser.Defs.RoleTrainingDegree>(o);
  }
  public RoleTrainingDegreeT UnPack() {
    var _o = new RoleTrainingDegreeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleTrainingDegreeT _o) {
    _o.DifficultyLevel = this.DifficultyLevel;
    _o.RoleLevel = this.RoleLevel;
    _o.WeaponLevel = this.WeaponLevel;
    _o.EquipLevel = this.EquipLevel;
    _o.SkillLevel = this.SkillLevel;
  }
  public static Offset<WWParser.Defs.RoleTrainingDegree> Pack(FlatBufferBuilder builder, RoleTrainingDegreeT _o) {
    if (_o == null) return default(Offset<WWParser.Defs.RoleTrainingDegree>);
    return CreateRoleTrainingDegree(
      builder,
      _o.DifficultyLevel,
      _o.RoleLevel,
      _o.WeaponLevel,
      _o.EquipLevel,
      _o.SkillLevel);
  }
}

public class RoleTrainingDegreeT
{
  [Newtonsoft.Json.JsonProperty("difficulty_level")]
  public int DifficultyLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("role_level")]
  public int RoleLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("weapon_level")]
  public int WeaponLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("equip_level")]
  public int EquipLevel { get; set; }
  [Newtonsoft.Json.JsonProperty("skill_level")]
  public int SkillLevel { get; set; }

  public RoleTrainingDegreeT() {
    this.DifficultyLevel = 0;
    this.RoleLevel = 0;
    this.WeaponLevel = 0;
    this.EquipLevel = 0;
    this.SkillLevel = 0;
  }
}


static public class RoleTrainingDegreeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*DifficultyLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*RoleLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*WeaponLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*EquipLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SkillLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
